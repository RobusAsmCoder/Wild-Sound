<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OBJ\STM_BootFlasherMemoryStatic.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OBJ\STM_BootFlasherMemoryStatic.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Tue Jan 21 23:52:38 2020
<BR><P>
<H3>Maximum Stack Usage =         88 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; bflBootProgramBlockType &rArr; bflBootProgramBlock &rArr; bflBootProgramErase &rArr;  bflBootProgramErase (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[16]">bflBootProgramErase</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">bflBootProgramErase</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2]">SystemInit</a> from main.o(i.SystemInit) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[3]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[1]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[25]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[26]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[27]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[28]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[29]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[20]"></a>FLASH_DataCacheReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_DataCacheReset))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[1d]"></a>FLASH_ErasePage</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bootflasherf4.o(i.FLASH_ErasePage))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[7]"></a>FLASH_EraseSector</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, stm32f4xx_flash.o(i.FLASH_EraseSector), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[a]"></a>FLASH_GetStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[1f]"></a>FLASH_InstructionCacheReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_InstructionCacheReset))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[1e]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[9]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
</UL>

<P><STRONG><a name="[1b]"></a>FLASH_Unlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[8]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>

<P><STRONG><a name="[2]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[b]"></a>bflBootBlockAddr</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, bootflasherf4.o(i.bflBootBlockAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bflBootBlockAddr &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockPTR
</UL>

<P><STRONG><a name="[d]"></a>bflBootBlockPTR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bootflasherf4.o(i.bflBootBlockPTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bflBootBlockPTR &rArr; bflBootBlockAddr &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramBlock
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFindByType
</UL>

<P><STRONG><a name="[e]"></a>bflBootBlocks</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, bootflasherf4.o(i.bflBootBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFindByType
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocksGetCRC
</UL>

<P><STRONG><a name="[f]"></a>bflBootBlocksGetCRC</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootBlocksGetCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bflBootBlocksGetCRC &rArr; bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk_CCITT
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
</UL>

<P><STRONG><a name="[11]"></a>bflBootCheckNeedFlashing</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootCheckNeedFlashing))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bflBootCheckNeedFlashing &rArr; bflBootBlocksGetCRC &rArr; bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocksGetCRC
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>bflBootFindByType</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, bootflasherf4.o(i.bflBootFindByType))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bflBootFindByType &rArr; bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockPTR
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramBlockType
</UL>

<P><STRONG><a name="[13]"></a>bflBootFlashDisable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootFlashDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bflBootFlashDisable &rArr; bflFlashEraseAlignBLK &rArr; bflFlashErase
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashEraseAlignBLK
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15]"></a>bflBootProgramBlock</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootProgramBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bflBootProgramBlock &rArr; bflBootProgramErase &rArr;  bflBootProgramErase (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramErase
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockPTR
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramBlockType
</UL>

<P><STRONG><a name="[17]"></a>bflBootProgramBlockType</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootProgramBlockType))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bflBootProgramBlockType &rArr; bflBootProgramBlock &rArr; bflBootProgramErase &rArr;  bflBootProgramErase (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramBlock
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFindByType
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16]"></a>bflBootProgramErase</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, bootflasherf4.o(i.bflBootProgramErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = bflBootProgramErase &rArr;  bflBootProgramErase (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashEraseAlignBLK
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashCompareBlock
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramErase
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramErase
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramBlock
</UL>

<P><STRONG><a name="[18]"></a>bflFlashCompareBlock</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, bootflasherf4.o(i.bflFlashCompareBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bflFlashCompareBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramErase
</UL>

<P><STRONG><a name="[1a]"></a>bflFlashErase</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflFlashErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bflFlashErase
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_InstructionCacheReset
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DataCacheReset
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashEraseAlignBLK
</UL>

<P><STRONG><a name="[14]"></a>bflFlashEraseAlignBLK</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, bootflasherf4.o(i.bflFlashEraseAlignBLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bflFlashEraseAlignBLK &rArr; bflFlashErase
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFlashDisable
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramErase
</UL>

<P><STRONG><a name="[19]"></a>bflFlashWriteBlock</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, bootflasherf4.o(i.bflFlashWriteBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_InstructionCacheReset
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DataCacheReset
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramErase
</UL>

<P><STRONG><a name="[21]"></a>crc16_blk</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rb_crc16.o(i.crc16_blk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc16_blk
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk_CCITT
</UL>

<P><STRONG><a name="[10]"></a>crc16_blk_CCITT</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rb_crc16.o(i.crc16_blk_CCITT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc16_blk_CCITT &rArr; crc16_blk
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocksGetCRC
</UL>

<P><STRONG><a name="[22]"></a>crc16_byte</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rb_crc16.o(i.crc16_byte))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk
</UL>

<P><STRONG><a name="[23]"></a>flashsize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bootflasherf4.o(i.flashsize))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>

<P><STRONG><a name="[c]"></a>flashtop</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, bootflasherf4.o(i.flashtop))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashsize
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFlashDisable
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramBlock
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockAddr
</UL>

<P><STRONG><a name="[1]"></a>main</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = main &rArr; bflBootProgramBlockType &rArr; bflBootProgramBlock &rArr; bflBootProgramErase &rArr;  bflBootProgramErase (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootProgramBlockType
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFlashDisable
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
