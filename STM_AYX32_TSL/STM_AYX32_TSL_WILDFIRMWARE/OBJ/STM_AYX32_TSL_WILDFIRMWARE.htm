<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OBJ\STM_AYX32_TSL_WILDFIRMWARE.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OBJ\STM_AYX32_TSL_WILDFIRMWARE.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Fri Apr 23 17:00:52 2021
<BR><P>
<H3>Maximum Stack Usage =        160 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; PrepareFirmWare &rArr; bflImageFinish &rArr; bflImageAddBlock &rArr; bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2]">SystemInit</a> from main.o(i.SystemInit) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[3]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[1]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[36]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[37]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[38]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[39]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[3a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[3b]"></a>bflBootExtremalExec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bootflasherf4.o(.emb_text), UNUSED)

<P><STRONG><a name="[24]"></a>bflBootExtremalCopyExec</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bootflasherf4.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlock
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlockA
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageStart
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[42]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[2e]"></a>FLASH_DataCacheReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_DataCacheReset))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[a]"></a>FLASH_ErasePage</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, bootflasherf4.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashSectorCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[c]"></a>FLASH_EraseSector</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, stm32f4xx_flash.o(i.FLASH_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[f]"></a>FLASH_GetStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[2d]"></a>FLASH_InstructionCacheReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_InstructionCacheReset))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[2c]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[e]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
</UL>

<P><STRONG><a name="[2a]"></a>FLASH_Unlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[d]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>

<P><STRONG><a name="[12]"></a>GPIO_Init</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioTest
</UL>

<P><STRONG><a name="[1a]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWO
</UL>

<P><STRONG><a name="[19]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWO
</UL>

<P><STRONG><a name="[10]"></a>GpioTest</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, main.o(i.GpioTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GpioTest &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13]"></a>PrepareFirmWare</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, main.o(i.PrepareFirmWare))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = PrepareFirmWare &rArr; bflImageFinish &rArr; bflImageAddBlock &rArr; bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageStart
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlock
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioTest
</UL>

<P><STRONG><a name="[18]"></a>SWO</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.SWO))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SWO
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWO_Step
</UL>

<P><STRONG><a name="[1b]"></a>SWO_Step</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.SWO_Step))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SWO_Step &rArr; SWO
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StupidDelay
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWO
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c]"></a>StupidDelay</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, main.o(i.StupidDelay))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWO_Step
</UL>

<P><STRONG><a name="[2]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[44]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[45]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1d]"></a>bflBootBlockAddr</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, bootflasherf4.o(i.bflBootBlockAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bflBootBlockAddr &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockPTR
</UL>

<P><STRONG><a name="[1f]"></a>bflBootBlockPTR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bootflasherf4.o(i.bflBootBlockPTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bflBootBlockPTR &rArr; bflBootBlockAddr &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFindByType
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlock
</UL>

<P><STRONG><a name="[20]"></a>bflBootBlocks</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, bootflasherf4.o(i.bflBootBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFindByType
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocksGetCRC
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
</UL>

<P><STRONG><a name="[21]"></a>bflBootBlocksGetCRC</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootBlocksGetCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bflBootBlocksGetCRC &rArr; bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk_CCITT
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
</UL>

<P><STRONG><a name="[17]"></a>bflBootCheckNeedFlashing</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootCheckNeedFlashing))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bflBootCheckNeedFlashing &rArr; bflBootBlocksGetCRC &rArr; bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocksGetCRC
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareFirmWare
</UL>

<P><STRONG><a name="[23]"></a>bflBootExtremalExecuteBlock</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootExtremalExecuteBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bflBootExtremalExecuteBlock &rArr; bflBootBlockPTR &rArr; bflBootBlockAddr &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockPTR
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalCopyExec
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlockType
</UL>

<P><STRONG><a name="[25]"></a>bflBootExtremalExecuteBlockType</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootExtremalExecuteBlockType))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bflBootExtremalExecuteBlockType &rArr; bflBootFindByType &rArr; bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFindByType
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>bflBootFindByType</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, bootflasherf4.o(i.bflBootFindByType))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bflBootFindByType &rArr; bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockPTR
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlockType
</UL>

<P><STRONG><a name="[27]"></a>bflBootFlashDisable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootFlashDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bflBootFlashDisable &rArr; bflFlashEraseAlignBLK &rArr; bflFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashEraseAlignBLK
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageStart
</UL>

<P><STRONG><a name="[29]"></a>bflFlashErase</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflFlashErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bflFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_InstructionCacheReset
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DataCacheReset
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashEraseAlignBLK
</UL>

<P><STRONG><a name="[28]"></a>bflFlashEraseAlignBLK</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, bootflasherf4.o(i.bflFlashEraseAlignBLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bflFlashEraseAlignBLK &rArr; bflFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFlashDisable
</UL>

<P><STRONG><a name="[b]"></a>bflFlashSectorCfg</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflFlashSectorCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bflFlashSectorCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[2f]"></a>bflFlashWriteBlock</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, bootflasherf4.o(i.bflFlashWriteBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_InstructionCacheReset
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DataCacheReset
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlockA
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
</UL>

<P><STRONG><a name="[15]"></a>bflImageAddBlock</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, bootflasherf4.o(i.bflImageAddBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bflImageAddBlock &rArr; bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlockA
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareFirmWare
</UL>

<P><STRONG><a name="[30]"></a>bflImageAddBlockA</STRONG> (Thumb, 136 bytes, Stack size 72 bytes, bootflasherf4.o(i.bflImageAddBlockA))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlock
</UL>

<P><STRONG><a name="[16]"></a>bflImageFinish</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, bootflasherf4.o(i.bflImageFinish))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = bflImageFinish &rArr; bflImageAddBlock &rArr; bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk_CCITT
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareFirmWare
</UL>

<P><STRONG><a name="[14]"></a>bflImageStart</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflImageStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bflImageStart &rArr; bflBootFlashDisable &rArr; bflFlashEraseAlignBLK &rArr; bflFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFlashDisable
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareFirmWare
</UL>

<P><STRONG><a name="[32]"></a>crc16_blk</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rb_crc16.o(i.crc16_blk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc16_blk
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk_CCITT
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
</UL>

<P><STRONG><a name="[22]"></a>crc16_blk_CCITT</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rb_crc16.o(i.crc16_blk_CCITT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc16_blk_CCITT &rArr; crc16_blk
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocksGetCRC
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
</UL>

<P><STRONG><a name="[33]"></a>crc16_byte</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rb_crc16.o(i.crc16_byte))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk
</UL>

<P><STRONG><a name="[34]"></a>flashsize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bootflasherf4.o(i.flashsize))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>

<P><STRONG><a name="[1e]"></a>flashtop</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, bootflasherf4.o(i.flashtop))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashsize
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlockA
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFlashDisable
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockAddr
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageStart
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
</UL>

<P><STRONG><a name="[1]"></a>main</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = main &rArr; PrepareFirmWare &rArr; bflImageFinish &rArr; bflImageAddBlock &rArr; bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlockType
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StupidDelay
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWO_Step
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareFirmWare
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioTest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
