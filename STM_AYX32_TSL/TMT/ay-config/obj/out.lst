                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.0 #11195 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _crt_init
                             13 	.globl _t_none
                             14 	.globl _key_disp
                             15 	.globl _menu_disp
                             16 	.globl _msg_dac
                             17 	.globl _msg_dac1
                             18 	.globl _msg_amp_4
                             19 	.globl _msg_amp_3
                             20 	.globl _msg_amp_2
                             21 	.globl _msg_amp_1
                             22 	.globl _msg_mix_3
                             23 	.globl _msg_mix_2
                             24 	.globl _msg_mix_1
                             25 	.globl _msg_set_c
                             26 	.globl _msg_set_b
                             27 	.globl _msg_cust_amp
                             28 	.globl _msg_amp
                             29 	.globl _msg_mix
                             30 	.globl _msg_set
                             31 	.globl _msg_info
                             32 	.globl _msg_info1
                             33 	.globl _msg_fupd1
                             34 	.globl _msg_fupd
                             35 	.globl _msg_save1
                             36 	.globl _msg_save
                             37 	.globl _msg_boot
                             38 	.globl _msg_res
                             39 	.globl _msg_mode
                             40 	.globl _msg_main
                             41 	.globl _wait
                             42 	.globl _play_wav
                             43 	.globl _set_mix
                             44 	.globl _getkey
                             45 	.globl _reset_chip
                             46 	.globl _wait_online
                             47 	.globl _detect_chip
                             48 	.globl _unlock_chip
                             49 	.globl _wait_busy
                             50 	.globl _rd_reg_str
                             51 	.globl _rd_reg_arr
                             52 	.globl _rd_reg32
                             53 	.globl _rd_reg16
                             54 	.globl _rd_reg8
                             55 	.globl _rd_reg
                             56 	.globl _wr_arrpg
                             57 	.globl _wr_arr
                             58 	.globl _wr_data_chunk
                             59 	.globl _wr_reg32
                             60 	.globl _wr_reg8
                             61 	.globl _wr_reg
                             62 	.globl _wr_addr
                             63 	.globl _wr_page
                             64 	.globl _msg
                             65 	.globl _frame
                             66 	.globl _putc
                             67 	.globl _fade
                             68 	.globl _cls
                             69 	.globl _drawc
                             70 	.globl _border
                             71 	.globl _puts
                             72 	.globl _printf
                             73 	.globl _fw_bin_len
                             74 	.globl _c_amp
                             75 	.globl _clk_sel
                             76 	.globl _bus_sel
                             77 	.globl _atb_sel
                             78 	.globl _task
                             79 	.globl _req_unpress
                             80 	.globl _menu
                             81 	.globl _cc
                             82 	.globl _defx
                             83 	.globl _cy
                             84 	.globl _cx
                             85 	.globl _fw_bin
                             86 	.globl _pagsst
                             87 	.globl _wav
                             88 	.globl _res_font6x8_bin
                             89 	.globl _mix_sel_val
                             90 	.globl _bus_sel_txt
                             91 	.globl _atab_sel_txt
                             92 	.globl _clk_sel_txt
                             93 	.globl _putchar
                             94 ;--------------------------------------------------------
                             95 ; special function registers
                             96 ;--------------------------------------------------------
                             97 ;--------------------------------------------------------
                             98 ; ram data
                             99 ;--------------------------------------------------------
                            100 	.area _DATA
   0000                     101 _cx::
   0000                     102 	.ds 1
   0001                     103 _cy::
   0001                     104 	.ds 1
   0002                     105 _defx::
   0002                     106 	.ds 1
   0003                     107 _cc::
   0003                     108 	.ds 1
   0004                     109 _menu::
   0004                     110 	.ds 1
   0005                     111 _req_unpress::
   0005                     112 	.ds 1
   0006                     113 _task::
   0006                     114 	.ds 2
   0008                     115 _atb_sel::
   0008                     116 	.ds 1
   0009                     117 _bus_sel::
   0009                     118 	.ds 1
   000A                     119 _clk_sel::
   000A                     120 	.ds 1
   000B                     121 _c_amp::
   000B                     122 	.ds 64
   004B                     123 _msg_dac1_v_65536_142:
   004B                     124 	.ds 1
   004C                     125 _msg_dac1_d_65536_142:
   004C                     126 	.ds 1
                            127 ;--------------------------------------------------------
                            128 ; ram data
                            129 ;--------------------------------------------------------
                            130 	.area _INITIALIZED
   0000                     131 _fw_bin_len::
   0000                     132 	.ds 2
                            133 ;--------------------------------------------------------
                            134 ; absolute external ram data
                            135 ;--------------------------------------------------------
                            136 	.area _DABS (ABS)
                            137 ;--------------------------------------------------------
                            138 ; global & static initialisations
                            139 ;--------------------------------------------------------
                            140 	.area _HOME
                            141 	.area _GSINIT
                            142 	.area _GSFINAL
                            143 	.area _GSINIT
                            144 ;src/msg.c:389: static u8 v = 0;
   0000 FD 21r4Br00   [14]  145 	ld	iy, #_msg_dac1_v_65536_142
   0004 FD 36 00 00   [19]  146 	ld	0 (iy), #0x00
                            147 ;src/msg.c:390: static bool d = false;
   0008 FD 21r4Cr00   [14]  148 	ld	iy, #_msg_dac1_d_65536_142
   000C FD 36 00 00   [19]  149 	ld	0 (iy), #0x00
                            150 ;--------------------------------------------------------
                            151 ; Home
                            152 ;--------------------------------------------------------
                            153 	.area _HOME
                            154 	.area _HOME
                            155 ;--------------------------------------------------------
                            156 ; code
                            157 ;--------------------------------------------------------
                            158 	.area _CODE
                            159 ;src/screen.c:6: void border(u8 b) __naked
                            160 ;	---------------------------------
                            161 ; Function border
                            162 ; ---------------------------------
   0000                     163 _border::
                            164 ;src/screen.c:15: __endasm;
   0000 21 02 00      [10]  165 	ld	hl, #2
   0003 39            [11]  166 	add	hl, sp
   0004 7E            [ 7]  167 	ld	a, (hl)
   0005 D3 FE         [11]  168 	out	(254), a
   0007 C9            [10]  169 	ret
                            170 ;src/screen.c:16: }
                            171 ;src/screen.c:18: void drawc(u8 c) __naked
                            172 ;	---------------------------------
                            173 ; Function drawc
                            174 ; ---------------------------------
   0008                     175 _drawc::
                            176 ;src/screen.c:170: __endasm;
   0008 21 02 00      [10]  177 	ld	hl, #2
   000B 39            [11]  178 	add	hl, sp
   000C 6E            [ 7]  179 	ld	l, (hl)
   000D 26 00         [ 7]  180 	ld	h, #0
   000F 01r1Dr01      [10]  181 	ld	bc, #_res_font6x8_bin
   0012 29            [11]  182 	add	hl, hl
   0013 29            [11]  183 	add	hl, hl
   0014 29            [11]  184 	add	hl, hl
   0015 09            [11]  185 	add	hl, bc
   0016 3Ar01r00      [13]  186 	ld	a, (#_cy)
   0019 E6 18         [ 7]  187 	and	#0x18
   001B F6 40         [ 7]  188 	or	#0x40
   001D 57            [ 4]  189 	ld	d, a
   001E 3Ar00r00      [13]  190 	ld	a, (#_cx)
   0021 0F            [ 4]  191 	rrca
   0022 0F            [ 4]  192 	rrca
   0023 0F            [ 4]  193 	rrca
   0024 E6 1F         [ 7]  194 	and	#0x1F
   0026 5F            [ 4]  195 	ld	e, a
   0027 3Ar01r00      [13]  196 	ld	a, (#_cy)
   002A E6 07         [ 7]  197 	and	#7
   002C 0F            [ 4]  198 	rrca
   002D 0F            [ 4]  199 	rrca
   002E 0F            [ 4]  200 	rrca
   002F B3            [ 4]  201 	or	e
   0030 5F            [ 4]  202 	ld	e, a
   0031 06 08         [ 7]  203 	ld	b, #8
   0033 3Ar00r00      [13]  204 	ld	a, (#_cx)
   0036 0F            [ 4]  205 	rrca
   0037 0F            [ 4]  206 	rrca
   0038 38 0F         [12]  207 	jr	c, draw26
   003A 0F            [ 4]  208 	rrca
   003B 38 2C         [12]  209 	jr	c, draw4
   003D 0E 03         [ 7]  210 	ld	c, #3
   003F                     211 	  draw0:
   003F 1A            [ 7]  212 	ld	a, (de)
   0040 A1            [ 4]  213 	and	c
   0041 B6            [ 7]  214 	or	(hl)
   0042 12            [ 7]  215 	ld	(de), a
   0043 23            [ 6]  216 	inc	hl
   0044 14            [ 4]  217 	inc	d
   0045 10 F8         [13]  218 	djnz	draw0
   0047 18 10         [12]  219 	jr	drawc_a0
   0049                     220 	  draw26:
   0049 0F            [ 4]  221 	rrca
   004A 38 3F         [12]  222 	jr	c, draw6
   004C                     223 	  draw2:
   004C 7E            [ 7]  224 	ld	a, (hl)
   004D 0F            [ 4]  225 	rrca
   004E 0F            [ 4]  226 	rrca
   004F 4F            [ 4]  227 	ld	c, a
   0050 1A            [ 7]  228 	ld	a, (de)
   0051 E6 C0         [ 7]  229 	and	#0xC0
   0053 B1            [ 4]  230 	or	c
   0054 12            [ 7]  231 	ld	(de), a
   0055 23            [ 6]  232 	inc	hl
   0056 14            [ 4]  233 	inc	d
   0057 10 F3         [13]  234 	djnz	draw2
   0059                     235 	  drawc_a0:
   0059 3Ar01r00      [13]  236 	ld	a, (#_cy)
   005C 0F            [ 4]  237 	rrca
   005D 0F            [ 4]  238 	rrca
   005E 0F            [ 4]  239 	rrca
   005F E6 03         [ 7]  240 	and	#3
   0061 F6 58         [ 7]  241 	or	#0x58
   0063 57            [ 4]  242 	ld	d, a
   0064 3Ar03r00      [13]  243 	ld	a, (#_cc)
   0067 12            [ 7]  244 	ld	(de), a
   0068 C9            [10]  245 	ret
   0069                     246 	  draw4:
   0069 7E            [ 7]  247 	ld	a, (hl)
   006A 07            [ 4]  248 	rlca
   006B 07            [ 4]  249 	rlca
   006C 07            [ 4]  250 	rlca
   006D 07            [ 4]  251 	rlca
   006E E6 0F         [ 7]  252 	and	#0x0F
   0070 4F            [ 4]  253 	ld	c, a
   0071 1A            [ 7]  254 	ld	a, (de)
   0072 E6 F0         [ 7]  255 	and	#0xF0
   0074 B1            [ 4]  256 	or	c
   0075 12            [ 7]  257 	ld	(de), a
   0076 1C            [ 4]  258 	inc	e
   0077 7E            [ 7]  259 	ld	a, (hl)
   0078 07            [ 4]  260 	rlca
   0079 07            [ 4]  261 	rlca
   007A 07            [ 4]  262 	rlca
   007B 07            [ 4]  263 	rlca
   007C E6 C0         [ 7]  264 	and	#0xC0
   007E 4F            [ 4]  265 	ld	c, a
   007F 1A            [ 7]  266 	ld	a, (de)
   0080 E6 3F         [ 7]  267 	and	#0x3F
   0082 B1            [ 4]  268 	or	c
   0083 12            [ 7]  269 	ld	(de), a
   0084 1D            [ 4]  270 	dec	e
   0085 14            [ 4]  271 	inc	d
   0086 23            [ 6]  272 	inc	hl
   0087 10 E0         [13]  273 	djnz	draw4
   0089 18 1C         [12]  274 	jr	drawc_a1
   008B                     275 	  draw6:
   008B 7E            [ 7]  276 	ld	a, (hl)
   008C 07            [ 4]  277 	rlca
   008D 07            [ 4]  278 	rlca
   008E E6 03         [ 7]  279 	and	#0x03
   0090 4F            [ 4]  280 	ld	c, a
   0091 1A            [ 7]  281 	ld	a, (de)
   0092 E6 FC         [ 7]  282 	and	#0xFC
   0094 B1            [ 4]  283 	or	c
   0095 12            [ 7]  284 	ld	(de), a
   0096 1C            [ 4]  285 	inc	e
   0097 7E            [ 7]  286 	ld	a, (hl)
   0098 07            [ 4]  287 	rlca
   0099 07            [ 4]  288 	rlca
   009A E6 F0         [ 7]  289 	and	#0xF0
   009C 4F            [ 4]  290 	ld	c, a
   009D 1A            [ 7]  291 	ld	a, (de)
   009E E6 0F         [ 7]  292 	and	#0x0F
   00A0 B1            [ 4]  293 	or	c
   00A1 12            [ 7]  294 	ld	(de), a
   00A2 1D            [ 4]  295 	dec	e
   00A3 14            [ 4]  296 	inc	d
   00A4 23            [ 6]  297 	inc	hl
   00A5 10 E4         [13]  298 	djnz	draw6
   00A7                     299 	  drawc_a1:
   00A7 3Ar01r00      [13]  300 	ld	a, (#_cy)
   00AA 0F            [ 4]  301 	rrca
   00AB 0F            [ 4]  302 	rrca
   00AC 0F            [ 4]  303 	rrca
   00AD E6 03         [ 7]  304 	and	#3
   00AF F6 58         [ 7]  305 	or	#0x58
   00B1 57            [ 4]  306 	ld	d, a
   00B2 3Ar03r00      [13]  307 	ld	a, (#_cc)
   00B5 12            [ 7]  308 	ld	(de), a
   00B6 1C            [ 4]  309 	inc	e
   00B7 12            [ 7]  310 	ld	(de), a
   00B8 C9            [10]  311 	ret
                            312 ;src/screen.c:171: }
                            313 ;src/screen.c:173: void cls()
                            314 ;	---------------------------------
                            315 ; Function cls
                            316 ; ---------------------------------
   00B9                     317 _cls::
                            318 ;src/screen.c:175: memset((void*)0x4000, 0, 6144);
   00B9 21 00 40      [10]  319 	ld	hl, #0x4000
   00BC 36 00         [10]  320 	ld	(hl), #0x00
   00BE 5D            [ 4]  321 	ld	e, l
   00BF 54            [ 4]  322 	ld	d, h
   00C0 13            [ 6]  323 	inc	de
   00C1 01 FF 17      [10]  324 	ld	bc, #0x17ff
   00C4 ED B0         [21]  325 	ldir
                            326 ;src/screen.c:176: memset((void*)0x5800, 0, 768);
   00C6 21 00 58      [10]  327 	ld	hl, #0x5800
   00C9 36 00         [10]  328 	ld	(hl), #0x00
   00CB 5D            [ 4]  329 	ld	e, l
   00CC 54            [ 4]  330 	ld	d, h
   00CD 13            [ 6]  331 	inc	de
   00CE 01 FF 02      [10]  332 	ld	bc, #0x02ff
   00D1 ED B0         [21]  333 	ldir
                            334 ;src/screen.c:177: defx = 0;
   00D3 21r02r00      [10]  335 	ld	hl,#_defx + 0
   00D6 36 00         [10]  336 	ld	(hl), #0x00
                            337 ;src/screen.c:178: xy(0, 0);
   00D8 21r00r00      [10]  338 	ld	hl,#_cx + 0
   00DB 36 00         [10]  339 	ld	(hl), #0x00
   00DD 21r01r00      [10]  340 	ld	hl,#_cy + 0
   00E0 36 00         [10]  341 	ld	(hl), #0x00
                            342 ;src/screen.c:179: }
   00E2 C9            [10]  343 	ret
   00E3                     344 _clk_sel_txt:
   00E3r81r09               345 	.dw __str_0
   00E5r92r09               346 	.dw __str_1
   00E7rA4r09               347 	.dw __str_2
   00E9rB4r09               348 	.dw __str_3
   00EBrC5r09               349 	.dw __str_4
   00EDrD5r09               350 	.dw __str_5
   00EFrE5r09               351 	.dw __str_6
   00F1rEEr09               352 	.dw __str_7
   00F3                     353 _atab_sel_txt:
   00F3r00r0A               354 	.dw __str_8
   00F5r0Ar0A               355 	.dw __str_9
   00F7r13r0A               356 	.dw __str_10
   00F9r21r0A               357 	.dw __str_11
   00FB                     358 _bus_sel_txt:
   00FBr28r0A               359 	.dw __str_12
   00FDr35r0A               360 	.dw __str_13
   00FFr3Cr0A               361 	.dw __str_14
   0101r44r0A               362 	.dw __str_15
   0103r4Cr0A               363 	.dw __str_16
   0105r54r0A               364 	.dw __str_17
   0107r54r0A               365 	.dw __str_17
   0109r55r0A               366 	.dw __str_18
   010B                     367 _mix_sel_val:
   010B 40                  368 	.db #0x40	; 64
   010C 00                  369 	.db #0x00	; 0
   010D 20                  370 	.db #0x20	; 32
   010E 20                  371 	.db #0x20	; 32
   010F 00                  372 	.db #0x00	; 0
   0110 40                  373 	.db #0x40	; 64
   0111 30                  374 	.db #0x30	; 48	'0'
   0112 10                  375 	.db #0x10	; 16
   0113 20                  376 	.db #0x20	; 32
   0114 20                  377 	.db #0x20	; 32
   0115 10                  378 	.db #0x10	; 16
   0116 30                  379 	.db #0x30	; 48	'0'
   0117 20                  380 	.db #0x20	; 32
   0118 20                  381 	.db #0x20	; 32
   0119 20                  382 	.db #0x20	; 32
   011A 20                  383 	.db #0x20	; 32
   011B 20                  384 	.db #0x20	; 32
   011C 20                  385 	.db #0x20	; 32
   011D                     386 _res_font6x8_bin:
   011D 00                  387 	.db #0x00	; 0
   011E 00                  388 	.db #0x00	; 0
   011F 00                  389 	.db #0x00	; 0
   0120 00                  390 	.db #0x00	; 0
   0121 00                  391 	.db #0x00	; 0
   0122 00                  392 	.db #0x00	; 0
   0123 00                  393 	.db #0x00	; 0
   0124 00                  394 	.db #0x00	; 0
   0125 38                  395 	.db #0x38	; 56	'8'
   0126 44                  396 	.db #0x44	; 68	'D'
   0127 6C                  397 	.db #0x6c	; 108	'l'
   0128 44                  398 	.db #0x44	; 68	'D'
   0129 7C                  399 	.db #0x7c	; 124
   012A 54                  400 	.db #0x54	; 84	'T'
   012B 44                  401 	.db #0x44	; 68	'D'
   012C 38                  402 	.db #0x38	; 56	'8'
   012D 38                  403 	.db #0x38	; 56	'8'
   012E 7C                  404 	.db #0x7c	; 124
   012F 54                  405 	.db #0x54	; 84	'T'
   0130 7C                  406 	.db #0x7c	; 124
   0131 44                  407 	.db #0x44	; 68	'D'
   0132 6C                  408 	.db #0x6c	; 108	'l'
   0133 7C                  409 	.db #0x7c	; 124
   0134 38                  410 	.db #0x38	; 56	'8'
   0135 00                  411 	.db #0x00	; 0
   0136 28                  412 	.db #0x28	; 40
   0137 6C                  413 	.db #0x6c	; 108	'l'
   0138 7C                  414 	.db #0x7c	; 124
   0139 7C                  415 	.db #0x7c	; 124
   013A 38                  416 	.db #0x38	; 56	'8'
   013B 10                  417 	.db #0x10	; 16
   013C 00                  418 	.db #0x00	; 0
   013D 00                  419 	.db #0x00	; 0
   013E 10                  420 	.db #0x10	; 16
   013F 38                  421 	.db #0x38	; 56	'8'
   0140 7C                  422 	.db #0x7c	; 124
   0141 7C                  423 	.db #0x7c	; 124
   0142 38                  424 	.db #0x38	; 56	'8'
   0143 10                  425 	.db #0x10	; 16
   0144 00                  426 	.db #0x00	; 0
   0145 00                  427 	.db #0x00	; 0
   0146 38                  428 	.db #0x38	; 56	'8'
   0147 10                  429 	.db #0x10	; 16
   0148 54                  430 	.db #0x54	; 84	'T'
   0149 7C                  431 	.db #0x7c	; 124
   014A 54                  432 	.db #0x54	; 84	'T'
   014B 10                  433 	.db #0x10	; 16
   014C 38                  434 	.db #0x38	; 56	'8'
   014D 00                  435 	.db #0x00	; 0
   014E 10                  436 	.db #0x10	; 16
   014F 38                  437 	.db #0x38	; 56	'8'
   0150 7C                  438 	.db #0x7c	; 124
   0151 7C                  439 	.db #0x7c	; 124
   0152 7C                  440 	.db #0x7c	; 124
   0153 10                  441 	.db #0x10	; 16
   0154 38                  442 	.db #0x38	; 56	'8'
   0155 00                  443 	.db #0x00	; 0
   0156 00                  444 	.db #0x00	; 0
   0157 30                  445 	.db #0x30	; 48	'0'
   0158 78                  446 	.db #0x78	; 120	'x'
   0159 78                  447 	.db #0x78	; 120	'x'
   015A 30                  448 	.db #0x30	; 48	'0'
   015B 00                  449 	.db #0x00	; 0
   015C 00                  450 	.db #0x00	; 0
   015D FC                  451 	.db #0xfc	; 252
   015E FC                  452 	.db #0xfc	; 252
   015F CC                  453 	.db #0xcc	; 204
   0160 84                  454 	.db #0x84	; 132
   0161 84                  455 	.db #0x84	; 132
   0162 CC                  456 	.db #0xcc	; 204
   0163 FC                  457 	.db #0xfc	; 252
   0164 FC                  458 	.db #0xfc	; 252
   0165 00                  459 	.db #0x00	; 0
   0166 00                  460 	.db #0x00	; 0
   0167 30                  461 	.db #0x30	; 48	'0'
   0168 48                  462 	.db #0x48	; 72	'H'
   0169 48                  463 	.db #0x48	; 72	'H'
   016A 30                  464 	.db #0x30	; 48	'0'
   016B 00                  465 	.db #0x00	; 0
   016C 00                  466 	.db #0x00	; 0
   016D FC                  467 	.db #0xfc	; 252
   016E FC                  468 	.db #0xfc	; 252
   016F CC                  469 	.db #0xcc	; 204
   0170 B4                  470 	.db #0xb4	; 180
   0171 B4                  471 	.db #0xb4	; 180
   0172 CC                  472 	.db #0xcc	; 204
   0173 FC                  473 	.db #0xfc	; 252
   0174 FC                  474 	.db #0xfc	; 252
   0175 1C                  475 	.db #0x1c	; 28
   0176 0C                  476 	.db #0x0c	; 12
   0177 14                  477 	.db #0x14	; 20
   0178 30                  478 	.db #0x30	; 48	'0'
   0179 48                  479 	.db #0x48	; 72	'H'
   017A 48                  480 	.db #0x48	; 72	'H'
   017B 30                  481 	.db #0x30	; 48	'0'
   017C 00                  482 	.db #0x00	; 0
   017D 00                  483 	.db #0x00	; 0
   017E 38                  484 	.db #0x38	; 56	'8'
   017F 44                  485 	.db #0x44	; 68	'D'
   0180 44                  486 	.db #0x44	; 68	'D'
   0181 38                  487 	.db #0x38	; 56	'8'
   0182 10                  488 	.db #0x10	; 16
   0183 38                  489 	.db #0x38	; 56	'8'
   0184 10                  490 	.db #0x10	; 16
   0185 3C                  491 	.db #0x3c	; 60
   0186 24                  492 	.db #0x24	; 36
   0187 3C                  493 	.db #0x3c	; 60
   0188 20                  494 	.db #0x20	; 32
   0189 20                  495 	.db #0x20	; 32
   018A 60                  496 	.db #0x60	; 96
   018B E0                  497 	.db #0xe0	; 224
   018C 60                  498 	.db #0x60	; 96
   018D 7C                  499 	.db #0x7c	; 124
   018E 44                  500 	.db #0x44	; 68	'D'
   018F 7C                  501 	.db #0x7c	; 124
   0190 44                  502 	.db #0x44	; 68	'D'
   0191 44                  503 	.db #0x44	; 68	'D'
   0192 4C                  504 	.db #0x4c	; 76	'L'
   0193 CC                  505 	.db #0xcc	; 204
   0194 C0                  506 	.db #0xc0	; 192
   0195 10                  507 	.db #0x10	; 16
   0196 54                  508 	.db #0x54	; 84	'T'
   0197 38                  509 	.db #0x38	; 56	'8'
   0198 6C                  510 	.db #0x6c	; 108	'l'
   0199 6C                  511 	.db #0x6c	; 108	'l'
   019A 38                  512 	.db #0x38	; 56	'8'
   019B 54                  513 	.db #0x54	; 84	'T'
   019C 10                  514 	.db #0x10	; 16
   019D 00                  515 	.db #0x00	; 0
   019E 40                  516 	.db #0x40	; 64
   019F 60                  517 	.db #0x60	; 96
   01A0 70                  518 	.db #0x70	; 112	'p'
   01A1 78                  519 	.db #0x78	; 120	'x'
   01A2 70                  520 	.db #0x70	; 112	'p'
   01A3 60                  521 	.db #0x60	; 96
   01A4 40                  522 	.db #0x40	; 64
   01A5 00                  523 	.db #0x00	; 0
   01A6 08                  524 	.db #0x08	; 8
   01A7 18                  525 	.db #0x18	; 24
   01A8 38                  526 	.db #0x38	; 56	'8'
   01A9 78                  527 	.db #0x78	; 120	'x'
   01AA 38                  528 	.db #0x38	; 56	'8'
   01AB 18                  529 	.db #0x18	; 24
   01AC 08                  530 	.db #0x08	; 8
   01AD 10                  531 	.db #0x10	; 16
   01AE 38                  532 	.db #0x38	; 56	'8'
   01AF 7C                  533 	.db #0x7c	; 124
   01B0 10                  534 	.db #0x10	; 16
   01B1 10                  535 	.db #0x10	; 16
   01B2 7C                  536 	.db #0x7c	; 124
   01B3 38                  537 	.db #0x38	; 56	'8'
   01B4 10                  538 	.db #0x10	; 16
   01B5 00                  539 	.db #0x00	; 0
   01B6 28                  540 	.db #0x28	; 40
   01B7 28                  541 	.db #0x28	; 40
   01B8 28                  542 	.db #0x28	; 40
   01B9 28                  543 	.db #0x28	; 40
   01BA 00                  544 	.db #0x00	; 0
   01BB 28                  545 	.db #0x28	; 40
   01BC 00                  546 	.db #0x00	; 0
   01BD 00                  547 	.db #0x00	; 0
   01BE 3C                  548 	.db #0x3c	; 60
   01BF 54                  549 	.db #0x54	; 84	'T'
   01C0 54                  550 	.db #0x54	; 84	'T'
   01C1 54                  551 	.db #0x54	; 84	'T'
   01C2 34                  552 	.db #0x34	; 52	'4'
   01C3 14                  553 	.db #0x14	; 20
   01C4 14                  554 	.db #0x14	; 20
   01C5 00                  555 	.db #0x00	; 0
   01C6 38                  556 	.db #0x38	; 56	'8'
   01C7 40                  557 	.db #0x40	; 64
   01C8 30                  558 	.db #0x30	; 48	'0'
   01C9 48                  559 	.db #0x48	; 72	'H'
   01CA 30                  560 	.db #0x30	; 48	'0'
   01CB 08                  561 	.db #0x08	; 8
   01CC 70                  562 	.db #0x70	; 112	'p'
   01CD 00                  563 	.db #0x00	; 0
   01CE 00                  564 	.db #0x00	; 0
   01CF 00                  565 	.db #0x00	; 0
   01D0 00                  566 	.db #0x00	; 0
   01D1 00                  567 	.db #0x00	; 0
   01D2 78                  568 	.db #0x78	; 120	'x'
   01D3 78                  569 	.db #0x78	; 120	'x'
   01D4 00                  570 	.db #0x00	; 0
   01D5 10                  571 	.db #0x10	; 16
   01D6 38                  572 	.db #0x38	; 56	'8'
   01D7 7C                  573 	.db #0x7c	; 124
   01D8 10                  574 	.db #0x10	; 16
   01D9 7C                  575 	.db #0x7c	; 124
   01DA 38                  576 	.db #0x38	; 56	'8'
   01DB 10                  577 	.db #0x10	; 16
   01DC 7C                  578 	.db #0x7c	; 124
   01DD 00                  579 	.db #0x00	; 0
   01DE 10                  580 	.db #0x10	; 16
   01DF 38                  581 	.db #0x38	; 56	'8'
   01E0 7C                  582 	.db #0x7c	; 124
   01E1 10                  583 	.db #0x10	; 16
   01E2 10                  584 	.db #0x10	; 16
   01E3 10                  585 	.db #0x10	; 16
   01E4 10                  586 	.db #0x10	; 16
   01E5 00                  587 	.db #0x00	; 0
   01E6 10                  588 	.db #0x10	; 16
   01E7 10                  589 	.db #0x10	; 16
   01E8 10                  590 	.db #0x10	; 16
   01E9 10                  591 	.db #0x10	; 16
   01EA 7C                  592 	.db #0x7c	; 124
   01EB 38                  593 	.db #0x38	; 56	'8'
   01EC 10                  594 	.db #0x10	; 16
   01ED 00                  595 	.db #0x00	; 0
   01EE 00                  596 	.db #0x00	; 0
   01EF 10                  597 	.db #0x10	; 16
   01F0 08                  598 	.db #0x08	; 8
   01F1 7C                  599 	.db #0x7c	; 124
   01F2 08                  600 	.db #0x08	; 8
   01F3 10                  601 	.db #0x10	; 16
   01F4 00                  602 	.db #0x00	; 0
   01F5 00                  603 	.db #0x00	; 0
   01F6 00                  604 	.db #0x00	; 0
   01F7 10                  605 	.db #0x10	; 16
   01F8 20                  606 	.db #0x20	; 32
   01F9 7C                  607 	.db #0x7c	; 124
   01FA 20                  608 	.db #0x20	; 32
   01FB 10                  609 	.db #0x10	; 16
   01FC 00                  610 	.db #0x00	; 0
   01FD 00                  611 	.db #0x00	; 0
   01FE 00                  612 	.db #0x00	; 0
   01FF 00                  613 	.db #0x00	; 0
   0200 40                  614 	.db #0x40	; 64
   0201 40                  615 	.db #0x40	; 64
   0202 40                  616 	.db #0x40	; 64
   0203 7C                  617 	.db #0x7c	; 124
   0204 00                  618 	.db #0x00	; 0
   0205 00                  619 	.db #0x00	; 0
   0206 00                  620 	.db #0x00	; 0
   0207 48                  621 	.db #0x48	; 72	'H'
   0208 84                  622 	.db #0x84	; 132
   0209 FC                  623 	.db #0xfc	; 252
   020A 84                  624 	.db #0x84	; 132
   020B 48                  625 	.db #0x48	; 72	'H'
   020C 00                  626 	.db #0x00	; 0
   020D 00                  627 	.db #0x00	; 0
   020E 00                  628 	.db #0x00	; 0
   020F 10                  629 	.db #0x10	; 16
   0210 38                  630 	.db #0x38	; 56	'8'
   0211 7C                  631 	.db #0x7c	; 124
   0212 7C                  632 	.db #0x7c	; 124
   0213 00                  633 	.db #0x00	; 0
   0214 00                  634 	.db #0x00	; 0
   0215 00                  635 	.db #0x00	; 0
   0216 00                  636 	.db #0x00	; 0
   0217 7C                  637 	.db #0x7c	; 124
   0218 7C                  638 	.db #0x7c	; 124
   0219 38                  639 	.db #0x38	; 56	'8'
   021A 10                  640 	.db #0x10	; 16
   021B 00                  641 	.db #0x00	; 0
   021C 00                  642 	.db #0x00	; 0
   021D 00                  643 	.db #0x00	; 0
   021E 00                  644 	.db #0x00	; 0
   021F 00                  645 	.db #0x00	; 0
   0220 00                  646 	.db #0x00	; 0
   0221 00                  647 	.db #0x00	; 0
   0222 00                  648 	.db #0x00	; 0
   0223 00                  649 	.db #0x00	; 0
   0224 00                  650 	.db #0x00	; 0
   0225 00                  651 	.db #0x00	; 0
   0226 10                  652 	.db #0x10	; 16
   0227 10                  653 	.db #0x10	; 16
   0228 10                  654 	.db #0x10	; 16
   0229 10                  655 	.db #0x10	; 16
   022A 00                  656 	.db #0x00	; 0
   022B 10                  657 	.db #0x10	; 16
   022C 00                  658 	.db #0x00	; 0
   022D 00                  659 	.db #0x00	; 0
   022E 28                  660 	.db #0x28	; 40
   022F 28                  661 	.db #0x28	; 40
   0230 00                  662 	.db #0x00	; 0
   0231 00                  663 	.db #0x00	; 0
   0232 00                  664 	.db #0x00	; 0
   0233 00                  665 	.db #0x00	; 0
   0234 00                  666 	.db #0x00	; 0
   0235 00                  667 	.db #0x00	; 0
   0236 28                  668 	.db #0x28	; 40
   0237 7C                  669 	.db #0x7c	; 124
   0238 28                  670 	.db #0x28	; 40
   0239 28                  671 	.db #0x28	; 40
   023A 7C                  672 	.db #0x7c	; 124
   023B 28                  673 	.db #0x28	; 40
   023C 00                  674 	.db #0x00	; 0
   023D 00                  675 	.db #0x00	; 0
   023E 10                  676 	.db #0x10	; 16
   023F 7C                  677 	.db #0x7c	; 124
   0240 50                  678 	.db #0x50	; 80	'P'
   0241 7C                  679 	.db #0x7c	; 124
   0242 14                  680 	.db #0x14	; 20
   0243 7C                  681 	.db #0x7c	; 124
   0244 10                  682 	.db #0x10	; 16
   0245 00                  683 	.db #0x00	; 0
   0246 64                  684 	.db #0x64	; 100	'd'
   0247 6C                  685 	.db #0x6c	; 108	'l'
   0248 18                  686 	.db #0x18	; 24
   0249 30                  687 	.db #0x30	; 48	'0'
   024A 6C                  688 	.db #0x6c	; 108	'l'
   024B 4C                  689 	.db #0x4c	; 76	'L'
   024C 00                  690 	.db #0x00	; 0
   024D 00                  691 	.db #0x00	; 0
   024E 10                  692 	.db #0x10	; 16
   024F 28                  693 	.db #0x28	; 40
   0250 10                  694 	.db #0x10	; 16
   0251 2C                  695 	.db #0x2c	; 44
   0252 48                  696 	.db #0x48	; 72	'H'
   0253 34                  697 	.db #0x34	; 52	'4'
   0254 00                  698 	.db #0x00	; 0
   0255 00                  699 	.db #0x00	; 0
   0256 10                  700 	.db #0x10	; 16
   0257 20                  701 	.db #0x20	; 32
   0258 00                  702 	.db #0x00	; 0
   0259 00                  703 	.db #0x00	; 0
   025A 00                  704 	.db #0x00	; 0
   025B 00                  705 	.db #0x00	; 0
   025C 00                  706 	.db #0x00	; 0
   025D 00                  707 	.db #0x00	; 0
   025E 08                  708 	.db #0x08	; 8
   025F 10                  709 	.db #0x10	; 16
   0260 10                  710 	.db #0x10	; 16
   0261 10                  711 	.db #0x10	; 16
   0262 10                  712 	.db #0x10	; 16
   0263 08                  713 	.db #0x08	; 8
   0264 00                  714 	.db #0x00	; 0
   0265 00                  715 	.db #0x00	; 0
   0266 10                  716 	.db #0x10	; 16
   0267 08                  717 	.db #0x08	; 8
   0268 08                  718 	.db #0x08	; 8
   0269 08                  719 	.db #0x08	; 8
   026A 08                  720 	.db #0x08	; 8
   026B 10                  721 	.db #0x10	; 16
   026C 00                  722 	.db #0x00	; 0
   026D 00                  723 	.db #0x00	; 0
   026E 00                  724 	.db #0x00	; 0
   026F 28                  725 	.db #0x28	; 40
   0270 10                  726 	.db #0x10	; 16
   0271 7C                  727 	.db #0x7c	; 124
   0272 10                  728 	.db #0x10	; 16
   0273 28                  729 	.db #0x28	; 40
   0274 00                  730 	.db #0x00	; 0
   0275 00                  731 	.db #0x00	; 0
   0276 00                  732 	.db #0x00	; 0
   0277 10                  733 	.db #0x10	; 16
   0278 10                  734 	.db #0x10	; 16
   0279 7C                  735 	.db #0x7c	; 124
   027A 10                  736 	.db #0x10	; 16
   027B 10                  737 	.db #0x10	; 16
   027C 00                  738 	.db #0x00	; 0
   027D 00                  739 	.db #0x00	; 0
   027E 00                  740 	.db #0x00	; 0
   027F 00                  741 	.db #0x00	; 0
   0280 00                  742 	.db #0x00	; 0
   0281 00                  743 	.db #0x00	; 0
   0282 10                  744 	.db #0x10	; 16
   0283 10                  745 	.db #0x10	; 16
   0284 20                  746 	.db #0x20	; 32
   0285 00                  747 	.db #0x00	; 0
   0286 00                  748 	.db #0x00	; 0
   0287 00                  749 	.db #0x00	; 0
   0288 00                  750 	.db #0x00	; 0
   0289 7C                  751 	.db #0x7c	; 124
   028A 00                  752 	.db #0x00	; 0
   028B 00                  753 	.db #0x00	; 0
   028C 00                  754 	.db #0x00	; 0
   028D 00                  755 	.db #0x00	; 0
   028E 00                  756 	.db #0x00	; 0
   028F 00                  757 	.db #0x00	; 0
   0290 00                  758 	.db #0x00	; 0
   0291 00                  759 	.db #0x00	; 0
   0292 30                  760 	.db #0x30	; 48	'0'
   0293 30                  761 	.db #0x30	; 48	'0'
   0294 00                  762 	.db #0x00	; 0
   0295 00                  763 	.db #0x00	; 0
   0296 00                  764 	.db #0x00	; 0
   0297 04                  765 	.db #0x04	; 4
   0298 08                  766 	.db #0x08	; 8
   0299 10                  767 	.db #0x10	; 16
   029A 20                  768 	.db #0x20	; 32
   029B 40                  769 	.db #0x40	; 64
   029C 00                  770 	.db #0x00	; 0
   029D 00                  771 	.db #0x00	; 0
   029E 38                  772 	.db #0x38	; 56	'8'
   029F 4C                  773 	.db #0x4c	; 76	'L'
   02A0 54                  774 	.db #0x54	; 84	'T'
   02A1 54                  775 	.db #0x54	; 84	'T'
   02A2 64                  776 	.db #0x64	; 100	'd'
   02A3 38                  777 	.db #0x38	; 56	'8'
   02A4 00                  778 	.db #0x00	; 0
   02A5 00                  779 	.db #0x00	; 0
   02A6 10                  780 	.db #0x10	; 16
   02A7 30                  781 	.db #0x30	; 48	'0'
   02A8 10                  782 	.db #0x10	; 16
   02A9 10                  783 	.db #0x10	; 16
   02AA 10                  784 	.db #0x10	; 16
   02AB 38                  785 	.db #0x38	; 56	'8'
   02AC 00                  786 	.db #0x00	; 0
   02AD 00                  787 	.db #0x00	; 0
   02AE 38                  788 	.db #0x38	; 56	'8'
   02AF 44                  789 	.db #0x44	; 68	'D'
   02B0 04                  790 	.db #0x04	; 4
   02B1 38                  791 	.db #0x38	; 56	'8'
   02B2 40                  792 	.db #0x40	; 64
   02B3 7C                  793 	.db #0x7c	; 124
   02B4 00                  794 	.db #0x00	; 0
   02B5 00                  795 	.db #0x00	; 0
   02B6 38                  796 	.db #0x38	; 56	'8'
   02B7 44                  797 	.db #0x44	; 68	'D'
   02B8 18                  798 	.db #0x18	; 24
   02B9 04                  799 	.db #0x04	; 4
   02BA 44                  800 	.db #0x44	; 68	'D'
   02BB 38                  801 	.db #0x38	; 56	'8'
   02BC 00                  802 	.db #0x00	; 0
   02BD 00                  803 	.db #0x00	; 0
   02BE 08                  804 	.db #0x08	; 8
   02BF 18                  805 	.db #0x18	; 24
   02C0 28                  806 	.db #0x28	; 40
   02C1 48                  807 	.db #0x48	; 72	'H'
   02C2 7C                  808 	.db #0x7c	; 124
   02C3 08                  809 	.db #0x08	; 8
   02C4 00                  810 	.db #0x00	; 0
   02C5 00                  811 	.db #0x00	; 0
   02C6 7C                  812 	.db #0x7c	; 124
   02C7 40                  813 	.db #0x40	; 64
   02C8 78                  814 	.db #0x78	; 120	'x'
   02C9 04                  815 	.db #0x04	; 4
   02CA 44                  816 	.db #0x44	; 68	'D'
   02CB 38                  817 	.db #0x38	; 56	'8'
   02CC 00                  818 	.db #0x00	; 0
   02CD 00                  819 	.db #0x00	; 0
   02CE 38                  820 	.db #0x38	; 56	'8'
   02CF 40                  821 	.db #0x40	; 64
   02D0 78                  822 	.db #0x78	; 120	'x'
   02D1 44                  823 	.db #0x44	; 68	'D'
   02D2 44                  824 	.db #0x44	; 68	'D'
   02D3 38                  825 	.db #0x38	; 56	'8'
   02D4 00                  826 	.db #0x00	; 0
   02D5 00                  827 	.db #0x00	; 0
   02D6 7C                  828 	.db #0x7c	; 124
   02D7 04                  829 	.db #0x04	; 4
   02D8 08                  830 	.db #0x08	; 8
   02D9 10                  831 	.db #0x10	; 16
   02DA 10                  832 	.db #0x10	; 16
   02DB 10                  833 	.db #0x10	; 16
   02DC 00                  834 	.db #0x00	; 0
   02DD 00                  835 	.db #0x00	; 0
   02DE 38                  836 	.db #0x38	; 56	'8'
   02DF 44                  837 	.db #0x44	; 68	'D'
   02E0 38                  838 	.db #0x38	; 56	'8'
   02E1 44                  839 	.db #0x44	; 68	'D'
   02E2 44                  840 	.db #0x44	; 68	'D'
   02E3 38                  841 	.db #0x38	; 56	'8'
   02E4 00                  842 	.db #0x00	; 0
   02E5 00                  843 	.db #0x00	; 0
   02E6 38                  844 	.db #0x38	; 56	'8'
   02E7 44                  845 	.db #0x44	; 68	'D'
   02E8 44                  846 	.db #0x44	; 68	'D'
   02E9 3C                  847 	.db #0x3c	; 60
   02EA 04                  848 	.db #0x04	; 4
   02EB 38                  849 	.db #0x38	; 56	'8'
   02EC 00                  850 	.db #0x00	; 0
   02ED 00                  851 	.db #0x00	; 0
   02EE 00                  852 	.db #0x00	; 0
   02EF 00                  853 	.db #0x00	; 0
   02F0 10                  854 	.db #0x10	; 16
   02F1 00                  855 	.db #0x00	; 0
   02F2 00                  856 	.db #0x00	; 0
   02F3 10                  857 	.db #0x10	; 16
   02F4 00                  858 	.db #0x00	; 0
   02F5 00                  859 	.db #0x00	; 0
   02F6 00                  860 	.db #0x00	; 0
   02F7 10                  861 	.db #0x10	; 16
   02F8 00                  862 	.db #0x00	; 0
   02F9 00                  863 	.db #0x00	; 0
   02FA 10                  864 	.db #0x10	; 16
   02FB 10                  865 	.db #0x10	; 16
   02FC 20                  866 	.db #0x20	; 32
   02FD 00                  867 	.db #0x00	; 0
   02FE 00                  868 	.db #0x00	; 0
   02FF 08                  869 	.db #0x08	; 8
   0300 10                  870 	.db #0x10	; 16
   0301 20                  871 	.db #0x20	; 32
   0302 10                  872 	.db #0x10	; 16
   0303 08                  873 	.db #0x08	; 8
   0304 00                  874 	.db #0x00	; 0
   0305 00                  875 	.db #0x00	; 0
   0306 00                  876 	.db #0x00	; 0
   0307 00                  877 	.db #0x00	; 0
   0308 7C                  878 	.db #0x7c	; 124
   0309 00                  879 	.db #0x00	; 0
   030A 7C                  880 	.db #0x7c	; 124
   030B 00                  881 	.db #0x00	; 0
   030C 00                  882 	.db #0x00	; 0
   030D 00                  883 	.db #0x00	; 0
   030E 00                  884 	.db #0x00	; 0
   030F 20                  885 	.db #0x20	; 32
   0310 10                  886 	.db #0x10	; 16
   0311 08                  887 	.db #0x08	; 8
   0312 10                  888 	.db #0x10	; 16
   0313 20                  889 	.db #0x20	; 32
   0314 00                  890 	.db #0x00	; 0
   0315 00                  891 	.db #0x00	; 0
   0316 38                  892 	.db #0x38	; 56	'8'
   0317 44                  893 	.db #0x44	; 68	'D'
   0318 08                  894 	.db #0x08	; 8
   0319 10                  895 	.db #0x10	; 16
   031A 00                  896 	.db #0x00	; 0
   031B 10                  897 	.db #0x10	; 16
   031C 00                  898 	.db #0x00	; 0
   031D 00                  899 	.db #0x00	; 0
   031E 38                  900 	.db #0x38	; 56	'8'
   031F 44                  901 	.db #0x44	; 68	'D'
   0320 5C                  902 	.db #0x5c	; 92
   0321 5C                  903 	.db #0x5c	; 92
   0322 40                  904 	.db #0x40	; 64
   0323 38                  905 	.db #0x38	; 56	'8'
   0324 00                  906 	.db #0x00	; 0
   0325 00                  907 	.db #0x00	; 0
   0326 38                  908 	.db #0x38	; 56	'8'
   0327 44                  909 	.db #0x44	; 68	'D'
   0328 44                  910 	.db #0x44	; 68	'D'
   0329 7C                  911 	.db #0x7c	; 124
   032A 44                  912 	.db #0x44	; 68	'D'
   032B 44                  913 	.db #0x44	; 68	'D'
   032C 00                  914 	.db #0x00	; 0
   032D 00                  915 	.db #0x00	; 0
   032E 78                  916 	.db #0x78	; 120	'x'
   032F 44                  917 	.db #0x44	; 68	'D'
   0330 78                  918 	.db #0x78	; 120	'x'
   0331 44                  919 	.db #0x44	; 68	'D'
   0332 44                  920 	.db #0x44	; 68	'D'
   0333 78                  921 	.db #0x78	; 120	'x'
   0334 00                  922 	.db #0x00	; 0
   0335 00                  923 	.db #0x00	; 0
   0336 38                  924 	.db #0x38	; 56	'8'
   0337 44                  925 	.db #0x44	; 68	'D'
   0338 40                  926 	.db #0x40	; 64
   0339 40                  927 	.db #0x40	; 64
   033A 44                  928 	.db #0x44	; 68	'D'
   033B 38                  929 	.db #0x38	; 56	'8'
   033C 00                  930 	.db #0x00	; 0
   033D 00                  931 	.db #0x00	; 0
   033E 70                  932 	.db #0x70	; 112	'p'
   033F 48                  933 	.db #0x48	; 72	'H'
   0340 44                  934 	.db #0x44	; 68	'D'
   0341 44                  935 	.db #0x44	; 68	'D'
   0342 48                  936 	.db #0x48	; 72	'H'
   0343 70                  937 	.db #0x70	; 112	'p'
   0344 00                  938 	.db #0x00	; 0
   0345 00                  939 	.db #0x00	; 0
   0346 7C                  940 	.db #0x7c	; 124
   0347 40                  941 	.db #0x40	; 64
   0348 78                  942 	.db #0x78	; 120	'x'
   0349 40                  943 	.db #0x40	; 64
   034A 40                  944 	.db #0x40	; 64
   034B 7C                  945 	.db #0x7c	; 124
   034C 00                  946 	.db #0x00	; 0
   034D 00                  947 	.db #0x00	; 0
   034E 7C                  948 	.db #0x7c	; 124
   034F 40                  949 	.db #0x40	; 64
   0350 78                  950 	.db #0x78	; 120	'x'
   0351 40                  951 	.db #0x40	; 64
   0352 40                  952 	.db #0x40	; 64
   0353 40                  953 	.db #0x40	; 64
   0354 00                  954 	.db #0x00	; 0
   0355 00                  955 	.db #0x00	; 0
   0356 38                  956 	.db #0x38	; 56	'8'
   0357 44                  957 	.db #0x44	; 68	'D'
   0358 40                  958 	.db #0x40	; 64
   0359 5C                  959 	.db #0x5c	; 92
   035A 44                  960 	.db #0x44	; 68	'D'
   035B 38                  961 	.db #0x38	; 56	'8'
   035C 00                  962 	.db #0x00	; 0
   035D 00                  963 	.db #0x00	; 0
   035E 44                  964 	.db #0x44	; 68	'D'
   035F 44                  965 	.db #0x44	; 68	'D'
   0360 7C                  966 	.db #0x7c	; 124
   0361 44                  967 	.db #0x44	; 68	'D'
   0362 44                  968 	.db #0x44	; 68	'D'
   0363 44                  969 	.db #0x44	; 68	'D'
   0364 00                  970 	.db #0x00	; 0
   0365 00                  971 	.db #0x00	; 0
   0366 38                  972 	.db #0x38	; 56	'8'
   0367 10                  973 	.db #0x10	; 16
   0368 10                  974 	.db #0x10	; 16
   0369 10                  975 	.db #0x10	; 16
   036A 10                  976 	.db #0x10	; 16
   036B 38                  977 	.db #0x38	; 56	'8'
   036C 00                  978 	.db #0x00	; 0
   036D 00                  979 	.db #0x00	; 0
   036E 04                  980 	.db #0x04	; 4
   036F 04                  981 	.db #0x04	; 4
   0370 04                  982 	.db #0x04	; 4
   0371 44                  983 	.db #0x44	; 68	'D'
   0372 44                  984 	.db #0x44	; 68	'D'
   0373 38                  985 	.db #0x38	; 56	'8'
   0374 00                  986 	.db #0x00	; 0
   0375 00                  987 	.db #0x00	; 0
   0376 48                  988 	.db #0x48	; 72	'H'
   0377 50                  989 	.db #0x50	; 80	'P'
   0378 60                  990 	.db #0x60	; 96
   0379 50                  991 	.db #0x50	; 80	'P'
   037A 48                  992 	.db #0x48	; 72	'H'
   037B 44                  993 	.db #0x44	; 68	'D'
   037C 00                  994 	.db #0x00	; 0
   037D 00                  995 	.db #0x00	; 0
   037E 40                  996 	.db #0x40	; 64
   037F 40                  997 	.db #0x40	; 64
   0380 40                  998 	.db #0x40	; 64
   0381 40                  999 	.db #0x40	; 64
   0382 40                 1000 	.db #0x40	; 64
   0383 7C                 1001 	.db #0x7c	; 124
   0384 00                 1002 	.db #0x00	; 0
   0385 00                 1003 	.db #0x00	; 0
   0386 44                 1004 	.db #0x44	; 68	'D'
   0387 6C                 1005 	.db #0x6c	; 108	'l'
   0388 54                 1006 	.db #0x54	; 84	'T'
   0389 44                 1007 	.db #0x44	; 68	'D'
   038A 44                 1008 	.db #0x44	; 68	'D'
   038B 44                 1009 	.db #0x44	; 68	'D'
   038C 00                 1010 	.db #0x00	; 0
   038D 00                 1011 	.db #0x00	; 0
   038E 44                 1012 	.db #0x44	; 68	'D'
   038F 64                 1013 	.db #0x64	; 100	'd'
   0390 54                 1014 	.db #0x54	; 84	'T'
   0391 54                 1015 	.db #0x54	; 84	'T'
   0392 4C                 1016 	.db #0x4c	; 76	'L'
   0393 44                 1017 	.db #0x44	; 68	'D'
   0394 00                 1018 	.db #0x00	; 0
   0395 00                 1019 	.db #0x00	; 0
   0396 38                 1020 	.db #0x38	; 56	'8'
   0397 44                 1021 	.db #0x44	; 68	'D'
   0398 44                 1022 	.db #0x44	; 68	'D'
   0399 44                 1023 	.db #0x44	; 68	'D'
   039A 44                 1024 	.db #0x44	; 68	'D'
   039B 38                 1025 	.db #0x38	; 56	'8'
   039C 00                 1026 	.db #0x00	; 0
   039D 00                 1027 	.db #0x00	; 0
   039E 78                 1028 	.db #0x78	; 120	'x'
   039F 44                 1029 	.db #0x44	; 68	'D'
   03A0 44                 1030 	.db #0x44	; 68	'D'
   03A1 78                 1031 	.db #0x78	; 120	'x'
   03A2 40                 1032 	.db #0x40	; 64
   03A3 40                 1033 	.db #0x40	; 64
   03A4 00                 1034 	.db #0x00	; 0
   03A5 00                 1035 	.db #0x00	; 0
   03A6 38                 1036 	.db #0x38	; 56	'8'
   03A7 44                 1037 	.db #0x44	; 68	'D'
   03A8 44                 1038 	.db #0x44	; 68	'D'
   03A9 54                 1039 	.db #0x54	; 84	'T'
   03AA 48                 1040 	.db #0x48	; 72	'H'
   03AB 34                 1041 	.db #0x34	; 52	'4'
   03AC 00                 1042 	.db #0x00	; 0
   03AD 00                 1043 	.db #0x00	; 0
   03AE 78                 1044 	.db #0x78	; 120	'x'
   03AF 44                 1045 	.db #0x44	; 68	'D'
   03B0 44                 1046 	.db #0x44	; 68	'D'
   03B1 78                 1047 	.db #0x78	; 120	'x'
   03B2 48                 1048 	.db #0x48	; 72	'H'
   03B3 44                 1049 	.db #0x44	; 68	'D'
   03B4 00                 1050 	.db #0x00	; 0
   03B5 00                 1051 	.db #0x00	; 0
   03B6 38                 1052 	.db #0x38	; 56	'8'
   03B7 40                 1053 	.db #0x40	; 64
   03B8 38                 1054 	.db #0x38	; 56	'8'
   03B9 04                 1055 	.db #0x04	; 4
   03BA 44                 1056 	.db #0x44	; 68	'D'
   03BB 38                 1057 	.db #0x38	; 56	'8'
   03BC 00                 1058 	.db #0x00	; 0
   03BD 00                 1059 	.db #0x00	; 0
   03BE 7C                 1060 	.db #0x7c	; 124
   03BF 10                 1061 	.db #0x10	; 16
   03C0 10                 1062 	.db #0x10	; 16
   03C1 10                 1063 	.db #0x10	; 16
   03C2 10                 1064 	.db #0x10	; 16
   03C3 10                 1065 	.db #0x10	; 16
   03C4 00                 1066 	.db #0x00	; 0
   03C5 00                 1067 	.db #0x00	; 0
   03C6 44                 1068 	.db #0x44	; 68	'D'
   03C7 44                 1069 	.db #0x44	; 68	'D'
   03C8 44                 1070 	.db #0x44	; 68	'D'
   03C9 44                 1071 	.db #0x44	; 68	'D'
   03CA 44                 1072 	.db #0x44	; 68	'D'
   03CB 38                 1073 	.db #0x38	; 56	'8'
   03CC 00                 1074 	.db #0x00	; 0
   03CD 00                 1075 	.db #0x00	; 0
   03CE 44                 1076 	.db #0x44	; 68	'D'
   03CF 44                 1077 	.db #0x44	; 68	'D'
   03D0 44                 1078 	.db #0x44	; 68	'D'
   03D1 44                 1079 	.db #0x44	; 68	'D'
   03D2 28                 1080 	.db #0x28	; 40
   03D3 10                 1081 	.db #0x10	; 16
   03D4 00                 1082 	.db #0x00	; 0
   03D5 00                 1083 	.db #0x00	; 0
   03D6 44                 1084 	.db #0x44	; 68	'D'
   03D7 44                 1085 	.db #0x44	; 68	'D'
   03D8 44                 1086 	.db #0x44	; 68	'D'
   03D9 54                 1087 	.db #0x54	; 84	'T'
   03DA 54                 1088 	.db #0x54	; 84	'T'
   03DB 28                 1089 	.db #0x28	; 40
   03DC 00                 1090 	.db #0x00	; 0
   03DD 00                 1091 	.db #0x00	; 0
   03DE 44                 1092 	.db #0x44	; 68	'D'
   03DF 28                 1093 	.db #0x28	; 40
   03E0 10                 1094 	.db #0x10	; 16
   03E1 10                 1095 	.db #0x10	; 16
   03E2 28                 1096 	.db #0x28	; 40
   03E3 44                 1097 	.db #0x44	; 68	'D'
   03E4 00                 1098 	.db #0x00	; 0
   03E5 00                 1099 	.db #0x00	; 0
   03E6 44                 1100 	.db #0x44	; 68	'D'
   03E7 44                 1101 	.db #0x44	; 68	'D'
   03E8 28                 1102 	.db #0x28	; 40
   03E9 10                 1103 	.db #0x10	; 16
   03EA 10                 1104 	.db #0x10	; 16
   03EB 10                 1105 	.db #0x10	; 16
   03EC 00                 1106 	.db #0x00	; 0
   03ED 00                 1107 	.db #0x00	; 0
   03EE 78                 1108 	.db #0x78	; 120	'x'
   03EF 08                 1109 	.db #0x08	; 8
   03F0 10                 1110 	.db #0x10	; 16
   03F1 20                 1111 	.db #0x20	; 32
   03F2 40                 1112 	.db #0x40	; 64
   03F3 78                 1113 	.db #0x78	; 120	'x'
   03F4 00                 1114 	.db #0x00	; 0
   03F5 00                 1115 	.db #0x00	; 0
   03F6 38                 1116 	.db #0x38	; 56	'8'
   03F7 20                 1117 	.db #0x20	; 32
   03F8 20                 1118 	.db #0x20	; 32
   03F9 20                 1119 	.db #0x20	; 32
   03FA 20                 1120 	.db #0x20	; 32
   03FB 38                 1121 	.db #0x38	; 56	'8'
   03FC 00                 1122 	.db #0x00	; 0
   03FD 00                 1123 	.db #0x00	; 0
   03FE 00                 1124 	.db #0x00	; 0
   03FF 40                 1125 	.db #0x40	; 64
   0400 20                 1126 	.db #0x20	; 32
   0401 10                 1127 	.db #0x10	; 16
   0402 08                 1128 	.db #0x08	; 8
   0403 04                 1129 	.db #0x04	; 4
   0404 00                 1130 	.db #0x00	; 0
   0405 00                 1131 	.db #0x00	; 0
   0406 38                 1132 	.db #0x38	; 56	'8'
   0407 08                 1133 	.db #0x08	; 8
   0408 08                 1134 	.db #0x08	; 8
   0409 08                 1135 	.db #0x08	; 8
   040A 08                 1136 	.db #0x08	; 8
   040B 38                 1137 	.db #0x38	; 56	'8'
   040C 00                 1138 	.db #0x00	; 0
   040D 00                 1139 	.db #0x00	; 0
   040E 10                 1140 	.db #0x10	; 16
   040F 28                 1141 	.db #0x28	; 40
   0410 44                 1142 	.db #0x44	; 68	'D'
   0411 00                 1143 	.db #0x00	; 0
   0412 00                 1144 	.db #0x00	; 0
   0413 00                 1145 	.db #0x00	; 0
   0414 00                 1146 	.db #0x00	; 0
   0415 00                 1147 	.db #0x00	; 0
   0416 00                 1148 	.db #0x00	; 0
   0417 00                 1149 	.db #0x00	; 0
   0418 00                 1150 	.db #0x00	; 0
   0419 00                 1151 	.db #0x00	; 0
   041A 00                 1152 	.db #0x00	; 0
   041B 00                 1153 	.db #0x00	; 0
   041C FC                 1154 	.db #0xfc	; 252
   041D 00                 1155 	.db #0x00	; 0
   041E 18                 1156 	.db #0x18	; 24
   041F 24                 1157 	.db #0x24	; 36
   0420 70                 1158 	.db #0x70	; 112	'p'
   0421 20                 1159 	.db #0x20	; 32
   0422 20                 1160 	.db #0x20	; 32
   0423 7C                 1161 	.db #0x7c	; 124
   0424 00                 1162 	.db #0x00	; 0
   0425 00                 1163 	.db #0x00	; 0
   0426 00                 1164 	.db #0x00	; 0
   0427 38                 1165 	.db #0x38	; 56	'8'
   0428 04                 1166 	.db #0x04	; 4
   0429 3C                 1167 	.db #0x3c	; 60
   042A 44                 1168 	.db #0x44	; 68	'D'
   042B 3C                 1169 	.db #0x3c	; 60
   042C 00                 1170 	.db #0x00	; 0
   042D 00                 1171 	.db #0x00	; 0
   042E 40                 1172 	.db #0x40	; 64
   042F 40                 1173 	.db #0x40	; 64
   0430 78                 1174 	.db #0x78	; 120	'x'
   0431 44                 1175 	.db #0x44	; 68	'D'
   0432 44                 1176 	.db #0x44	; 68	'D'
   0433 78                 1177 	.db #0x78	; 120	'x'
   0434 00                 1178 	.db #0x00	; 0
   0435 00                 1179 	.db #0x00	; 0
   0436 00                 1180 	.db #0x00	; 0
   0437 38                 1181 	.db #0x38	; 56	'8'
   0438 40                 1182 	.db #0x40	; 64
   0439 40                 1183 	.db #0x40	; 64
   043A 40                 1184 	.db #0x40	; 64
   043B 38                 1185 	.db #0x38	; 56	'8'
   043C 00                 1186 	.db #0x00	; 0
   043D 00                 1187 	.db #0x00	; 0
   043E 04                 1188 	.db #0x04	; 4
   043F 04                 1189 	.db #0x04	; 4
   0440 3C                 1190 	.db #0x3c	; 60
   0441 44                 1191 	.db #0x44	; 68	'D'
   0442 44                 1192 	.db #0x44	; 68	'D'
   0443 3C                 1193 	.db #0x3c	; 60
   0444 00                 1194 	.db #0x00	; 0
   0445 00                 1195 	.db #0x00	; 0
   0446 00                 1196 	.db #0x00	; 0
   0447 38                 1197 	.db #0x38	; 56	'8'
   0448 44                 1198 	.db #0x44	; 68	'D'
   0449 78                 1199 	.db #0x78	; 120	'x'
   044A 40                 1200 	.db #0x40	; 64
   044B 3C                 1201 	.db #0x3c	; 60
   044C 00                 1202 	.db #0x00	; 0
   044D 00                 1203 	.db #0x00	; 0
   044E 18                 1204 	.db #0x18	; 24
   044F 20                 1205 	.db #0x20	; 32
   0450 30                 1206 	.db #0x30	; 48	'0'
   0451 20                 1207 	.db #0x20	; 32
   0452 20                 1208 	.db #0x20	; 32
   0453 20                 1209 	.db #0x20	; 32
   0454 00                 1210 	.db #0x00	; 0
   0455 00                 1211 	.db #0x00	; 0
   0456 00                 1212 	.db #0x00	; 0
   0457 3C                 1213 	.db #0x3c	; 60
   0458 44                 1214 	.db #0x44	; 68	'D'
   0459 44                 1215 	.db #0x44	; 68	'D'
   045A 3C                 1216 	.db #0x3c	; 60
   045B 04                 1217 	.db #0x04	; 4
   045C 38                 1218 	.db #0x38	; 56	'8'
   045D 00                 1219 	.db #0x00	; 0
   045E 40                 1220 	.db #0x40	; 64
   045F 40                 1221 	.db #0x40	; 64
   0460 78                 1222 	.db #0x78	; 120	'x'
   0461 44                 1223 	.db #0x44	; 68	'D'
   0462 44                 1224 	.db #0x44	; 68	'D'
   0463 44                 1225 	.db #0x44	; 68	'D'
   0464 00                 1226 	.db #0x00	; 0
   0465 00                 1227 	.db #0x00	; 0
   0466 10                 1228 	.db #0x10	; 16
   0467 00                 1229 	.db #0x00	; 0
   0468 30                 1230 	.db #0x30	; 48	'0'
   0469 10                 1231 	.db #0x10	; 16
   046A 10                 1232 	.db #0x10	; 16
   046B 38                 1233 	.db #0x38	; 56	'8'
   046C 00                 1234 	.db #0x00	; 0
   046D 00                 1235 	.db #0x00	; 0
   046E 08                 1236 	.db #0x08	; 8
   046F 00                 1237 	.db #0x00	; 0
   0470 08                 1238 	.db #0x08	; 8
   0471 08                 1239 	.db #0x08	; 8
   0472 08                 1240 	.db #0x08	; 8
   0473 48                 1241 	.db #0x48	; 72	'H'
   0474 30                 1242 	.db #0x30	; 48	'0'
   0475 00                 1243 	.db #0x00	; 0
   0476 40                 1244 	.db #0x40	; 64
   0477 48                 1245 	.db #0x48	; 72	'H'
   0478 50                 1246 	.db #0x50	; 80	'P'
   0479 60                 1247 	.db #0x60	; 96
   047A 50                 1248 	.db #0x50	; 80	'P'
   047B 48                 1249 	.db #0x48	; 72	'H'
   047C 00                 1250 	.db #0x00	; 0
   047D 00                 1251 	.db #0x00	; 0
   047E 20                 1252 	.db #0x20	; 32
   047F 20                 1253 	.db #0x20	; 32
   0480 20                 1254 	.db #0x20	; 32
   0481 20                 1255 	.db #0x20	; 32
   0482 20                 1256 	.db #0x20	; 32
   0483 18                 1257 	.db #0x18	; 24
   0484 00                 1258 	.db #0x00	; 0
   0485 00                 1259 	.db #0x00	; 0
   0486 00                 1260 	.db #0x00	; 0
   0487 68                 1261 	.db #0x68	; 104	'h'
   0488 54                 1262 	.db #0x54	; 84	'T'
   0489 54                 1263 	.db #0x54	; 84	'T'
   048A 54                 1264 	.db #0x54	; 84	'T'
   048B 54                 1265 	.db #0x54	; 84	'T'
   048C 00                 1266 	.db #0x00	; 0
   048D 00                 1267 	.db #0x00	; 0
   048E 00                 1268 	.db #0x00	; 0
   048F 78                 1269 	.db #0x78	; 120	'x'
   0490 44                 1270 	.db #0x44	; 68	'D'
   0491 44                 1271 	.db #0x44	; 68	'D'
   0492 44                 1272 	.db #0x44	; 68	'D'
   0493 44                 1273 	.db #0x44	; 68	'D'
   0494 00                 1274 	.db #0x00	; 0
   0495 00                 1275 	.db #0x00	; 0
   0496 00                 1276 	.db #0x00	; 0
   0497 38                 1277 	.db #0x38	; 56	'8'
   0498 44                 1278 	.db #0x44	; 68	'D'
   0499 44                 1279 	.db #0x44	; 68	'D'
   049A 44                 1280 	.db #0x44	; 68	'D'
   049B 38                 1281 	.db #0x38	; 56	'8'
   049C 00                 1282 	.db #0x00	; 0
   049D 00                 1283 	.db #0x00	; 0
   049E 00                 1284 	.db #0x00	; 0
   049F 78                 1285 	.db #0x78	; 120	'x'
   04A0 44                 1286 	.db #0x44	; 68	'D'
   04A1 44                 1287 	.db #0x44	; 68	'D'
   04A2 78                 1288 	.db #0x78	; 120	'x'
   04A3 40                 1289 	.db #0x40	; 64
   04A4 40                 1290 	.db #0x40	; 64
   04A5 00                 1291 	.db #0x00	; 0
   04A6 00                 1292 	.db #0x00	; 0
   04A7 3C                 1293 	.db #0x3c	; 60
   04A8 44                 1294 	.db #0x44	; 68	'D'
   04A9 44                 1295 	.db #0x44	; 68	'D'
   04AA 3C                 1296 	.db #0x3c	; 60
   04AB 04                 1297 	.db #0x04	; 4
   04AC 04                 1298 	.db #0x04	; 4
   04AD 00                 1299 	.db #0x00	; 0
   04AE 00                 1300 	.db #0x00	; 0
   04AF 38                 1301 	.db #0x38	; 56	'8'
   04B0 40                 1302 	.db #0x40	; 64
   04B1 40                 1303 	.db #0x40	; 64
   04B2 40                 1304 	.db #0x40	; 64
   04B3 40                 1305 	.db #0x40	; 64
   04B4 00                 1306 	.db #0x00	; 0
   04B5 00                 1307 	.db #0x00	; 0
   04B6 00                 1308 	.db #0x00	; 0
   04B7 38                 1309 	.db #0x38	; 56	'8'
   04B8 40                 1310 	.db #0x40	; 64
   04B9 38                 1311 	.db #0x38	; 56	'8'
   04BA 04                 1312 	.db #0x04	; 4
   04BB 78                 1313 	.db #0x78	; 120	'x'
   04BC 00                 1314 	.db #0x00	; 0
   04BD 00                 1315 	.db #0x00	; 0
   04BE 10                 1316 	.db #0x10	; 16
   04BF 38                 1317 	.db #0x38	; 56	'8'
   04C0 10                 1318 	.db #0x10	; 16
   04C1 10                 1319 	.db #0x10	; 16
   04C2 10                 1320 	.db #0x10	; 16
   04C3 0C                 1321 	.db #0x0c	; 12
   04C4 00                 1322 	.db #0x00	; 0
   04C5 00                 1323 	.db #0x00	; 0
   04C6 00                 1324 	.db #0x00	; 0
   04C7 44                 1325 	.db #0x44	; 68	'D'
   04C8 44                 1326 	.db #0x44	; 68	'D'
   04C9 44                 1327 	.db #0x44	; 68	'D'
   04CA 44                 1328 	.db #0x44	; 68	'D'
   04CB 38                 1329 	.db #0x38	; 56	'8'
   04CC 00                 1330 	.db #0x00	; 0
   04CD 00                 1331 	.db #0x00	; 0
   04CE 00                 1332 	.db #0x00	; 0
   04CF 44                 1333 	.db #0x44	; 68	'D'
   04D0 44                 1334 	.db #0x44	; 68	'D'
   04D1 28                 1335 	.db #0x28	; 40
   04D2 28                 1336 	.db #0x28	; 40
   04D3 10                 1337 	.db #0x10	; 16
   04D4 00                 1338 	.db #0x00	; 0
   04D5 00                 1339 	.db #0x00	; 0
   04D6 00                 1340 	.db #0x00	; 0
   04D7 44                 1341 	.db #0x44	; 68	'D'
   04D8 44                 1342 	.db #0x44	; 68	'D'
   04D9 54                 1343 	.db #0x54	; 84	'T'
   04DA 54                 1344 	.db #0x54	; 84	'T'
   04DB 28                 1345 	.db #0x28	; 40
   04DC 00                 1346 	.db #0x00	; 0
   04DD 00                 1347 	.db #0x00	; 0
   04DE 00                 1348 	.db #0x00	; 0
   04DF 44                 1349 	.db #0x44	; 68	'D'
   04E0 28                 1350 	.db #0x28	; 40
   04E1 10                 1351 	.db #0x10	; 16
   04E2 28                 1352 	.db #0x28	; 40
   04E3 44                 1353 	.db #0x44	; 68	'D'
   04E4 00                 1354 	.db #0x00	; 0
   04E5 00                 1355 	.db #0x00	; 0
   04E6 00                 1356 	.db #0x00	; 0
   04E7 44                 1357 	.db #0x44	; 68	'D'
   04E8 44                 1358 	.db #0x44	; 68	'D'
   04E9 44                 1359 	.db #0x44	; 68	'D'
   04EA 3C                 1360 	.db #0x3c	; 60
   04EB 04                 1361 	.db #0x04	; 4
   04EC 38                 1362 	.db #0x38	; 56	'8'
   04ED 00                 1363 	.db #0x00	; 0
   04EE 00                 1364 	.db #0x00	; 0
   04EF 7C                 1365 	.db #0x7c	; 124
   04F0 08                 1366 	.db #0x08	; 8
   04F1 10                 1367 	.db #0x10	; 16
   04F2 20                 1368 	.db #0x20	; 32
   04F3 7C                 1369 	.db #0x7c	; 124
   04F4 00                 1370 	.db #0x00	; 0
   04F5 00                 1371 	.db #0x00	; 0
   04F6 08                 1372 	.db #0x08	; 8
   04F7 10                 1373 	.db #0x10	; 16
   04F8 10                 1374 	.db #0x10	; 16
   04F9 60                 1375 	.db #0x60	; 96
   04FA 10                 1376 	.db #0x10	; 16
   04FB 10                 1377 	.db #0x10	; 16
   04FC 08                 1378 	.db #0x08	; 8
   04FD 00                 1379 	.db #0x00	; 0
   04FE 10                 1380 	.db #0x10	; 16
   04FF 10                 1381 	.db #0x10	; 16
   0500 10                 1382 	.db #0x10	; 16
   0501 00                 1383 	.db #0x00	; 0
   0502 10                 1384 	.db #0x10	; 16
   0503 10                 1385 	.db #0x10	; 16
   0504 10                 1386 	.db #0x10	; 16
   0505 00                 1387 	.db #0x00	; 0
   0506 20                 1388 	.db #0x20	; 32
   0507 10                 1389 	.db #0x10	; 16
   0508 10                 1390 	.db #0x10	; 16
   0509 0C                 1391 	.db #0x0c	; 12
   050A 10                 1392 	.db #0x10	; 16
   050B 10                 1393 	.db #0x10	; 16
   050C 20                 1394 	.db #0x20	; 32
   050D 00                 1395 	.db #0x00	; 0
   050E 28                 1396 	.db #0x28	; 40
   050F 50                 1397 	.db #0x50	; 80	'P'
   0510 00                 1398 	.db #0x00	; 0
   0511 00                 1399 	.db #0x00	; 0
   0512 00                 1400 	.db #0x00	; 0
   0513 00                 1401 	.db #0x00	; 0
   0514 00                 1402 	.db #0x00	; 0
   0515 78                 1403 	.db #0x78	; 120	'x'
   0516 84                 1404 	.db #0x84	; 132
   0517 B4                 1405 	.db #0xb4	; 180
   0518 A4                 1406 	.db #0xa4	; 164
   0519 A4                 1407 	.db #0xa4	; 164
   051A B4                 1408 	.db #0xb4	; 180
   051B 84                 1409 	.db #0x84	; 132
   051C 78                 1410 	.db #0x78	; 120	'x'
   051D 00                 1411 	.db #0x00	; 0
   051E 38                 1412 	.db #0x38	; 56	'8'
   051F 44                 1413 	.db #0x44	; 68	'D'
   0520 44                 1414 	.db #0x44	; 68	'D'
   0521 7C                 1415 	.db #0x7c	; 124
   0522 44                 1416 	.db #0x44	; 68	'D'
   0523 44                 1417 	.db #0x44	; 68	'D'
   0524 00                 1418 	.db #0x00	; 0
   0525 00                 1419 	.db #0x00	; 0
   0526 7C                 1420 	.db #0x7c	; 124
   0527 40                 1421 	.db #0x40	; 64
   0528 78                 1422 	.db #0x78	; 120	'x'
   0529 44                 1423 	.db #0x44	; 68	'D'
   052A 44                 1424 	.db #0x44	; 68	'D'
   052B 78                 1425 	.db #0x78	; 120	'x'
   052C 00                 1426 	.db #0x00	; 0
   052D 00                 1427 	.db #0x00	; 0
   052E 78                 1428 	.db #0x78	; 120	'x'
   052F 44                 1429 	.db #0x44	; 68	'D'
   0530 78                 1430 	.db #0x78	; 120	'x'
   0531 44                 1431 	.db #0x44	; 68	'D'
   0532 44                 1432 	.db #0x44	; 68	'D'
   0533 78                 1433 	.db #0x78	; 120	'x'
   0534 00                 1434 	.db #0x00	; 0
   0535 00                 1435 	.db #0x00	; 0
   0536 7C                 1436 	.db #0x7c	; 124
   0537 40                 1437 	.db #0x40	; 64
   0538 40                 1438 	.db #0x40	; 64
   0539 40                 1439 	.db #0x40	; 64
   053A 40                 1440 	.db #0x40	; 64
   053B 40                 1441 	.db #0x40	; 64
   053C 00                 1442 	.db #0x00	; 0
   053D 00                 1443 	.db #0x00	; 0
   053E 38                 1444 	.db #0x38	; 56	'8'
   053F 48                 1445 	.db #0x48	; 72	'H'
   0540 48                 1446 	.db #0x48	; 72	'H'
   0541 48                 1447 	.db #0x48	; 72	'H'
   0542 48                 1448 	.db #0x48	; 72	'H'
   0543 FC                 1449 	.db #0xfc	; 252
   0544 84                 1450 	.db #0x84	; 132
   0545 00                 1451 	.db #0x00	; 0
   0546 7C                 1452 	.db #0x7c	; 124
   0547 40                 1453 	.db #0x40	; 64
   0548 78                 1454 	.db #0x78	; 120	'x'
   0549 40                 1455 	.db #0x40	; 64
   054A 40                 1456 	.db #0x40	; 64
   054B 7C                 1457 	.db #0x7c	; 124
   054C 00                 1458 	.db #0x00	; 0
   054D 00                 1459 	.db #0x00	; 0
   054E 54                 1460 	.db #0x54	; 84	'T'
   054F 54                 1461 	.db #0x54	; 84	'T'
   0550 38                 1462 	.db #0x38	; 56	'8'
   0551 54                 1463 	.db #0x54	; 84	'T'
   0552 54                 1464 	.db #0x54	; 84	'T'
   0553 54                 1465 	.db #0x54	; 84	'T'
   0554 00                 1466 	.db #0x00	; 0
   0555 00                 1467 	.db #0x00	; 0
   0556 38                 1468 	.db #0x38	; 56	'8'
   0557 44                 1469 	.db #0x44	; 68	'D'
   0558 18                 1470 	.db #0x18	; 24
   0559 04                 1471 	.db #0x04	; 4
   055A 44                 1472 	.db #0x44	; 68	'D'
   055B 38                 1473 	.db #0x38	; 56	'8'
   055C 00                 1474 	.db #0x00	; 0
   055D 00                 1475 	.db #0x00	; 0
   055E 44                 1476 	.db #0x44	; 68	'D'
   055F 44                 1477 	.db #0x44	; 68	'D'
   0560 4C                 1478 	.db #0x4c	; 76	'L'
   0561 54                 1479 	.db #0x54	; 84	'T'
   0562 64                 1480 	.db #0x64	; 100	'd'
   0563 44                 1481 	.db #0x44	; 68	'D'
   0564 00                 1482 	.db #0x00	; 0
   0565 10                 1483 	.db #0x10	; 16
   0566 54                 1484 	.db #0x54	; 84	'T'
   0567 44                 1485 	.db #0x44	; 68	'D'
   0568 4C                 1486 	.db #0x4c	; 76	'L'
   0569 54                 1487 	.db #0x54	; 84	'T'
   056A 64                 1488 	.db #0x64	; 100	'd'
   056B 44                 1489 	.db #0x44	; 68	'D'
   056C 00                 1490 	.db #0x00	; 0
   056D 00                 1491 	.db #0x00	; 0
   056E 44                 1492 	.db #0x44	; 68	'D'
   056F 48                 1493 	.db #0x48	; 72	'H'
   0570 70                 1494 	.db #0x70	; 112	'p'
   0571 48                 1495 	.db #0x48	; 72	'H'
   0572 44                 1496 	.db #0x44	; 68	'D'
   0573 44                 1497 	.db #0x44	; 68	'D'
   0574 00                 1498 	.db #0x00	; 0
   0575 00                 1499 	.db #0x00	; 0
   0576 1C                 1500 	.db #0x1c	; 28
   0577 24                 1501 	.db #0x24	; 36
   0578 24                 1502 	.db #0x24	; 36
   0579 24                 1503 	.db #0x24	; 36
   057A 24                 1504 	.db #0x24	; 36
   057B 44                 1505 	.db #0x44	; 68	'D'
   057C 00                 1506 	.db #0x00	; 0
   057D 00                 1507 	.db #0x00	; 0
   057E 44                 1508 	.db #0x44	; 68	'D'
   057F 6C                 1509 	.db #0x6c	; 108	'l'
   0580 54                 1510 	.db #0x54	; 84	'T'
   0581 44                 1511 	.db #0x44	; 68	'D'
   0582 44                 1512 	.db #0x44	; 68	'D'
   0583 44                 1513 	.db #0x44	; 68	'D'
   0584 00                 1514 	.db #0x00	; 0
   0585 00                 1515 	.db #0x00	; 0
   0586 44                 1516 	.db #0x44	; 68	'D'
   0587 44                 1517 	.db #0x44	; 68	'D'
   0588 7C                 1518 	.db #0x7c	; 124
   0589 44                 1519 	.db #0x44	; 68	'D'
   058A 44                 1520 	.db #0x44	; 68	'D'
   058B 44                 1521 	.db #0x44	; 68	'D'
   058C 00                 1522 	.db #0x00	; 0
   058D 00                 1523 	.db #0x00	; 0
   058E 38                 1524 	.db #0x38	; 56	'8'
   058F 44                 1525 	.db #0x44	; 68	'D'
   0590 44                 1526 	.db #0x44	; 68	'D'
   0591 44                 1527 	.db #0x44	; 68	'D'
   0592 44                 1528 	.db #0x44	; 68	'D'
   0593 38                 1529 	.db #0x38	; 56	'8'
   0594 00                 1530 	.db #0x00	; 0
   0595 00                 1531 	.db #0x00	; 0
   0596 7C                 1532 	.db #0x7c	; 124
   0597 44                 1533 	.db #0x44	; 68	'D'
   0598 44                 1534 	.db #0x44	; 68	'D'
   0599 44                 1535 	.db #0x44	; 68	'D'
   059A 44                 1536 	.db #0x44	; 68	'D'
   059B 44                 1537 	.db #0x44	; 68	'D'
   059C 00                 1538 	.db #0x00	; 0
   059D 00                 1539 	.db #0x00	; 0
   059E 78                 1540 	.db #0x78	; 120	'x'
   059F 44                 1541 	.db #0x44	; 68	'D'
   05A0 44                 1542 	.db #0x44	; 68	'D'
   05A1 78                 1543 	.db #0x78	; 120	'x'
   05A2 40                 1544 	.db #0x40	; 64
   05A3 40                 1545 	.db #0x40	; 64
   05A4 00                 1546 	.db #0x00	; 0
   05A5 00                 1547 	.db #0x00	; 0
   05A6 38                 1548 	.db #0x38	; 56	'8'
   05A7 44                 1549 	.db #0x44	; 68	'D'
   05A8 40                 1550 	.db #0x40	; 64
   05A9 40                 1551 	.db #0x40	; 64
   05AA 44                 1552 	.db #0x44	; 68	'D'
   05AB 38                 1553 	.db #0x38	; 56	'8'
   05AC 00                 1554 	.db #0x00	; 0
   05AD 00                 1555 	.db #0x00	; 0
   05AE 7C                 1556 	.db #0x7c	; 124
   05AF 10                 1557 	.db #0x10	; 16
   05B0 10                 1558 	.db #0x10	; 16
   05B1 10                 1559 	.db #0x10	; 16
   05B2 10                 1560 	.db #0x10	; 16
   05B3 10                 1561 	.db #0x10	; 16
   05B4 00                 1562 	.db #0x00	; 0
   05B5 00                 1563 	.db #0x00	; 0
   05B6 44                 1564 	.db #0x44	; 68	'D'
   05B7 44                 1565 	.db #0x44	; 68	'D'
   05B8 44                 1566 	.db #0x44	; 68	'D'
   05B9 3C                 1567 	.db #0x3c	; 60
   05BA 04                 1568 	.db #0x04	; 4
   05BB 38                 1569 	.db #0x38	; 56	'8'
   05BC 00                 1570 	.db #0x00	; 0
   05BD 00                 1571 	.db #0x00	; 0
   05BE 38                 1572 	.db #0x38	; 56	'8'
   05BF 54                 1573 	.db #0x54	; 84	'T'
   05C0 54                 1574 	.db #0x54	; 84	'T'
   05C1 54                 1575 	.db #0x54	; 84	'T'
   05C2 38                 1576 	.db #0x38	; 56	'8'
   05C3 10                 1577 	.db #0x10	; 16
   05C4 00                 1578 	.db #0x00	; 0
   05C5 00                 1579 	.db #0x00	; 0
   05C6 44                 1580 	.db #0x44	; 68	'D'
   05C7 28                 1581 	.db #0x28	; 40
   05C8 10                 1582 	.db #0x10	; 16
   05C9 10                 1583 	.db #0x10	; 16
   05CA 28                 1584 	.db #0x28	; 40
   05CB 44                 1585 	.db #0x44	; 68	'D'
   05CC 00                 1586 	.db #0x00	; 0
   05CD 00                 1587 	.db #0x00	; 0
   05CE 48                 1588 	.db #0x48	; 72	'H'
   05CF 48                 1589 	.db #0x48	; 72	'H'
   05D0 48                 1590 	.db #0x48	; 72	'H'
   05D1 48                 1591 	.db #0x48	; 72	'H'
   05D2 48                 1592 	.db #0x48	; 72	'H'
   05D3 7C                 1593 	.db #0x7c	; 124
   05D4 04                 1594 	.db #0x04	; 4
   05D5 00                 1595 	.db #0x00	; 0
   05D6 44                 1596 	.db #0x44	; 68	'D'
   05D7 44                 1597 	.db #0x44	; 68	'D'
   05D8 44                 1598 	.db #0x44	; 68	'D'
   05D9 3C                 1599 	.db #0x3c	; 60
   05DA 04                 1600 	.db #0x04	; 4
   05DB 04                 1601 	.db #0x04	; 4
   05DC 00                 1602 	.db #0x00	; 0
   05DD 00                 1603 	.db #0x00	; 0
   05DE 54                 1604 	.db #0x54	; 84	'T'
   05DF 54                 1605 	.db #0x54	; 84	'T'
   05E0 54                 1606 	.db #0x54	; 84	'T'
   05E1 54                 1607 	.db #0x54	; 84	'T'
   05E2 54                 1608 	.db #0x54	; 84	'T'
   05E3 7C                 1609 	.db #0x7c	; 124
   05E4 00                 1610 	.db #0x00	; 0
   05E5 00                 1611 	.db #0x00	; 0
   05E6 54                 1612 	.db #0x54	; 84	'T'
   05E7 54                 1613 	.db #0x54	; 84	'T'
   05E8 54                 1614 	.db #0x54	; 84	'T'
   05E9 54                 1615 	.db #0x54	; 84	'T'
   05EA 54                 1616 	.db #0x54	; 84	'T'
   05EB 7C                 1617 	.db #0x7c	; 124
   05EC 04                 1618 	.db #0x04	; 4
   05ED 00                 1619 	.db #0x00	; 0
   05EE 60                 1620 	.db #0x60	; 96
   05EF 20                 1621 	.db #0x20	; 32
   05F0 38                 1622 	.db #0x38	; 56	'8'
   05F1 24                 1623 	.db #0x24	; 36
   05F2 24                 1624 	.db #0x24	; 36
   05F3 38                 1625 	.db #0x38	; 56	'8'
   05F4 00                 1626 	.db #0x00	; 0
   05F5 00                 1627 	.db #0x00	; 0
   05F6 44                 1628 	.db #0x44	; 68	'D'
   05F7 44                 1629 	.db #0x44	; 68	'D'
   05F8 64                 1630 	.db #0x64	; 100	'd'
   05F9 54                 1631 	.db #0x54	; 84	'T'
   05FA 54                 1632 	.db #0x54	; 84	'T'
   05FB 64                 1633 	.db #0x64	; 100	'd'
   05FC 00                 1634 	.db #0x00	; 0
   05FD 00                 1635 	.db #0x00	; 0
   05FE 40                 1636 	.db #0x40	; 64
   05FF 40                 1637 	.db #0x40	; 64
   0600 78                 1638 	.db #0x78	; 120	'x'
   0601 44                 1639 	.db #0x44	; 68	'D'
   0602 44                 1640 	.db #0x44	; 68	'D'
   0603 78                 1641 	.db #0x78	; 120	'x'
   0604 00                 1642 	.db #0x00	; 0
   0605 00                 1643 	.db #0x00	; 0
   0606 78                 1644 	.db #0x78	; 120	'x'
   0607 04                 1645 	.db #0x04	; 4
   0608 3C                 1646 	.db #0x3c	; 60
   0609 04                 1647 	.db #0x04	; 4
   060A 04                 1648 	.db #0x04	; 4
   060B 78                 1649 	.db #0x78	; 120	'x'
   060C 00                 1650 	.db #0x00	; 0
   060D 00                 1651 	.db #0x00	; 0
   060E 48                 1652 	.db #0x48	; 72	'H'
   060F 54                 1653 	.db #0x54	; 84	'T'
   0610 74                 1654 	.db #0x74	; 116	't'
   0611 54                 1655 	.db #0x54	; 84	'T'
   0612 54                 1656 	.db #0x54	; 84	'T'
   0613 48                 1657 	.db #0x48	; 72	'H'
   0614 00                 1658 	.db #0x00	; 0
   0615 00                 1659 	.db #0x00	; 0
   0616 3C                 1660 	.db #0x3c	; 60
   0617 44                 1661 	.db #0x44	; 68	'D'
   0618 44                 1662 	.db #0x44	; 68	'D'
   0619 3C                 1663 	.db #0x3c	; 60
   061A 24                 1664 	.db #0x24	; 36
   061B 44                 1665 	.db #0x44	; 68	'D'
   061C 00                 1666 	.db #0x00	; 0
   061D 00                 1667 	.db #0x00	; 0
   061E 00                 1668 	.db #0x00	; 0
   061F 38                 1669 	.db #0x38	; 56	'8'
   0620 04                 1670 	.db #0x04	; 4
   0621 3C                 1671 	.db #0x3c	; 60
   0622 44                 1672 	.db #0x44	; 68	'D'
   0623 3C                 1673 	.db #0x3c	; 60
   0624 00                 1674 	.db #0x00	; 0
   0625 00                 1675 	.db #0x00	; 0
   0626 00                 1676 	.db #0x00	; 0
   0627 7C                 1677 	.db #0x7c	; 124
   0628 40                 1678 	.db #0x40	; 64
   0629 78                 1679 	.db #0x78	; 120	'x'
   062A 44                 1680 	.db #0x44	; 68	'D'
   062B 78                 1681 	.db #0x78	; 120	'x'
   062C 00                 1682 	.db #0x00	; 0
   062D 00                 1683 	.db #0x00	; 0
   062E 00                 1684 	.db #0x00	; 0
   062F 78                 1685 	.db #0x78	; 120	'x'
   0630 44                 1686 	.db #0x44	; 68	'D'
   0631 78                 1687 	.db #0x78	; 120	'x'
   0632 44                 1688 	.db #0x44	; 68	'D'
   0633 78                 1689 	.db #0x78	; 120	'x'
   0634 00                 1690 	.db #0x00	; 0
   0635 00                 1691 	.db #0x00	; 0
   0636 00                 1692 	.db #0x00	; 0
   0637 7C                 1693 	.db #0x7c	; 124
   0638 40                 1694 	.db #0x40	; 64
   0639 40                 1695 	.db #0x40	; 64
   063A 40                 1696 	.db #0x40	; 64
   063B 40                 1697 	.db #0x40	; 64
   063C 00                 1698 	.db #0x00	; 0
   063D 00                 1699 	.db #0x00	; 0
   063E 00                 1700 	.db #0x00	; 0
   063F 38                 1701 	.db #0x38	; 56	'8'
   0640 48                 1702 	.db #0x48	; 72	'H'
   0641 48                 1703 	.db #0x48	; 72	'H'
   0642 48                 1704 	.db #0x48	; 72	'H'
   0643 FC                 1705 	.db #0xfc	; 252
   0644 84                 1706 	.db #0x84	; 132
   0645 00                 1707 	.db #0x00	; 0
   0646 00                 1708 	.db #0x00	; 0
   0647 38                 1709 	.db #0x38	; 56	'8'
   0648 44                 1710 	.db #0x44	; 68	'D'
   0649 78                 1711 	.db #0x78	; 120	'x'
   064A 40                 1712 	.db #0x40	; 64
   064B 38                 1713 	.db #0x38	; 56	'8'
   064C 00                 1714 	.db #0x00	; 0
   064D 00                 1715 	.db #0x00	; 0
   064E 00                 1716 	.db #0x00	; 0
   064F 54                 1717 	.db #0x54	; 84	'T'
   0650 54                 1718 	.db #0x54	; 84	'T'
   0651 38                 1719 	.db #0x38	; 56	'8'
   0652 54                 1720 	.db #0x54	; 84	'T'
   0653 54                 1721 	.db #0x54	; 84	'T'
   0654 00                 1722 	.db #0x00	; 0
   0655 00                 1723 	.db #0x00	; 0
   0656 00                 1724 	.db #0x00	; 0
   0657 38                 1725 	.db #0x38	; 56	'8'
   0658 44                 1726 	.db #0x44	; 68	'D'
   0659 18                 1727 	.db #0x18	; 24
   065A 44                 1728 	.db #0x44	; 68	'D'
   065B 38                 1729 	.db #0x38	; 56	'8'
   065C 00                 1730 	.db #0x00	; 0
   065D 00                 1731 	.db #0x00	; 0
   065E 00                 1732 	.db #0x00	; 0
   065F 44                 1733 	.db #0x44	; 68	'D'
   0660 4C                 1734 	.db #0x4c	; 76	'L'
   0661 54                 1735 	.db #0x54	; 84	'T'
   0662 64                 1736 	.db #0x64	; 100	'd'
   0663 44                 1737 	.db #0x44	; 68	'D'
   0664 00                 1738 	.db #0x00	; 0
   0665 10                 1739 	.db #0x10	; 16
   0666 10                 1740 	.db #0x10	; 16
   0667 44                 1741 	.db #0x44	; 68	'D'
   0668 4C                 1742 	.db #0x4c	; 76	'L'
   0669 54                 1743 	.db #0x54	; 84	'T'
   066A 64                 1744 	.db #0x64	; 100	'd'
   066B 44                 1745 	.db #0x44	; 68	'D'
   066C 00                 1746 	.db #0x00	; 0
   066D 00                 1747 	.db #0x00	; 0
   066E 00                 1748 	.db #0x00	; 0
   066F 44                 1749 	.db #0x44	; 68	'D'
   0670 48                 1750 	.db #0x48	; 72	'H'
   0671 70                 1751 	.db #0x70	; 112	'p'
   0672 48                 1752 	.db #0x48	; 72	'H'
   0673 44                 1753 	.db #0x44	; 68	'D'
   0674 00                 1754 	.db #0x00	; 0
   0675 00                 1755 	.db #0x00	; 0
   0676 00                 1756 	.db #0x00	; 0
   0677 1C                 1757 	.db #0x1c	; 28
   0678 24                 1758 	.db #0x24	; 36
   0679 24                 1759 	.db #0x24	; 36
   067A 24                 1760 	.db #0x24	; 36
   067B 44                 1761 	.db #0x44	; 68	'D'
   067C 00                 1762 	.db #0x00	; 0
   067D 00                 1763 	.db #0x00	; 0
   067E 00                 1764 	.db #0x00	; 0
   067F 44                 1765 	.db #0x44	; 68	'D'
   0680 6C                 1766 	.db #0x6c	; 108	'l'
   0681 54                 1767 	.db #0x54	; 84	'T'
   0682 44                 1768 	.db #0x44	; 68	'D'
   0683 44                 1769 	.db #0x44	; 68	'D'
   0684 00                 1770 	.db #0x00	; 0
   0685 00                 1771 	.db #0x00	; 0
   0686 00                 1772 	.db #0x00	; 0
   0687 44                 1773 	.db #0x44	; 68	'D'
   0688 44                 1774 	.db #0x44	; 68	'D'
   0689 7C                 1775 	.db #0x7c	; 124
   068A 44                 1776 	.db #0x44	; 68	'D'
   068B 44                 1777 	.db #0x44	; 68	'D'
   068C 00                 1778 	.db #0x00	; 0
   068D 00                 1779 	.db #0x00	; 0
   068E 00                 1780 	.db #0x00	; 0
   068F 38                 1781 	.db #0x38	; 56	'8'
   0690 44                 1782 	.db #0x44	; 68	'D'
   0691 44                 1783 	.db #0x44	; 68	'D'
   0692 44                 1784 	.db #0x44	; 68	'D'
   0693 38                 1785 	.db #0x38	; 56	'8'
   0694 00                 1786 	.db #0x00	; 0
   0695 00                 1787 	.db #0x00	; 0
   0696 00                 1788 	.db #0x00	; 0
   0697 7C                 1789 	.db #0x7c	; 124
   0698 44                 1790 	.db #0x44	; 68	'D'
   0699 44                 1791 	.db #0x44	; 68	'D'
   069A 44                 1792 	.db #0x44	; 68	'D'
   069B 44                 1793 	.db #0x44	; 68	'D'
   069C 00                 1794 	.db #0x00	; 0
   069D A8                 1795 	.db #0xa8	; 168
   069E 00                 1796 	.db #0x00	; 0
   069F 54                 1797 	.db #0x54	; 84	'T'
   06A0 00                 1798 	.db #0x00	; 0
   06A1 A8                 1799 	.db #0xa8	; 168
   06A2 00                 1800 	.db #0x00	; 0
   06A3 54                 1801 	.db #0x54	; 84	'T'
   06A4 00                 1802 	.db #0x00	; 0
   06A5 A8                 1803 	.db #0xa8	; 168
   06A6 54                 1804 	.db #0x54	; 84	'T'
   06A7 A8                 1805 	.db #0xa8	; 168
   06A8 54                 1806 	.db #0x54	; 84	'T'
   06A9 A8                 1807 	.db #0xa8	; 168
   06AA 54                 1808 	.db #0x54	; 84	'T'
   06AB A8                 1809 	.db #0xa8	; 168
   06AC 54                 1810 	.db #0x54	; 84	'T'
   06AD A8                 1811 	.db #0xa8	; 168
   06AE FC                 1812 	.db #0xfc	; 252
   06AF 54                 1813 	.db #0x54	; 84	'T'
   06B0 FC                 1814 	.db #0xfc	; 252
   06B1 A8                 1815 	.db #0xa8	; 168
   06B2 FC                 1816 	.db #0xfc	; 252
   06B3 54                 1817 	.db #0x54	; 84	'T'
   06B4 FC                 1818 	.db #0xfc	; 252
   06B5 20                 1819 	.db #0x20	; 32
   06B6 20                 1820 	.db #0x20	; 32
   06B7 20                 1821 	.db #0x20	; 32
   06B8 20                 1822 	.db #0x20	; 32
   06B9 20                 1823 	.db #0x20	; 32
   06BA 20                 1824 	.db #0x20	; 32
   06BB 20                 1825 	.db #0x20	; 32
   06BC 20                 1826 	.db #0x20	; 32
   06BD 20                 1827 	.db #0x20	; 32
   06BE 20                 1828 	.db #0x20	; 32
   06BF 20                 1829 	.db #0x20	; 32
   06C0 20                 1830 	.db #0x20	; 32
   06C1 E0                 1831 	.db #0xe0	; 224
   06C2 20                 1832 	.db #0x20	; 32
   06C3 20                 1833 	.db #0x20	; 32
   06C4 20                 1834 	.db #0x20	; 32
   06C5 20                 1835 	.db #0x20	; 32
   06C6 20                 1836 	.db #0x20	; 32
   06C7 20                 1837 	.db #0x20	; 32
   06C8 E0                 1838 	.db #0xe0	; 224
   06C9 20                 1839 	.db #0x20	; 32
   06CA E0                 1840 	.db #0xe0	; 224
   06CB 20                 1841 	.db #0x20	; 32
   06CC 20                 1842 	.db #0x20	; 32
   06CD 28                 1843 	.db #0x28	; 40
   06CE 28                 1844 	.db #0x28	; 40
   06CF 28                 1845 	.db #0x28	; 40
   06D0 28                 1846 	.db #0x28	; 40
   06D1 E8                 1847 	.db #0xe8	; 232
   06D2 28                 1848 	.db #0x28	; 40
   06D3 28                 1849 	.db #0x28	; 40
   06D4 28                 1850 	.db #0x28	; 40
   06D5 00                 1851 	.db #0x00	; 0
   06D6 00                 1852 	.db #0x00	; 0
   06D7 00                 1853 	.db #0x00	; 0
   06D8 00                 1854 	.db #0x00	; 0
   06D9 F8                 1855 	.db #0xf8	; 248
   06DA 28                 1856 	.db #0x28	; 40
   06DB 28                 1857 	.db #0x28	; 40
   06DC 28                 1858 	.db #0x28	; 40
   06DD 00                 1859 	.db #0x00	; 0
   06DE 00                 1860 	.db #0x00	; 0
   06DF 00                 1861 	.db #0x00	; 0
   06E0 E0                 1862 	.db #0xe0	; 224
   06E1 20                 1863 	.db #0x20	; 32
   06E2 E0                 1864 	.db #0xe0	; 224
   06E3 20                 1865 	.db #0x20	; 32
   06E4 20                 1866 	.db #0x20	; 32
   06E5 28                 1867 	.db #0x28	; 40
   06E6 28                 1868 	.db #0x28	; 40
   06E7 28                 1869 	.db #0x28	; 40
   06E8 E8                 1870 	.db #0xe8	; 232
   06E9 08                 1871 	.db #0x08	; 8
   06EA E8                 1872 	.db #0xe8	; 232
   06EB 28                 1873 	.db #0x28	; 40
   06EC 28                 1874 	.db #0x28	; 40
   06ED 28                 1875 	.db #0x28	; 40
   06EE 28                 1876 	.db #0x28	; 40
   06EF 28                 1877 	.db #0x28	; 40
   06F0 28                 1878 	.db #0x28	; 40
   06F1 28                 1879 	.db #0x28	; 40
   06F2 28                 1880 	.db #0x28	; 40
   06F3 28                 1881 	.db #0x28	; 40
   06F4 28                 1882 	.db #0x28	; 40
   06F5 00                 1883 	.db #0x00	; 0
   06F6 00                 1884 	.db #0x00	; 0
   06F7 00                 1885 	.db #0x00	; 0
   06F8 F8                 1886 	.db #0xf8	; 248
   06F9 08                 1887 	.db #0x08	; 8
   06FA E8                 1888 	.db #0xe8	; 232
   06FB 28                 1889 	.db #0x28	; 40
   06FC 28                 1890 	.db #0x28	; 40
   06FD 28                 1891 	.db #0x28	; 40
   06FE 28                 1892 	.db #0x28	; 40
   06FF 28                 1893 	.db #0x28	; 40
   0700 E8                 1894 	.db #0xe8	; 232
   0701 08                 1895 	.db #0x08	; 8
   0702 F8                 1896 	.db #0xf8	; 248
   0703 00                 1897 	.db #0x00	; 0
   0704 00                 1898 	.db #0x00	; 0
   0705 28                 1899 	.db #0x28	; 40
   0706 28                 1900 	.db #0x28	; 40
   0707 28                 1901 	.db #0x28	; 40
   0708 28                 1902 	.db #0x28	; 40
   0709 F8                 1903 	.db #0xf8	; 248
   070A 00                 1904 	.db #0x00	; 0
   070B 00                 1905 	.db #0x00	; 0
   070C 00                 1906 	.db #0x00	; 0
   070D 20                 1907 	.db #0x20	; 32
   070E 20                 1908 	.db #0x20	; 32
   070F 20                 1909 	.db #0x20	; 32
   0710 E0                 1910 	.db #0xe0	; 224
   0711 20                 1911 	.db #0x20	; 32
   0712 E0                 1912 	.db #0xe0	; 224
   0713 00                 1913 	.db #0x00	; 0
   0714 00                 1914 	.db #0x00	; 0
   0715 00                 1915 	.db #0x00	; 0
   0716 00                 1916 	.db #0x00	; 0
   0717 00                 1917 	.db #0x00	; 0
   0718 00                 1918 	.db #0x00	; 0
   0719 E0                 1919 	.db #0xe0	; 224
   071A 20                 1920 	.db #0x20	; 32
   071B 20                 1921 	.db #0x20	; 32
   071C 20                 1922 	.db #0x20	; 32
   071D 20                 1923 	.db #0x20	; 32
   071E 20                 1924 	.db #0x20	; 32
   071F 20                 1925 	.db #0x20	; 32
   0720 20                 1926 	.db #0x20	; 32
   0721 3C                 1927 	.db #0x3c	; 60
   0722 00                 1928 	.db #0x00	; 0
   0723 00                 1929 	.db #0x00	; 0
   0724 00                 1930 	.db #0x00	; 0
   0725 20                 1931 	.db #0x20	; 32
   0726 20                 1932 	.db #0x20	; 32
   0727 20                 1933 	.db #0x20	; 32
   0728 20                 1934 	.db #0x20	; 32
   0729 FC                 1935 	.db #0xfc	; 252
   072A 00                 1936 	.db #0x00	; 0
   072B 00                 1937 	.db #0x00	; 0
   072C 00                 1938 	.db #0x00	; 0
   072D 00                 1939 	.db #0x00	; 0
   072E 00                 1940 	.db #0x00	; 0
   072F 00                 1941 	.db #0x00	; 0
   0730 00                 1942 	.db #0x00	; 0
   0731 FC                 1943 	.db #0xfc	; 252
   0732 20                 1944 	.db #0x20	; 32
   0733 20                 1945 	.db #0x20	; 32
   0734 20                 1946 	.db #0x20	; 32
   0735 20                 1947 	.db #0x20	; 32
   0736 20                 1948 	.db #0x20	; 32
   0737 20                 1949 	.db #0x20	; 32
   0738 20                 1950 	.db #0x20	; 32
   0739 3C                 1951 	.db #0x3c	; 60
   073A 20                 1952 	.db #0x20	; 32
   073B 20                 1953 	.db #0x20	; 32
   073C 20                 1954 	.db #0x20	; 32
   073D 00                 1955 	.db #0x00	; 0
   073E 00                 1956 	.db #0x00	; 0
   073F 00                 1957 	.db #0x00	; 0
   0740 00                 1958 	.db #0x00	; 0
   0741 FC                 1959 	.db #0xfc	; 252
   0742 00                 1960 	.db #0x00	; 0
   0743 00                 1961 	.db #0x00	; 0
   0744 00                 1962 	.db #0x00	; 0
   0745 20                 1963 	.db #0x20	; 32
   0746 20                 1964 	.db #0x20	; 32
   0747 20                 1965 	.db #0x20	; 32
   0748 20                 1966 	.db #0x20	; 32
   0749 FC                 1967 	.db #0xfc	; 252
   074A 20                 1968 	.db #0x20	; 32
   074B 20                 1969 	.db #0x20	; 32
   074C 20                 1970 	.db #0x20	; 32
   074D 20                 1971 	.db #0x20	; 32
   074E 20                 1972 	.db #0x20	; 32
   074F 20                 1973 	.db #0x20	; 32
   0750 3C                 1974 	.db #0x3c	; 60
   0751 20                 1975 	.db #0x20	; 32
   0752 3C                 1976 	.db #0x3c	; 60
   0753 20                 1977 	.db #0x20	; 32
   0754 20                 1978 	.db #0x20	; 32
   0755 28                 1979 	.db #0x28	; 40
   0756 28                 1980 	.db #0x28	; 40
   0757 28                 1981 	.db #0x28	; 40
   0758 28                 1982 	.db #0x28	; 40
   0759 2C                 1983 	.db #0x2c	; 44
   075A 28                 1984 	.db #0x28	; 40
   075B 28                 1985 	.db #0x28	; 40
   075C 28                 1986 	.db #0x28	; 40
   075D 28                 1987 	.db #0x28	; 40
   075E 28                 1988 	.db #0x28	; 40
   075F 28                 1989 	.db #0x28	; 40
   0760 2C                 1990 	.db #0x2c	; 44
   0761 20                 1991 	.db #0x20	; 32
   0762 3C                 1992 	.db #0x3c	; 60
   0763 00                 1993 	.db #0x00	; 0
   0764 00                 1994 	.db #0x00	; 0
   0765 00                 1995 	.db #0x00	; 0
   0766 00                 1996 	.db #0x00	; 0
   0767 00                 1997 	.db #0x00	; 0
   0768 3C                 1998 	.db #0x3c	; 60
   0769 20                 1999 	.db #0x20	; 32
   076A 2C                 2000 	.db #0x2c	; 44
   076B 28                 2001 	.db #0x28	; 40
   076C 28                 2002 	.db #0x28	; 40
   076D 28                 2003 	.db #0x28	; 40
   076E 28                 2004 	.db #0x28	; 40
   076F 28                 2005 	.db #0x28	; 40
   0770 EC                 2006 	.db #0xec	; 236
   0771 00                 2007 	.db #0x00	; 0
   0772 FC                 2008 	.db #0xfc	; 252
   0773 00                 2009 	.db #0x00	; 0
   0774 00                 2010 	.db #0x00	; 0
   0775 00                 2011 	.db #0x00	; 0
   0776 00                 2012 	.db #0x00	; 0
   0777 00                 2013 	.db #0x00	; 0
   0778 FC                 2014 	.db #0xfc	; 252
   0779 00                 2015 	.db #0x00	; 0
   077A EC                 2016 	.db #0xec	; 236
   077B 28                 2017 	.db #0x28	; 40
   077C 28                 2018 	.db #0x28	; 40
   077D 28                 2019 	.db #0x28	; 40
   077E 28                 2020 	.db #0x28	; 40
   077F 28                 2021 	.db #0x28	; 40
   0780 2C                 2022 	.db #0x2c	; 44
   0781 20                 2023 	.db #0x20	; 32
   0782 2C                 2024 	.db #0x2c	; 44
   0783 28                 2025 	.db #0x28	; 40
   0784 28                 2026 	.db #0x28	; 40
   0785 00                 2027 	.db #0x00	; 0
   0786 00                 2028 	.db #0x00	; 0
   0787 00                 2029 	.db #0x00	; 0
   0788 FC                 2030 	.db #0xfc	; 252
   0789 00                 2031 	.db #0x00	; 0
   078A FC                 2032 	.db #0xfc	; 252
   078B 00                 2033 	.db #0x00	; 0
   078C 00                 2034 	.db #0x00	; 0
   078D 28                 2035 	.db #0x28	; 40
   078E 28                 2036 	.db #0x28	; 40
   078F 28                 2037 	.db #0x28	; 40
   0790 EC                 2038 	.db #0xec	; 236
   0791 00                 2039 	.db #0x00	; 0
   0792 EC                 2040 	.db #0xec	; 236
   0793 28                 2041 	.db #0x28	; 40
   0794 28                 2042 	.db #0x28	; 40
   0795 20                 2043 	.db #0x20	; 32
   0796 20                 2044 	.db #0x20	; 32
   0797 20                 2045 	.db #0x20	; 32
   0798 FC                 2046 	.db #0xfc	; 252
   0799 00                 2047 	.db #0x00	; 0
   079A FC                 2048 	.db #0xfc	; 252
   079B 00                 2049 	.db #0x00	; 0
   079C 00                 2050 	.db #0x00	; 0
   079D 28                 2051 	.db #0x28	; 40
   079E 28                 2052 	.db #0x28	; 40
   079F 28                 2053 	.db #0x28	; 40
   07A0 28                 2054 	.db #0x28	; 40
   07A1 FC                 2055 	.db #0xfc	; 252
   07A2 00                 2056 	.db #0x00	; 0
   07A3 00                 2057 	.db #0x00	; 0
   07A4 00                 2058 	.db #0x00	; 0
   07A5 00                 2059 	.db #0x00	; 0
   07A6 00                 2060 	.db #0x00	; 0
   07A7 00                 2061 	.db #0x00	; 0
   07A8 FC                 2062 	.db #0xfc	; 252
   07A9 00                 2063 	.db #0x00	; 0
   07AA FC                 2064 	.db #0xfc	; 252
   07AB 20                 2065 	.db #0x20	; 32
   07AC 20                 2066 	.db #0x20	; 32
   07AD 00                 2067 	.db #0x00	; 0
   07AE 00                 2068 	.db #0x00	; 0
   07AF 00                 2069 	.db #0x00	; 0
   07B0 00                 2070 	.db #0x00	; 0
   07B1 FC                 2071 	.db #0xfc	; 252
   07B2 28                 2072 	.db #0x28	; 40
   07B3 28                 2073 	.db #0x28	; 40
   07B4 28                 2074 	.db #0x28	; 40
   07B5 28                 2075 	.db #0x28	; 40
   07B6 28                 2076 	.db #0x28	; 40
   07B7 28                 2077 	.db #0x28	; 40
   07B8 28                 2078 	.db #0x28	; 40
   07B9 3C                 2079 	.db #0x3c	; 60
   07BA 00                 2080 	.db #0x00	; 0
   07BB 00                 2081 	.db #0x00	; 0
   07BC 00                 2082 	.db #0x00	; 0
   07BD 20                 2083 	.db #0x20	; 32
   07BE 20                 2084 	.db #0x20	; 32
   07BF 20                 2085 	.db #0x20	; 32
   07C0 3C                 2086 	.db #0x3c	; 60
   07C1 20                 2087 	.db #0x20	; 32
   07C2 3C                 2088 	.db #0x3c	; 60
   07C3 00                 2089 	.db #0x00	; 0
   07C4 00                 2090 	.db #0x00	; 0
   07C5 00                 2091 	.db #0x00	; 0
   07C6 00                 2092 	.db #0x00	; 0
   07C7 00                 2093 	.db #0x00	; 0
   07C8 3C                 2094 	.db #0x3c	; 60
   07C9 20                 2095 	.db #0x20	; 32
   07CA 3C                 2096 	.db #0x3c	; 60
   07CB 20                 2097 	.db #0x20	; 32
   07CC 20                 2098 	.db #0x20	; 32
   07CD 00                 2099 	.db #0x00	; 0
   07CE 00                 2100 	.db #0x00	; 0
   07CF 00                 2101 	.db #0x00	; 0
   07D0 00                 2102 	.db #0x00	; 0
   07D1 3C                 2103 	.db #0x3c	; 60
   07D2 28                 2104 	.db #0x28	; 40
   07D3 28                 2105 	.db #0x28	; 40
   07D4 28                 2106 	.db #0x28	; 40
   07D5 28                 2107 	.db #0x28	; 40
   07D6 28                 2108 	.db #0x28	; 40
   07D7 28                 2109 	.db #0x28	; 40
   07D8 28                 2110 	.db #0x28	; 40
   07D9 EC                 2111 	.db #0xec	; 236
   07DA 28                 2112 	.db #0x28	; 40
   07DB 28                 2113 	.db #0x28	; 40
   07DC 28                 2114 	.db #0x28	; 40
   07DD 20                 2115 	.db #0x20	; 32
   07DE 20                 2116 	.db #0x20	; 32
   07DF 20                 2117 	.db #0x20	; 32
   07E0 FC                 2118 	.db #0xfc	; 252
   07E1 20                 2119 	.db #0x20	; 32
   07E2 FC                 2120 	.db #0xfc	; 252
   07E3 20                 2121 	.db #0x20	; 32
   07E4 20                 2122 	.db #0x20	; 32
   07E5 20                 2123 	.db #0x20	; 32
   07E6 20                 2124 	.db #0x20	; 32
   07E7 20                 2125 	.db #0x20	; 32
   07E8 20                 2126 	.db #0x20	; 32
   07E9 E0                 2127 	.db #0xe0	; 224
   07EA 00                 2128 	.db #0x00	; 0
   07EB 00                 2129 	.db #0x00	; 0
   07EC 00                 2130 	.db #0x00	; 0
   07ED 00                 2131 	.db #0x00	; 0
   07EE 00                 2132 	.db #0x00	; 0
   07EF 00                 2133 	.db #0x00	; 0
   07F0 00                 2134 	.db #0x00	; 0
   07F1 3C                 2135 	.db #0x3c	; 60
   07F2 20                 2136 	.db #0x20	; 32
   07F3 20                 2137 	.db #0x20	; 32
   07F4 20                 2138 	.db #0x20	; 32
   07F5 FC                 2139 	.db #0xfc	; 252
   07F6 FC                 2140 	.db #0xfc	; 252
   07F7 FC                 2141 	.db #0xfc	; 252
   07F8 FC                 2142 	.db #0xfc	; 252
   07F9 FC                 2143 	.db #0xfc	; 252
   07FA FC                 2144 	.db #0xfc	; 252
   07FB FC                 2145 	.db #0xfc	; 252
   07FC FC                 2146 	.db #0xfc	; 252
   07FD 00                 2147 	.db #0x00	; 0
   07FE 00                 2148 	.db #0x00	; 0
   07FF 00                 2149 	.db #0x00	; 0
   0800 00                 2150 	.db #0x00	; 0
   0801 FC                 2151 	.db #0xfc	; 252
   0802 FC                 2152 	.db #0xfc	; 252
   0803 FC                 2153 	.db #0xfc	; 252
   0804 FC                 2154 	.db #0xfc	; 252
   0805 E0                 2155 	.db #0xe0	; 224
   0806 E0                 2156 	.db #0xe0	; 224
   0807 E0                 2157 	.db #0xe0	; 224
   0808 E0                 2158 	.db #0xe0	; 224
   0809 E0                 2159 	.db #0xe0	; 224
   080A E0                 2160 	.db #0xe0	; 224
   080B E0                 2161 	.db #0xe0	; 224
   080C E0                 2162 	.db #0xe0	; 224
   080D 1C                 2163 	.db #0x1c	; 28
   080E 1C                 2164 	.db #0x1c	; 28
   080F 1C                 2165 	.db #0x1c	; 28
   0810 1C                 2166 	.db #0x1c	; 28
   0811 1C                 2167 	.db #0x1c	; 28
   0812 1C                 2168 	.db #0x1c	; 28
   0813 1C                 2169 	.db #0x1c	; 28
   0814 1C                 2170 	.db #0x1c	; 28
   0815 FC                 2171 	.db #0xfc	; 252
   0816 FC                 2172 	.db #0xfc	; 252
   0817 FC                 2173 	.db #0xfc	; 252
   0818 FC                 2174 	.db #0xfc	; 252
   0819 00                 2175 	.db #0x00	; 0
   081A 00                 2176 	.db #0x00	; 0
   081B 00                 2177 	.db #0x00	; 0
   081C 00                 2178 	.db #0x00	; 0
   081D 00                 2179 	.db #0x00	; 0
   081E 00                 2180 	.db #0x00	; 0
   081F 78                 2181 	.db #0x78	; 120	'x'
   0820 44                 2182 	.db #0x44	; 68	'D'
   0821 44                 2183 	.db #0x44	; 68	'D'
   0822 78                 2184 	.db #0x78	; 120	'x'
   0823 40                 2185 	.db #0x40	; 64
   0824 40                 2186 	.db #0x40	; 64
   0825 00                 2187 	.db #0x00	; 0
   0826 00                 2188 	.db #0x00	; 0
   0827 38                 2189 	.db #0x38	; 56	'8'
   0828 44                 2190 	.db #0x44	; 68	'D'
   0829 40                 2191 	.db #0x40	; 64
   082A 44                 2192 	.db #0x44	; 68	'D'
   082B 38                 2193 	.db #0x38	; 56	'8'
   082C 00                 2194 	.db #0x00	; 0
   082D 00                 2195 	.db #0x00	; 0
   082E 00                 2196 	.db #0x00	; 0
   082F 7C                 2197 	.db #0x7c	; 124
   0830 10                 2198 	.db #0x10	; 16
   0831 10                 2199 	.db #0x10	; 16
   0832 10                 2200 	.db #0x10	; 16
   0833 10                 2201 	.db #0x10	; 16
   0834 00                 2202 	.db #0x00	; 0
   0835 00                 2203 	.db #0x00	; 0
   0836 00                 2204 	.db #0x00	; 0
   0837 44                 2205 	.db #0x44	; 68	'D'
   0838 44                 2206 	.db #0x44	; 68	'D'
   0839 3C                 2207 	.db #0x3c	; 60
   083A 04                 2208 	.db #0x04	; 4
   083B 38                 2209 	.db #0x38	; 56	'8'
   083C 00                 2210 	.db #0x00	; 0
   083D 00                 2211 	.db #0x00	; 0
   083E 10                 2212 	.db #0x10	; 16
   083F 38                 2213 	.db #0x38	; 56	'8'
   0840 54                 2214 	.db #0x54	; 84	'T'
   0841 54                 2215 	.db #0x54	; 84	'T'
   0842 54                 2216 	.db #0x54	; 84	'T'
   0843 38                 2217 	.db #0x38	; 56	'8'
   0844 10                 2218 	.db #0x10	; 16
   0845 00                 2219 	.db #0x00	; 0
   0846 00                 2220 	.db #0x00	; 0
   0847 44                 2221 	.db #0x44	; 68	'D'
   0848 28                 2222 	.db #0x28	; 40
   0849 10                 2223 	.db #0x10	; 16
   084A 28                 2224 	.db #0x28	; 40
   084B 44                 2225 	.db #0x44	; 68	'D'
   084C 00                 2226 	.db #0x00	; 0
   084D 00                 2227 	.db #0x00	; 0
   084E 00                 2228 	.db #0x00	; 0
   084F 48                 2229 	.db #0x48	; 72	'H'
   0850 48                 2230 	.db #0x48	; 72	'H'
   0851 48                 2231 	.db #0x48	; 72	'H'
   0852 48                 2232 	.db #0x48	; 72	'H'
   0853 7C                 2233 	.db #0x7c	; 124
   0854 04                 2234 	.db #0x04	; 4
   0855 00                 2235 	.db #0x00	; 0
   0856 00                 2236 	.db #0x00	; 0
   0857 44                 2237 	.db #0x44	; 68	'D'
   0858 44                 2238 	.db #0x44	; 68	'D'
   0859 3C                 2239 	.db #0x3c	; 60
   085A 04                 2240 	.db #0x04	; 4
   085B 04                 2241 	.db #0x04	; 4
   085C 00                 2242 	.db #0x00	; 0
   085D 00                 2243 	.db #0x00	; 0
   085E 00                 2244 	.db #0x00	; 0
   085F 54                 2245 	.db #0x54	; 84	'T'
   0860 54                 2246 	.db #0x54	; 84	'T'
   0861 54                 2247 	.db #0x54	; 84	'T'
   0862 54                 2248 	.db #0x54	; 84	'T'
   0863 7C                 2249 	.db #0x7c	; 124
   0864 00                 2250 	.db #0x00	; 0
   0865 00                 2251 	.db #0x00	; 0
   0866 00                 2252 	.db #0x00	; 0
   0867 54                 2253 	.db #0x54	; 84	'T'
   0868 54                 2254 	.db #0x54	; 84	'T'
   0869 54                 2255 	.db #0x54	; 84	'T'
   086A 54                 2256 	.db #0x54	; 84	'T'
   086B 7C                 2257 	.db #0x7c	; 124
   086C 04                 2258 	.db #0x04	; 4
   086D 00                 2259 	.db #0x00	; 0
   086E 00                 2260 	.db #0x00	; 0
   086F 60                 2261 	.db #0x60	; 96
   0870 38                 2262 	.db #0x38	; 56	'8'
   0871 24                 2263 	.db #0x24	; 36
   0872 24                 2264 	.db #0x24	; 36
   0873 38                 2265 	.db #0x38	; 56	'8'
   0874 00                 2266 	.db #0x00	; 0
   0875 00                 2267 	.db #0x00	; 0
   0876 00                 2268 	.db #0x00	; 0
   0877 44                 2269 	.db #0x44	; 68	'D'
   0878 64                 2270 	.db #0x64	; 100	'd'
   0879 54                 2271 	.db #0x54	; 84	'T'
   087A 54                 2272 	.db #0x54	; 84	'T'
   087B 64                 2273 	.db #0x64	; 100	'd'
   087C 00                 2274 	.db #0x00	; 0
   087D 00                 2275 	.db #0x00	; 0
   087E 00                 2276 	.db #0x00	; 0
   087F 40                 2277 	.db #0x40	; 64
   0880 78                 2278 	.db #0x78	; 120	'x'
   0881 44                 2279 	.db #0x44	; 68	'D'
   0882 44                 2280 	.db #0x44	; 68	'D'
   0883 78                 2281 	.db #0x78	; 120	'x'
   0884 00                 2282 	.db #0x00	; 0
   0885 00                 2283 	.db #0x00	; 0
   0886 00                 2284 	.db #0x00	; 0
   0887 78                 2285 	.db #0x78	; 120	'x'
   0888 04                 2286 	.db #0x04	; 4
   0889 3C                 2287 	.db #0x3c	; 60
   088A 04                 2288 	.db #0x04	; 4
   088B 78                 2289 	.db #0x78	; 120	'x'
   088C 00                 2290 	.db #0x00	; 0
   088D 00                 2291 	.db #0x00	; 0
   088E 00                 2292 	.db #0x00	; 0
   088F 48                 2293 	.db #0x48	; 72	'H'
   0890 54                 2294 	.db #0x54	; 84	'T'
   0891 74                 2295 	.db #0x74	; 116	't'
   0892 54                 2296 	.db #0x54	; 84	'T'
   0893 48                 2297 	.db #0x48	; 72	'H'
   0894 00                 2298 	.db #0x00	; 0
   0895 00                 2299 	.db #0x00	; 0
   0896 00                 2300 	.db #0x00	; 0
   0897 3C                 2301 	.db #0x3c	; 60
   0898 44                 2302 	.db #0x44	; 68	'D'
   0899 3C                 2303 	.db #0x3c	; 60
   089A 24                 2304 	.db #0x24	; 36
   089B 44                 2305 	.db #0x44	; 68	'D'
   089C 00                 2306 	.db #0x00	; 0
   089D 00                 2307 	.db #0x00	; 0
   089E 00                 2308 	.db #0x00	; 0
   089F 7C                 2309 	.db #0x7c	; 124
   08A0 00                 2310 	.db #0x00	; 0
   08A1 7C                 2311 	.db #0x7c	; 124
   08A2 00                 2312 	.db #0x00	; 0
   08A3 7C                 2313 	.db #0x7c	; 124
   08A4 00                 2314 	.db #0x00	; 0
   08A5 00                 2315 	.db #0x00	; 0
   08A6 00                 2316 	.db #0x00	; 0
   08A7 10                 2317 	.db #0x10	; 16
   08A8 7C                 2318 	.db #0x7c	; 124
   08A9 10                 2319 	.db #0x10	; 16
   08AA 00                 2320 	.db #0x00	; 0
   08AB 7C                 2321 	.db #0x7c	; 124
   08AC 00                 2322 	.db #0x00	; 0
   08AD 00                 2323 	.db #0x00	; 0
   08AE 20                 2324 	.db #0x20	; 32
   08AF 10                 2325 	.db #0x10	; 16
   08B0 08                 2326 	.db #0x08	; 8
   08B1 10                 2327 	.db #0x10	; 16
   08B2 24                 2328 	.db #0x24	; 36
   08B3 08                 2329 	.db #0x08	; 8
   08B4 10                 2330 	.db #0x10	; 16
   08B5 00                 2331 	.db #0x00	; 0
   08B6 08                 2332 	.db #0x08	; 8
   08B7 10                 2333 	.db #0x10	; 16
   08B8 20                 2334 	.db #0x20	; 32
   08B9 10                 2335 	.db #0x10	; 16
   08BA 48                 2336 	.db #0x48	; 72	'H'
   08BB 20                 2337 	.db #0x20	; 32
   08BC 10                 2338 	.db #0x10	; 16
   08BD 30                 2339 	.db #0x30	; 48	'0'
   08BE 48                 2340 	.db #0x48	; 72	'H'
   08BF 40                 2341 	.db #0x40	; 64
   08C0 40                 2342 	.db #0x40	; 64
   08C1 40                 2343 	.db #0x40	; 64
   08C2 40                 2344 	.db #0x40	; 64
   08C3 40                 2345 	.db #0x40	; 64
   08C4 00                 2346 	.db #0x00	; 0
   08C5 08                 2347 	.db #0x08	; 8
   08C6 08                 2348 	.db #0x08	; 8
   08C7 08                 2349 	.db #0x08	; 8
   08C8 08                 2350 	.db #0x08	; 8
   08C9 08                 2351 	.db #0x08	; 8
   08CA 48                 2352 	.db #0x48	; 72	'H'
   08CB 30                 2353 	.db #0x30	; 48	'0'
   08CC 00                 2354 	.db #0x00	; 0
   08CD 00                 2355 	.db #0x00	; 0
   08CE 00                 2356 	.db #0x00	; 0
   08CF 10                 2357 	.db #0x10	; 16
   08D0 00                 2358 	.db #0x00	; 0
   08D1 7C                 2359 	.db #0x7c	; 124
   08D2 00                 2360 	.db #0x00	; 0
   08D3 10                 2361 	.db #0x10	; 16
   08D4 00                 2362 	.db #0x00	; 0
   08D5 00                 2363 	.db #0x00	; 0
   08D6 00                 2364 	.db #0x00	; 0
   08D7 34                 2365 	.db #0x34	; 52	'4'
   08D8 48                 2366 	.db #0x48	; 72	'H'
   08D9 00                 2367 	.db #0x00	; 0
   08DA 24                 2368 	.db #0x24	; 36
   08DB 58                 2369 	.db #0x58	; 88	'X'
   08DC 00                 2370 	.db #0x00	; 0
   08DD 00                 2371 	.db #0x00	; 0
   08DE 30                 2372 	.db #0x30	; 48	'0'
   08DF 48                 2373 	.db #0x48	; 72	'H'
   08E0 48                 2374 	.db #0x48	; 72	'H'
   08E1 30                 2375 	.db #0x30	; 48	'0'
   08E2 00                 2376 	.db #0x00	; 0
   08E3 00                 2377 	.db #0x00	; 0
   08E4 00                 2378 	.db #0x00	; 0
   08E5 00                 2379 	.db #0x00	; 0
   08E6 00                 2380 	.db #0x00	; 0
   08E7 00                 2381 	.db #0x00	; 0
   08E8 38                 2382 	.db #0x38	; 56	'8'
   08E9 38                 2383 	.db #0x38	; 56	'8'
   08EA 00                 2384 	.db #0x00	; 0
   08EB 00                 2385 	.db #0x00	; 0
   08EC 00                 2386 	.db #0x00	; 0
   08ED 00                 2387 	.db #0x00	; 0
   08EE 00                 2388 	.db #0x00	; 0
   08EF 00                 2389 	.db #0x00	; 0
   08F0 00                 2390 	.db #0x00	; 0
   08F1 00                 2391 	.db #0x00	; 0
   08F2 00                 2392 	.db #0x00	; 0
   08F3 38                 2393 	.db #0x38	; 56	'8'
   08F4 00                 2394 	.db #0x00	; 0
   08F5 00                 2395 	.db #0x00	; 0
   08F6 04                 2396 	.db #0x04	; 4
   08F7 04                 2397 	.db #0x04	; 4
   08F8 08                 2398 	.db #0x08	; 8
   08F9 48                 2399 	.db #0x48	; 72	'H'
   08FA 30                 2400 	.db #0x30	; 48	'0'
   08FB 10                 2401 	.db #0x10	; 16
   08FC 00                 2402 	.db #0x00	; 0
   08FD 00                 2403 	.db #0x00	; 0
   08FE 70                 2404 	.db #0x70	; 112	'p'
   08FF 48                 2405 	.db #0x48	; 72	'H'
   0900 48                 2406 	.db #0x48	; 72	'H'
   0901 48                 2407 	.db #0x48	; 72	'H'
   0902 00                 2408 	.db #0x00	; 0
   0903 00                 2409 	.db #0x00	; 0
   0904 00                 2410 	.db #0x00	; 0
   0905 30                 2411 	.db #0x30	; 48	'0'
   0906 48                 2412 	.db #0x48	; 72	'H'
   0907 10                 2413 	.db #0x10	; 16
   0908 20                 2414 	.db #0x20	; 32
   0909 78                 2415 	.db #0x78	; 120	'x'
   090A 00                 2416 	.db #0x00	; 0
   090B 00                 2417 	.db #0x00	; 0
   090C 00                 2418 	.db #0x00	; 0
   090D 00                 2419 	.db #0x00	; 0
   090E 00                 2420 	.db #0x00	; 0
   090F 00                 2421 	.db #0x00	; 0
   0910 38                 2422 	.db #0x38	; 56	'8'
   0911 38                 2423 	.db #0x38	; 56	'8'
   0912 38                 2424 	.db #0x38	; 56	'8'
   0913 00                 2425 	.db #0x00	; 0
   0914 00                 2426 	.db #0x00	; 0
   0915 00                 2427 	.db #0x00	; 0
   0916 00                 2428 	.db #0x00	; 0
   0917 00                 2429 	.db #0x00	; 0
   0918 00                 2430 	.db #0x00	; 0
   0919 00                 2431 	.db #0x00	; 0
   091A 00                 2432 	.db #0x00	; 0
   091B 00                 2433 	.db #0x00	; 0
   091C 00                 2434 	.db #0x00	; 0
   091D                    2435 _wav:
   091D 87                 2436 	.db #0x87	; 135
   091E 90                 2437 	.db #0x90	; 144
   091F 98                 2438 	.db #0x98	; 152
   0920 A0                 2439 	.db #0xa0	; 160
   0921 A7                 2440 	.db #0xa7	; 167
   0922 AF                 2441 	.db #0xaf	; 175
   0923 B6                 2442 	.db #0xb6	; 182
   0924 BC                 2443 	.db #0xbc	; 188
   0925 C4                 2444 	.db #0xc4	; 196
   0926 CA                 2445 	.db #0xca	; 202
   0927 D2                 2446 	.db #0xd2	; 210
   0928 D7                 2447 	.db #0xd7	; 215
   0929 DC                 2448 	.db #0xdc	; 220
   092A E2                 2449 	.db #0xe2	; 226
   092B E6                 2450 	.db #0xe6	; 230
   092C EC                 2451 	.db #0xec	; 236
   092D EF                 2452 	.db #0xef	; 239
   092E F2                 2453 	.db #0xf2	; 242
   092F F7                 2454 	.db #0xf7	; 247
   0930 F9                 2455 	.db #0xf9	; 249
   0931 FB                 2456 	.db #0xfb	; 251
   0932 FD                 2457 	.db #0xfd	; 253
   0933 FF                 2458 	.db #0xff	; 255
   0934 FF                 2459 	.db #0xff	; 255
   0935 FF                 2460 	.db #0xff	; 255
   0936 FF                 2461 	.db #0xff	; 255
   0937 FE                 2462 	.db #0xfe	; 254
   0938 FE                 2463 	.db #0xfe	; 254
   0939 FB                 2464 	.db #0xfb	; 251
   093A F9                 2465 	.db #0xf9	; 249
   093B F7                 2466 	.db #0xf7	; 247
   093C F3                 2467 	.db #0xf3	; 243
   093D F1                 2468 	.db #0xf1	; 241
   093E ED                 2469 	.db #0xed	; 237
   093F E7                 2470 	.db #0xe7	; 231
   0940 E2                 2471 	.db #0xe2	; 226
   0941 DE                 2472 	.db #0xde	; 222
   0942 D7                 2473 	.db #0xd7	; 215
   0943 D1                 2474 	.db #0xd1	; 209
   0944 CC                 2475 	.db #0xcc	; 204
   0945 C5                 2476 	.db #0xc5	; 197
   0946 BE                 2477 	.db #0xbe	; 190
   0947 B6                 2478 	.db #0xb6	; 182
   0948 B0                 2479 	.db #0xb0	; 176
   0949 A8                 2480 	.db #0xa8	; 168
   094A A1                 2481 	.db #0xa1	; 161
   094B 99                 2482 	.db #0x99	; 153
   094C 91                 2483 	.db #0x91	; 145
   094D 88                 2484 	.db #0x88	; 136
   094E 81                 2485 	.db #0x81	; 129
   094F 7A                 2486 	.db #0x7a	; 122	'z'
   0950 72                 2487 	.db #0x72	; 114	'r'
   0951 6A                 2488 	.db #0x6a	; 106	'j'
   0952 61                 2489 	.db #0x61	; 97	'a'
   0953 59                 2490 	.db #0x59	; 89	'Y'
   0954 52                 2491 	.db #0x52	; 82	'R'
   0955 4A                 2492 	.db #0x4a	; 74	'J'
   0956 44                 2493 	.db #0x44	; 68	'D'
   0957 3C                 2494 	.db #0x3c	; 60
   0958 36                 2495 	.db #0x36	; 54	'6'
   0959 2F                 2496 	.db #0x2f	; 47
   095A 29                 2497 	.db #0x29	; 41
   095B 24                 2498 	.db #0x24	; 36
   095C 1E                 2499 	.db #0x1e	; 30
   095D 1A                 2500 	.db #0x1a	; 26
   095E 15                 2501 	.db #0x15	; 21
   095F 11                 2502 	.db #0x11	; 17
   0960 0E                 2503 	.db #0x0e	; 14
   0961 0B                 2504 	.db #0x0b	; 11
   0962 07                 2505 	.db #0x07	; 7
   0963 04                 2506 	.db #0x04	; 4
   0964 03                 2507 	.db #0x03	; 3
   0965 01                 2508 	.db #0x01	; 1
   0966 00                 2509 	.db #0x00	; 0
   0967 00                 2510 	.db #0x00	; 0
   0968 00                 2511 	.db #0x00	; 0
   0969 02                 2512 	.db #0x02	; 2
   096A 03                 2513 	.db #0x03	; 3
   096B 05                 2514 	.db #0x05	; 5
   096C 06                 2515 	.db #0x06	; 6
   096D 09                 2516 	.db #0x09	; 9
   096E 0C                 2517 	.db #0x0c	; 12
   096F 10                 2518 	.db #0x10	; 16
   0970 14                 2519 	.db #0x14	; 20
   0971 18                 2520 	.db #0x18	; 24
   0972 1C                 2521 	.db #0x1c	; 28
   0973 22                 2522 	.db #0x22	; 34
   0974 27                 2523 	.db #0x27	; 39
   0975 2E                 2524 	.db #0x2e	; 46
   0976 34                 2525 	.db #0x34	; 52	'4'
   0977 3C                 2526 	.db #0x3c	; 60
   0978 42                 2527 	.db #0x42	; 66	'B'
   0979 48                 2528 	.db #0x48	; 72	'H'
   097A 4F                 2529 	.db #0x4f	; 79	'O'
   097B 57                 2530 	.db #0x57	; 87	'W'
   097C 5F                 2531 	.db #0x5f	; 95
   097D 66                 2532 	.db #0x66	; 102	'f'
   097E 6E                 2533 	.db #0x6e	; 110	'n'
   097F 78                 2534 	.db #0x78	; 120	'x'
   0980 7E                 2535 	.db #0x7e	; 126
   0981                    2536 __str_0:
   0981 49 6E 74 65 72 6E  2537 	.ascii "Internal 1.75MHz"
        61 6C 20 31 2E 37
        35 4D 48 7A
   0991 00                 2538 	.db 0x00
   0992                    2539 __str_1:
   0992 49 6E 74 65 72 6E  2540 	.ascii "Internal 1.775MHz"
        61 6C 20 31 2E 37
        37 35 4D 48 7A
   09A3 00                 2541 	.db 0x00
   09A4                    2542 __str_2:
   09A4 49 6E 74 65 72 6E  2543 	.ascii "Internal 3.5MHz"
        61 6C 20 33 2E 35
        4D 48 7A
   09B3 00                 2544 	.db 0x00
   09B4                    2545 __str_3:
   09B4 49 6E 74 65 72 6E  2546 	.ascii "Internal 3.55MHz"
        61 6C 20 33 2E 35
        35 4D 48 7A
   09C4 00                 2547 	.db 0x00
   09C5                    2548 __str_4:
   09C5 49 6E 74 65 72 6E  2549 	.ascii "Internal 1.0MHz"
        61 6C 20 31 2E 30
        4D 48 7A
   09D4 00                 2550 	.db 0x00
   09D5                    2551 __str_5:
   09D5 49 6E 74 65 72 6E  2552 	.ascii "Internal 2.0MHz"
        61 6C 20 32 2E 30
        4D 48 7A
   09E4 00                 2553 	.db 0x00
   09E5                    2554 __str_6:
   09E5 45 78 74 65 72 6E  2555 	.ascii "External"
        61 6C
   09ED 00                 2556 	.db 0x00
   09EE                    2557 __str_7:
   09EE 45 78 74 65 72 6E  2558 	.ascii "External with SEL"
        61 6C 20 77 69 74
        68 20 53 45 4C
   09FF 00                 2559 	.db 0x00
   0A00                    2560 __str_8:
   0A00 41 59 2D 33 2D 38  2561 	.ascii "AY-3-8912"
        39 31 32
   0A09 00                 2562 	.db 0x00
   0A0A                    2563 __str_9:
   0A0A 59 4D 2D 32 31 34  2564 	.ascii "YM-2149F"
        39 46
   0A12 00                 2565 	.db 0x00
   0A13                    2566 __str_10:
   0A13 55 6E 72 65 61 6C  2567 	.ascii "Unreal Speccy"
        20 53 70 65 63 63
        79
   0A20 00                 2568 	.db 0x00
   0A21                    2569 __str_11:
   0A21 43 75 73 74 6F 6D  2570 	.ascii "Custom"
   0A27 00                 2571 	.db 0x00
   0A28                    2572 __str_12:
   0A28 32 20 63 68 69 70  2573 	.ascii "2 chips (TS)"
        73 20 28 54 53 29
   0A34 00                 2574 	.db 0x00
   0A35                    2575 __str_13:
   0A35 31 20 63 68 69 70  2576 	.ascii "1 chip"
   0A3B 00                 2577 	.db 0x00
   0A3C                    2578 __str_14:
   0A3C 32 20 63 68 69 70  2579 	.ascii "2 chips"
        73
   0A43 00                 2580 	.db 0x00
   0A44                    2581 __str_15:
   0A44 33 20 63 68 69 70  2582 	.ascii "3 chips"
        73
   0A4B 00                 2583 	.db 0x00
   0A4C                    2584 __str_16:
   0A4C 34 20 63 68 69 70  2585 	.ascii "4 chips"
        73
   0A53 00                 2586 	.db 0x00
   0A54                    2587 __str_17:
   0A54 00                 2588 	.db 0x00
   0A55                    2589 __str_18:
   0A55 44 69 73 61 62 6C  2590 	.ascii "Disable PSG"
        65 20 50 53 47
   0A60 00                 2591 	.db 0x00
                           2592 ;src/screen.c:181: void fade()
                           2593 ;	---------------------------------
                           2594 ; Function fade
                           2595 ; ---------------------------------
   0A61                    2596 _fade::
                           2597 ;src/screen.c:183: memset((void*)0x5800, 1, 768);
   0A61 21 00 58      [10] 2598 	ld	hl, #0x5800
   0A64 36 01         [10] 2599 	ld	(hl), #0x01
   0A66 5D            [ 4] 2600 	ld	e, l
   0A67 54            [ 4] 2601 	ld	d, h
   0A68 13            [ 6] 2602 	inc	de
   0A69 01 FF 02      [10] 2603 	ld	bc, #0x02ff
   0A6C ED B0         [21] 2604 	ldir
                           2605 ;src/screen.c:184: }
   0A6E C9            [10] 2606 	ret
                           2607 ;src/screen.c:186: void putc(u8 c)
                           2608 ;	---------------------------------
                           2609 ; Function putc
                           2610 ; ---------------------------------
   0A6F                    2611 _putc::
                           2612 ;src/screen.c:188: if((c == '\r') || (c == '\n'))
   0A6F FD 21 02 00   [14] 2613 	ld	iy, #2
   0A73 FD 39         [15] 2614 	add	iy, sp
   0A75 FD 7E 00      [19] 2615 	ld	a, 0 (iy)
   0A78 D6 0D         [ 7] 2616 	sub	a, #0x0d
   0A7A 28 07         [12] 2617 	jr	Z,00101$
   0A7C FD 7E 00      [19] 2618 	ld	a, 0 (iy)
   0A7F D6 0A         [ 7] 2619 	sub	a, #0x0a
   0A81 20 0B         [12] 2620 	jr	NZ,00102$
   0A83                    2621 00101$:
                           2622 ;src/screen.c:190: xy(defx, cy + 1);
   0A83 3Ar02r00      [13] 2623 	ld	a,(#_defx + 0)
   0A86 32r00r00      [13] 2624 	ld	(#_cx + 0),a
   0A89 21r01r00      [10] 2625 	ld	hl, #_cy+0
   0A8C 34            [11] 2626 	inc	(hl)
                           2627 ;src/screen.c:191: return;
   0A8D C9            [10] 2628 	ret
   0A8E                    2629 00102$:
                           2630 ;src/screen.c:194: drawc(c);
   0A8E 21 02 00      [10] 2631 	ld	hl, #2+0
   0A91 39            [11] 2632 	add	hl, sp
   0A92 7E            [ 7] 2633 	ld	a, (hl)
   0A93 F5            [11] 2634 	push	af
   0A94 33            [ 6] 2635 	inc	sp
   0A95 CDr08r00      [17] 2636 	call	_drawc
   0A98 33            [ 6] 2637 	inc	sp
                           2638 ;src/screen.c:195: xy(cx + 6, cy);
   0A99 FD 21r00r00   [14] 2639 	ld	iy, #_cx
   0A9D FD 7E 00      [19] 2640 	ld	a, 0 (iy)
   0AA0 C6 06         [ 7] 2641 	add	a, #0x06
   0AA2 FD 77 00      [19] 2642 	ld	0 (iy), a
                           2643 ;src/screen.c:196: }
   0AA5 C9            [10] 2644 	ret
                           2645 ;src/screen.c:198: int putchar(int c)
                           2646 ;	---------------------------------
                           2647 ; Function putchar
                           2648 ; ---------------------------------
   0AA6                    2649 _putchar::
                           2650 ;src/screen.c:200: putc(c);
   0AA6 21 02 00      [10] 2651 	ld	hl, #2+0
   0AA9 39            [11] 2652 	add	hl, sp
   0AAA 7E            [ 7] 2653 	ld	a, (hl)
   0AAB F5            [11] 2654 	push	af
   0AAC 33            [ 6] 2655 	inc	sp
   0AAD CDr6Fr0A      [17] 2656 	call	_putc
   0AB0 33            [ 6] 2657 	inc	sp
                           2658 ;src/screen.c:201: return 0;
   0AB1 21 00 00      [10] 2659 	ld	hl, #0x0000
                           2660 ;src/screen.c:202: }
   0AB4 C9            [10] 2661 	ret
                           2662 ;src/screen.c:204: void frame(u8 xx, u8 yy, u8 sx, u8 sy, u8 cf)
                           2663 ;	---------------------------------
                           2664 ; Function frame
                           2665 ; ---------------------------------
   0AB5                    2666 _frame::
   0AB5 DD E5         [15] 2667 	push	ix
   0AB7 DD 21 00 00   [14] 2668 	ld	ix,#0
   0ABB DD 39         [15] 2669 	add	ix,sp
                           2670 ;src/screen.c:207: xy(xx, yy);
   0ABD DD 7E 04      [19] 2671 	ld	a, 4 (ix)
   0AC0 32r00r00      [13] 2672 	ld	(#_cx + 0),a
   0AC3 DD 7E 05      [19] 2673 	ld	a, 5 (ix)
   0AC6 32r01r00      [13] 2674 	ld	(#_cy + 0),a
                           2675 ;src/screen.c:209: color(cf);
   0AC9 DD 7E 08      [19] 2676 	ld	a, 8 (ix)
   0ACC 32r03r00      [13] 2677 	ld	(#_cc + 0),a
                           2678 ;src/screen.c:211: putc(201);
   0ACF 3E C9         [ 7] 2679 	ld	a, #0xc9
   0AD1 F5            [11] 2680 	push	af
   0AD2 33            [ 6] 2681 	inc	sp
   0AD3 CDr6Fr0A      [17] 2682 	call	_putc
   0AD6 33            [ 6] 2683 	inc	sp
                           2684 ;src/screen.c:212: for (i = 0; i < sx; i++)
   0AD7 0E 00         [ 7] 2685 	ld	c, #0x00
   0AD9                    2686 00106$:
   0AD9 79            [ 4] 2687 	ld	a, c
   0ADA DD 96 06      [19] 2688 	sub	a, 6 (ix)
   0ADD 30 0D         [12] 2689 	jr	NC,00101$
                           2690 ;src/screen.c:213: putc(205);
   0ADF C5            [11] 2691 	push	bc
   0AE0 3E CD         [ 7] 2692 	ld	a, #0xcd
   0AE2 F5            [11] 2693 	push	af
   0AE3 33            [ 6] 2694 	inc	sp
   0AE4 CDr6Fr0A      [17] 2695 	call	_putc
   0AE7 33            [ 6] 2696 	inc	sp
   0AE8 C1            [10] 2697 	pop	bc
                           2698 ;src/screen.c:212: for (i = 0; i < sx; i++)
   0AE9 0C            [ 4] 2699 	inc	c
   0AEA 18 ED         [12] 2700 	jr	00106$
   0AEC                    2701 00101$:
                           2702 ;src/screen.c:214: putc(187);
   0AEC 3E BB         [ 7] 2703 	ld	a, #0xbb
   0AEE F5            [11] 2704 	push	af
   0AEF 33            [ 6] 2705 	inc	sp
   0AF0 CDr6Fr0A      [17] 2706 	call	_putc
   0AF3 33            [ 6] 2707 	inc	sp
                           2708 ;src/screen.c:215: xy(xx, cy + 1);
   0AF4 DD 7E 04      [19] 2709 	ld	a, 4 (ix)
   0AF7 32r00r00      [13] 2710 	ld	(#_cx + 0),a
   0AFA 21r01r00      [10] 2711 	ld	hl, #_cy+0
   0AFD 34            [11] 2712 	inc	(hl)
                           2713 ;src/screen.c:217: for(j = 0; j < sy; j++)
   0AFE DD 4E 04      [19] 2714 	ld	c, 4 (ix)
   0B01 06 00         [ 7] 2715 	ld	b, #0x00
   0B03                    2716 00112$:
   0B03 78            [ 4] 2717 	ld	a, b
   0B04 DD 96 07      [19] 2718 	sub	a, 7 (ix)
   0B07 30 36         [12] 2719 	jr	NC,00103$
                           2720 ;src/screen.c:219: putc(186);
   0B09 C5            [11] 2721 	push	bc
   0B0A 3E BA         [ 7] 2722 	ld	a, #0xba
   0B0C F5            [11] 2723 	push	af
   0B0D 33            [ 6] 2724 	inc	sp
   0B0E CDr6Fr0A      [17] 2725 	call	_putc
   0B11 33            [ 6] 2726 	inc	sp
   0B12 C1            [10] 2727 	pop	bc
                           2728 ;src/screen.c:220: for (i = 0; i < sx; i++)
   0B13 1E 00         [ 7] 2729 	ld	e, #0x00
   0B15                    2730 00109$:
   0B15 7B            [ 4] 2731 	ld	a, e
   0B16 DD 96 06      [19] 2732 	sub	a, 6 (ix)
   0B19 30 0F         [12] 2733 	jr	NC,00102$
                           2734 ;src/screen.c:221: putc(32);
   0B1B C5            [11] 2735 	push	bc
   0B1C D5            [11] 2736 	push	de
   0B1D 3E 20         [ 7] 2737 	ld	a, #0x20
   0B1F F5            [11] 2738 	push	af
   0B20 33            [ 6] 2739 	inc	sp
   0B21 CDr6Fr0A      [17] 2740 	call	_putc
   0B24 33            [ 6] 2741 	inc	sp
   0B25 D1            [10] 2742 	pop	de
   0B26 C1            [10] 2743 	pop	bc
                           2744 ;src/screen.c:220: for (i = 0; i < sx; i++)
   0B27 1C            [ 4] 2745 	inc	e
   0B28 18 EB         [12] 2746 	jr	00109$
   0B2A                    2747 00102$:
                           2748 ;src/screen.c:222: putc(186);
   0B2A C5            [11] 2749 	push	bc
   0B2B 3E BA         [ 7] 2750 	ld	a, #0xba
   0B2D F5            [11] 2751 	push	af
   0B2E 33            [ 6] 2752 	inc	sp
   0B2F CDr6Fr0A      [17] 2753 	call	_putc
   0B32 33            [ 6] 2754 	inc	sp
   0B33 C1            [10] 2755 	pop	bc
                           2756 ;src/screen.c:223: xy(xx, cy + 1);
   0B34 21r00r00      [10] 2757 	ld	hl,#_cx + 0
   0B37 71            [ 7] 2758 	ld	(hl), c
   0B38 21r01r00      [10] 2759 	ld	hl, #_cy+0
   0B3B 34            [11] 2760 	inc	(hl)
                           2761 ;src/screen.c:217: for(j = 0; j < sy; j++)
   0B3C 04            [ 4] 2762 	inc	b
   0B3D 18 C4         [12] 2763 	jr	00112$
   0B3F                    2764 00103$:
                           2765 ;src/screen.c:226: putc(200);
   0B3F 3E C8         [ 7] 2766 	ld	a, #0xc8
   0B41 F5            [11] 2767 	push	af
   0B42 33            [ 6] 2768 	inc	sp
   0B43 CDr6Fr0A      [17] 2769 	call	_putc
   0B46 33            [ 6] 2770 	inc	sp
                           2771 ;src/screen.c:227: for (i = 0; i < sx; i++)
   0B47 0E 00         [ 7] 2772 	ld	c, #0x00
   0B49                    2773 00115$:
   0B49 79            [ 4] 2774 	ld	a, c
   0B4A DD 96 06      [19] 2775 	sub	a, 6 (ix)
   0B4D 30 0D         [12] 2776 	jr	NC,00104$
                           2777 ;src/screen.c:228: putc(205);
   0B4F C5            [11] 2778 	push	bc
   0B50 3E CD         [ 7] 2779 	ld	a, #0xcd
   0B52 F5            [11] 2780 	push	af
   0B53 33            [ 6] 2781 	inc	sp
   0B54 CDr6Fr0A      [17] 2782 	call	_putc
   0B57 33            [ 6] 2783 	inc	sp
   0B58 C1            [10] 2784 	pop	bc
                           2785 ;src/screen.c:227: for (i = 0; i < sx; i++)
   0B59 0C            [ 4] 2786 	inc	c
   0B5A 18 ED         [12] 2787 	jr	00115$
   0B5C                    2788 00104$:
                           2789 ;src/screen.c:229: putc(188);
   0B5C 3E BC         [ 7] 2790 	ld	a, #0xbc
   0B5E F5            [11] 2791 	push	af
   0B5F 33            [ 6] 2792 	inc	sp
   0B60 CDr6Fr0A      [17] 2793 	call	_putc
   0B63 33            [ 6] 2794 	inc	sp
                           2795 ;src/screen.c:231: defx = xx + 8;
   0B64 DD 7E 04      [19] 2796 	ld	a, 4 (ix)
   0B67 C6 08         [ 7] 2797 	add	a, #0x08
   0B69 FD 21r02r00   [14] 2798 	ld	iy, #_defx
   0B6D FD 77 00      [19] 2799 	ld	0 (iy), a
                           2800 ;src/screen.c:232: xy(defx, yy + 1);
   0B70 FD 7E 00      [19] 2801 	ld	a, 0 (iy)
   0B73 32r00r00      [13] 2802 	ld	(#_cx + 0),a
   0B76 DD 7E 05      [19] 2803 	ld	a, 5 (ix)
   0B79 3C            [ 4] 2804 	inc	a
   0B7A 32r01r00      [13] 2805 	ld	(#_cy + 0),a
                           2806 ;src/screen.c:233: }
   0B7D DD E1         [14] 2807 	pop	ix
   0B7F C9            [10] 2808 	ret
                           2809 ;src/screen.c:235: void msg(u8 *adr)
                           2810 ;	---------------------------------
                           2811 ; Function msg
                           2812 ; ---------------------------------
   0B80                    2813 _msg::
                           2814 ;src/screen.c:238: while(c = *adr++)
   0B80 D1            [10] 2815 	pop	de
   0B81 C1            [10] 2816 	pop	bc
   0B82 C5            [11] 2817 	push	bc
   0B83 D5            [11] 2818 	push	de
   0B84                    2819 00101$:
   0B84 0A            [ 7] 2820 	ld	a, (bc)
   0B85 03            [ 6] 2821 	inc	bc
   0B86 57            [ 4] 2822 	ld	d, a
   0B87 B7            [ 4] 2823 	or	a, a
   0B88 C8            [11] 2824 	ret	Z
                           2825 ;src/screen.c:239: putc(c);
   0B89 C5            [11] 2826 	push	bc
   0B8A D5            [11] 2827 	push	de
   0B8B 33            [ 6] 2828 	inc	sp
   0B8C CDr6Fr0A      [17] 2829 	call	_putc
   0B8F 33            [ 6] 2830 	inc	sp
   0B90 C1            [10] 2831 	pop	bc
                           2832 ;src/screen.c:240: }
   0B91 18 F1         [12] 2833 	jr	00101$
                           2834 ;src/ayx32.c:16: void wr_page(u8 v) __naked
                           2835 ;	---------------------------------
                           2836 ; Function wr_page
                           2837 ; ---------------------------------
   0B93                    2838 _wr_page::
                           2839 ;src/ayx32.c:26: __endasm;
   0B93 21 02 00      [10] 2840 	ld	hl, #2
   0B96 39            [11] 2841 	add	hl, sp
   0B97 7E            [ 7] 2842 	ld	a, (hl)
   0B98 01 FD 7F      [10] 2843 	ld	bc, #0x7FFD
   0B9B ED 79         [12] 2844 	out	(c), a
   0B9D C9            [10] 2845 	ret
                           2846 ;src/ayx32.c:27: }
                           2847 ;src/ayx32.c:30: void wr_addr(u8 v) __naked
                           2848 ;	---------------------------------
                           2849 ; Function wr_addr
                           2850 ; ---------------------------------
   0B9E                    2851 _wr_addr::
                           2852 ;src/ayx32.c:40: __endasm;
   0B9E 21 02 00      [10] 2853 	ld	hl, #2
   0BA1 39            [11] 2854 	add	hl, sp
   0BA2 7E            [ 7] 2855 	ld	a, (hl)
   0BA3 01 FD FF      [10] 2856 	ld	bc, #0xFFFD
   0BA6 ED 79         [12] 2857 	out	(c), a
   0BA8 C9            [10] 2858 	ret
                           2859 ;src/ayx32.c:41: }
                           2860 ;src/ayx32.c:43: void wr_reg(u8 v) __naked
                           2861 ;	---------------------------------
                           2862 ; Function wr_reg
                           2863 ; ---------------------------------
   0BA9                    2864 _wr_reg::
                           2865 ;src/ayx32.c:53: __endasm;
   0BA9 21 02 00      [10] 2866 	ld	hl, #2
   0BAC 39            [11] 2867 	add	hl, sp
   0BAD 7E            [ 7] 2868 	ld	a, (hl)
   0BAE 01 FD BF      [10] 2869 	ld	bc, #0xBFFD
   0BB1 ED 79         [12] 2870 	out	(c), a
   0BB3 C9            [10] 2871 	ret
                           2872 ;src/ayx32.c:54: }
                           2873 ;src/ayx32.c:56: void wr_reg8(u8 reg, u8 data)
                           2874 ;	---------------------------------
                           2875 ; Function wr_reg8
                           2876 ; ---------------------------------
   0BB4                    2877 _wr_reg8::
                           2878 ;src/ayx32.c:58: wr_addr(reg);
   0BB4 21 02 00      [10] 2879 	ld	hl, #2+0
   0BB7 39            [11] 2880 	add	hl, sp
   0BB8 7E            [ 7] 2881 	ld	a, (hl)
   0BB9 F5            [11] 2882 	push	af
   0BBA 33            [ 6] 2883 	inc	sp
   0BBB CDr9Er0B      [17] 2884 	call	_wr_addr
   0BBE 33            [ 6] 2885 	inc	sp
                           2886 ;src/ayx32.c:59: wr_reg(data);
   0BBF 21 03 00      [10] 2887 	ld	hl, #3+0
   0BC2 39            [11] 2888 	add	hl, sp
   0BC3 7E            [ 7] 2889 	ld	a, (hl)
   0BC4 F5            [11] 2890 	push	af
   0BC5 33            [ 6] 2891 	inc	sp
   0BC6 CDrA9r0B      [17] 2892 	call	_wr_reg
   0BC9 33            [ 6] 2893 	inc	sp
                           2894 ;src/ayx32.c:60: }
   0BCA C9            [10] 2895 	ret
   0BCB                    2896 _pagsst:
   0BCB 10                 2897 	.db #0x10	; 16
   0BCC 11                 2898 	.db #0x11	; 17
   0BCD 13                 2899 	.db #0x13	; 19
   0BCE 14                 2900 	.db #0x14	; 20
   0BCF 16                 2901 	.db #0x16	; 22
   0BD0 17                 2902 	.db #0x17	; 23
                           2903 ;src/ayx32.c:62: void wr_reg32(u8 reg, u32 data)
                           2904 ;	---------------------------------
                           2905 ; Function wr_reg32
                           2906 ; ---------------------------------
   0BD1                    2907 _wr_reg32::
                           2908 ;src/ayx32.c:64: wr_addr(reg);
   0BD1 21 02 00      [10] 2909 	ld	hl, #2+0
   0BD4 39            [11] 2910 	add	hl, sp
   0BD5 7E            [ 7] 2911 	ld	a, (hl)
   0BD6 F5            [11] 2912 	push	af
   0BD7 33            [ 6] 2913 	inc	sp
   0BD8 CDr9Er0B      [17] 2914 	call	_wr_addr
   0BDB 33            [ 6] 2915 	inc	sp
                           2916 ;src/ayx32.c:65: wr_reg((u8)data);
   0BDC 21 03 00      [10] 2917 	ld	hl, #3+0
   0BDF 39            [11] 2918 	add	hl, sp
   0BE0 7E            [ 7] 2919 	ld	a, (hl)
   0BE1 F5            [11] 2920 	push	af
   0BE2 33            [ 6] 2921 	inc	sp
   0BE3 CDrA9r0B      [17] 2922 	call	_wr_reg
   0BE6 33            [ 6] 2923 	inc	sp
                           2924 ;src/ayx32.c:66: wr_reg((u8)(data >> 8));
   0BE7 21 04 00      [10] 2925 	ld	hl, #3+1
   0BEA 39            [11] 2926 	add	hl, sp
   0BEB 46            [ 7] 2927 	ld	b, (hl)
   0BEC 0E 00         [ 7] 2928 	ld	c, #0x00
   0BEE C5            [11] 2929 	push	bc
   0BEF 33            [ 6] 2930 	inc	sp
   0BF0 CDrA9r0B      [17] 2931 	call	_wr_reg
   0BF3 33            [ 6] 2932 	inc	sp
                           2933 ;src/ayx32.c:67: wr_reg((u8)(data >> 16));
   0BF4 FD 21 03 00   [14] 2934 	ld	iy, #3
   0BF8 FD 39         [15] 2935 	add	iy, sp
   0BFA FD 46 02      [19] 2936 	ld	b, 2 (iy)
   0BFD FD 4E 03      [19] 2937 	ld	c, 3 (iy)
   0C00 C5            [11] 2938 	push	bc
   0C01 33            [ 6] 2939 	inc	sp
   0C02 CDrA9r0B      [17] 2940 	call	_wr_reg
   0C05 33            [ 6] 2941 	inc	sp
                           2942 ;src/ayx32.c:68: wr_reg((u8)(data >> 24));
   0C06 21 06 00      [10] 2943 	ld	hl, #3+3
   0C09 39            [11] 2944 	add	hl, sp
   0C0A 46            [ 7] 2945 	ld	b, (hl)
   0C0B 0E 00         [ 7] 2946 	ld	c, #0x00
   0C0D C5            [11] 2947 	push	bc
   0C0E 33            [ 6] 2948 	inc	sp
   0C0F CDrA9r0B      [17] 2949 	call	_wr_reg
   0C12 33            [ 6] 2950 	inc	sp
                           2951 ;src/ayx32.c:69: }
   0C13 C9            [10] 2952 	ret
                           2953 ;src/ayx32.c:73: void wr_data_chunk(u8 *v) __naked
                           2954 ;	---------------------------------
                           2955 ; Function wr_data_chunk
                           2956 ; ---------------------------------
   0C14                    2957 _wr_data_chunk::
                           2958 ;src/ayx32.c:149: __endasm;
   0C14 21 02 00      [10] 2959 	ld	hl, #2
   0C17 39            [11] 2960 	add	hl, sp
   0C18 5E            [ 7] 2961 	ld	e, (hl)
   0C19 23            [ 6] 2962 	inc	hl
   0C1A 56            [ 7] 2963 	ld	d, (hl)
   0C1B EB            [ 4] 2964 	ex	de, hl
   0C1C 01 FD C0      [10] 2965 	ld	bc, #0xC0FD
   0C1F ED A3         [16] 2966 	outi
   0C21 ED A3         [16] 2967 	outi
   0C23 ED A3         [16] 2968 	outi
   0C25 ED A3         [16] 2969 	outi
   0C27 ED A3         [16] 2970 	outi
   0C29 ED A3         [16] 2971 	outi
   0C2B ED A3         [16] 2972 	outi
   0C2D ED A3         [16] 2973 	outi
   0C2F ED A3         [16] 2974 	outi
   0C31 ED A3         [16] 2975 	outi
   0C33 ED A3         [16] 2976 	outi
   0C35 ED A3         [16] 2977 	outi
   0C37 ED A3         [16] 2978 	outi
   0C39 ED A3         [16] 2979 	outi
   0C3B ED A3         [16] 2980 	outi
   0C3D ED A3         [16] 2981 	outi
   0C3F ED A3         [16] 2982 	outi
   0C41 ED A3         [16] 2983 	outi
   0C43 ED A3         [16] 2984 	outi
   0C45 ED A3         [16] 2985 	outi
   0C47 ED A3         [16] 2986 	outi
   0C49 ED A3         [16] 2987 	outi
   0C4B ED A3         [16] 2988 	outi
   0C4D ED A3         [16] 2989 	outi
   0C4F ED A3         [16] 2990 	outi
   0C51 ED A3         [16] 2991 	outi
   0C53 ED A3         [16] 2992 	outi
   0C55 ED A3         [16] 2993 	outi
   0C57 ED A3         [16] 2994 	outi
   0C59 ED A3         [16] 2995 	outi
   0C5B ED A3         [16] 2996 	outi
   0C5D ED A3         [16] 2997 	outi
   0C5F ED A3         [16] 2998 	outi
   0C61 ED A3         [16] 2999 	outi
   0C63 ED A3         [16] 3000 	outi
   0C65 ED A3         [16] 3001 	outi
   0C67 ED A3         [16] 3002 	outi
   0C69 ED A3         [16] 3003 	outi
   0C6B ED A3         [16] 3004 	outi
   0C6D ED A3         [16] 3005 	outi
   0C6F ED A3         [16] 3006 	outi
   0C71 ED A3         [16] 3007 	outi
   0C73 ED A3         [16] 3008 	outi
   0C75 ED A3         [16] 3009 	outi
   0C77 ED A3         [16] 3010 	outi
   0C79 ED A3         [16] 3011 	outi
   0C7B ED A3         [16] 3012 	outi
   0C7D ED A3         [16] 3013 	outi
   0C7F ED A3         [16] 3014 	outi
   0C81 ED A3         [16] 3015 	outi
   0C83 ED A3         [16] 3016 	outi
   0C85 ED A3         [16] 3017 	outi
   0C87 ED A3         [16] 3018 	outi
   0C89 ED A3         [16] 3019 	outi
   0C8B ED A3         [16] 3020 	outi
   0C8D ED A3         [16] 3021 	outi
   0C8F ED A3         [16] 3022 	outi
   0C91 ED A3         [16] 3023 	outi
   0C93 ED A3         [16] 3024 	outi
   0C95 ED A3         [16] 3025 	outi
   0C97 ED A3         [16] 3026 	outi
   0C99 ED A3         [16] 3027 	outi
   0C9B ED A3         [16] 3028 	outi
   0C9D ED A3         [16] 3029 	outi
   0C9F C9            [10] 3030 	ret
                           3031 ;src/ayx32.c:150: }
                           3032 ;src/ayx32.c:152: void wr_arr(u8 *ptr, u16 size)
                           3033 ;	---------------------------------
                           3034 ; Function wr_arr
                           3035 ; ---------------------------------
   0CA0                    3036 _wr_arr::
   0CA0 DD E5         [15] 3037 	push	ix
   0CA2 DD 21 00 00   [14] 3038 	ld	ix,#0
   0CA6 DD 39         [15] 3039 	add	ix,sp
                           3040 ;src/ayx32.c:154: while (size >= CHUNK_SIZE)
   0CA8 DD 6E 04      [19] 3041 	ld	l, 4 (ix)
   0CAB DD 66 05      [19] 3042 	ld	h, 5 (ix)
   0CAE DD 4E 06      [19] 3043 	ld	c, 6 (ix)
   0CB1 DD 46 07      [19] 3044 	ld	b, 7 (ix)
   0CB4                    3045 00101$:
   0CB4 79            [ 4] 3046 	ld	a, c
   0CB5 D6 40         [ 7] 3047 	sub	a, #0x40
   0CB7 78            [ 4] 3048 	ld	a, b
   0CB8 DE 00         [ 7] 3049 	sbc	a, #0x00
   0CBA 38 17         [12] 3050 	jr	C,00112$
                           3051 ;src/ayx32.c:156: wr_data_chunk(ptr);
   0CBC E5            [11] 3052 	push	hl
   0CBD C5            [11] 3053 	push	bc
   0CBE E5            [11] 3054 	push	hl
   0CBF CDr14r0C      [17] 3055 	call	_wr_data_chunk
   0CC2 F1            [10] 3056 	pop	af
   0CC3 C1            [10] 3057 	pop	bc
   0CC4 E1            [10] 3058 	pop	hl
                           3059 ;src/ayx32.c:157: ptr += CHUNK_SIZE;
   0CC5 11 40 00      [10] 3060 	ld	de, #0x0040
   0CC8 19            [11] 3061 	add	hl, de
                           3062 ;src/ayx32.c:158: size -= CHUNK_SIZE;
   0CC9 79            [ 4] 3063 	ld	a, c
   0CCA C6 C0         [ 7] 3064 	add	a, #0xc0
   0CCC 4F            [ 4] 3065 	ld	c, a
   0CCD 78            [ 4] 3066 	ld	a, b
   0CCE CE FF         [ 7] 3067 	adc	a, #0xff
   0CD0 47            [ 4] 3068 	ld	b, a
   0CD1 18 E1         [12] 3069 	jr	00101$
                           3070 ;src/ayx32.c:160: while (size--)
   0CD3                    3071 00112$:
   0CD3                    3072 00104$:
   0CD3 59            [ 4] 3073 	ld	e, c
   0CD4 50            [ 4] 3074 	ld	d, b
   0CD5 0B            [ 6] 3075 	dec	bc
   0CD6 7A            [ 4] 3076 	ld	a, d
   0CD7 B3            [ 4] 3077 	or	a, e
   0CD8 28 0E         [12] 3078 	jr	Z,00107$
                           3079 ;src/ayx32.c:161: wr_reg(*ptr++);
   0CDA 7E            [ 7] 3080 	ld	a, (hl)
   0CDB 23            [ 6] 3081 	inc	hl
   0CDC E5            [11] 3082 	push	hl
   0CDD C5            [11] 3083 	push	bc
   0CDE F5            [11] 3084 	push	af
   0CDF 33            [ 6] 3085 	inc	sp
   0CE0 CDrA9r0B      [17] 3086 	call	_wr_reg
   0CE3 33            [ 6] 3087 	inc	sp
   0CE4 C1            [10] 3088 	pop	bc
   0CE5 E1            [10] 3089 	pop	hl
   0CE6 18 EB         [12] 3090 	jr	00104$
   0CE8                    3091 00107$:
                           3092 ;src/ayx32.c:162: }
   0CE8 DD E1         [14] 3093 	pop	ix
   0CEA C9            [10] 3094 	ret
                           3095 ;src/ayx32.c:164: void wr_arrpg(u8 *ptr, u16 size)
                           3096 ;	---------------------------------
                           3097 ; Function wr_arrpg
                           3098 ; ---------------------------------
   0CEB                    3099 _wr_arrpg::
   0CEB DD E5         [15] 3100 	push	ix
   0CED DD 21 00 00   [14] 3101 	ld	ix,#0
   0CF1 DD 39         [15] 3102 	add	ix,sp
   0CF3 3B            [ 6] 3103 	dec	sp
                           3104 ;src/ayx32.c:166: u16 adr = (u16)(&ptr[0]);
   0CF4 DD 4E 04      [19] 3105 	ld	c, 4 (ix)
   0CF7 DD 46 05      [19] 3106 	ld	b, 5 (ix)
                           3107 ;src/ayx32.c:171: wr_page(pagsst[pp++]);
   0CFA 3ArCBr0B      [13] 3108 	ld	a, (#_pagsst + 0)
   0CFD C5            [11] 3109 	push	bc
   0CFE F5            [11] 3110 	push	af
   0CFF 33            [ 6] 3111 	inc	sp
   0D00 CDr93r0B      [17] 3112 	call	_wr_page
   0D03 33            [ 6] 3113 	inc	sp
   0D04 C1            [10] 3114 	pop	bc
                           3115 ;src/ayx32.c:172: while(size--)
   0D05 DD 5E 06      [19] 3116 	ld	e, 6 (ix)
   0D08 DD 56 07      [19] 3117 	ld	d, 7 (ix)
   0D0B DD 36 FF 01   [19] 3118 	ld	-1 (ix), #0x01
   0D0F                    3119 00103$:
   0D0F 6B            [ 4] 3120 	ld	l, e
   0D10 62            [ 4] 3121 	ld	h, d
   0D11 1B            [ 6] 3122 	dec	de
   0D12 7C            [ 4] 3123 	ld	a, h
   0D13 B5            [ 4] 3124 	or	a, l
   0D14 28 2E         [12] 3125 	jr	Z,00105$
                           3126 ;src/ayx32.c:175: u8 b = ((u8 *)(adr))[0];
   0D16 69            [ 4] 3127 	ld	l, c
   0D17 60            [ 4] 3128 	ld	h, b
   0D18 7E            [ 7] 3129 	ld	a, (hl)
                           3130 ;src/ayx32.c:176: wr_reg(b);
   0D19 C5            [11] 3131 	push	bc
   0D1A D5            [11] 3132 	push	de
   0D1B F5            [11] 3133 	push	af
   0D1C 33            [ 6] 3134 	inc	sp
   0D1D CDrA9r0B      [17] 3135 	call	_wr_reg
   0D20 33            [ 6] 3136 	inc	sp
   0D21 D1            [10] 3137 	pop	de
   0D22 C1            [10] 3138 	pop	bc
                           3139 ;src/ayx32.c:177: adr++;
   0D23 03            [ 6] 3140 	inc	bc
                           3141 ;src/ayx32.c:178: if (adr==0)
   0D24 78            [ 4] 3142 	ld	a, b
   0D25 B1            [ 4] 3143 	or	a, c
   0D26 20 E7         [12] 3144 	jr	NZ,00103$
                           3145 ;src/ayx32.c:180: wr_page(pagsst[pp++]);
   0D28 3ErCB         [ 7] 3146 	ld	a, #<(_pagsst)
   0D2A DD 86 FF      [19] 3147 	add	a, -1 (ix)
   0D2D 4F            [ 4] 3148 	ld	c, a
   0D2E 3Es0B         [ 7] 3149 	ld	a, #>(_pagsst)
   0D30 CE 00         [ 7] 3150 	adc	a, #0x00
   0D32 47            [ 4] 3151 	ld	b, a
   0D33 DD 34 FF      [23] 3152 	inc	-1 (ix)
   0D36 0A            [ 7] 3153 	ld	a, (bc)
   0D37 D5            [11] 3154 	push	de
   0D38 F5            [11] 3155 	push	af
   0D39 33            [ 6] 3156 	inc	sp
   0D3A CDr93r0B      [17] 3157 	call	_wr_page
   0D3D 33            [ 6] 3158 	inc	sp
   0D3E D1            [10] 3159 	pop	de
                           3160 ;src/ayx32.c:181: adr = 49152;
   0D3F 01 00 C0      [10] 3161 	ld	bc, #0xc000
   0D42 18 CB         [12] 3162 	jr	00103$
   0D44                    3163 00105$:
                           3164 ;src/ayx32.c:196: wr_page(16);
   0D44 3E 10         [ 7] 3165 	ld	a, #0x10
   0D46 F5            [11] 3166 	push	af
   0D47 33            [ 6] 3167 	inc	sp
   0D48 CDr93r0B      [17] 3168 	call	_wr_page
   0D4B 33            [ 6] 3169 	inc	sp
                           3170 ;src/ayx32.c:200: }
   0D4C 33            [ 6] 3171 	inc	sp
   0D4D DD E1         [14] 3172 	pop	ix
   0D4F C9            [10] 3173 	ret
                           3174 ;src/ayx32.c:201: u8 rd_reg() __naked
                           3175 ;	---------------------------------
                           3176 ; Function rd_reg
                           3177 ; ---------------------------------
   0D50                    3178 _rd_reg::
                           3179 ;src/ayx32.c:207: __endasm;
   0D50 01 FD FF      [10] 3180 	ld	bc, #0xFFFD
   0D53 ED 68         [12] 3181 	in	l, (c)
   0D55 C9            [10] 3182 	ret
                           3183 ;src/ayx32.c:208: }
                           3184 ;src/ayx32.c:210: u8 rd_reg8(u8 reg)
                           3185 ;	---------------------------------
                           3186 ; Function rd_reg8
                           3187 ; ---------------------------------
   0D56                    3188 _rd_reg8::
                           3189 ;src/ayx32.c:212: wr_addr(reg);
   0D56 21 02 00      [10] 3190 	ld	hl, #2+0
   0D59 39            [11] 3191 	add	hl, sp
   0D5A 7E            [ 7] 3192 	ld	a, (hl)
   0D5B F5            [11] 3193 	push	af
   0D5C 33            [ 6] 3194 	inc	sp
   0D5D CDr9Er0B      [17] 3195 	call	_wr_addr
   0D60 33            [ 6] 3196 	inc	sp
                           3197 ;src/ayx32.c:213: return rd_reg();
                           3198 ;src/ayx32.c:214: }
   0D61 C3r50r0D      [10] 3199 	jp  _rd_reg
                           3200 ;src/ayx32.c:216: u16 rd_reg16(u8 reg)
                           3201 ;	---------------------------------
                           3202 ; Function rd_reg16
                           3203 ; ---------------------------------
   0D64                    3204 _rd_reg16::
   0D64 DD E5         [15] 3205 	push	ix
   0D66 DD 21 00 00   [14] 3206 	ld	ix,#0
   0D6A DD 39         [15] 3207 	add	ix,sp
                           3208 ;src/ayx32.c:219: wr_addr(reg);
   0D6C DD 7E 04      [19] 3209 	ld	a, 4 (ix)
   0D6F F5            [11] 3210 	push	af
   0D70 33            [ 6] 3211 	inc	sp
   0D71 CDr9Er0B      [17] 3212 	call	_wr_addr
   0D74 33            [ 6] 3213 	inc	sp
                           3214 ;src/ayx32.c:220: rc = rd_reg();
   0D75 CDr50r0D      [17] 3215 	call	_rd_reg
   0D78 4D            [ 4] 3216 	ld	c, l
   0D79 06 00         [ 7] 3217 	ld	b, #0x00
                           3218 ;src/ayx32.c:221: rc |= rd_reg() << 8;
   0D7B C5            [11] 3219 	push	bc
   0D7C CDr50r0D      [17] 3220 	call	_rd_reg
   0D7F C1            [10] 3221 	pop	bc
   0D80 55            [ 4] 3222 	ld	d, l
   0D81 1E 00         [ 7] 3223 	ld	e, #0x00
   0D83 79            [ 4] 3224 	ld	a, c
   0D84 B3            [ 4] 3225 	or	a, e
   0D85 6F            [ 4] 3226 	ld	l, a
   0D86 78            [ 4] 3227 	ld	a, b
   0D87 B2            [ 4] 3228 	or	a, d
   0D88 67            [ 4] 3229 	ld	h, a
                           3230 ;src/ayx32.c:222: return rc;
                           3231 ;src/ayx32.c:223: }
   0D89 DD E1         [14] 3232 	pop	ix
   0D8B C9            [10] 3233 	ret
                           3234 ;src/ayx32.c:225: u32 rd_reg32(u8 reg)
                           3235 ;	---------------------------------
                           3236 ; Function rd_reg32
                           3237 ; ---------------------------------
   0D8C                    3238 _rd_reg32::
   0D8C DD E5         [15] 3239 	push	ix
   0D8E DD 21 00 00   [14] 3240 	ld	ix,#0
   0D92 DD 39         [15] 3241 	add	ix,sp
   0D94 21 F8 FF      [10] 3242 	ld	hl, #-8
   0D97 39            [11] 3243 	add	hl, sp
   0D98 F9            [ 6] 3244 	ld	sp, hl
                           3245 ;src/ayx32.c:228: wr_addr(reg);
   0D99 DD 7E 04      [19] 3246 	ld	a, 4 (ix)
   0D9C F5            [11] 3247 	push	af
   0D9D 33            [ 6] 3248 	inc	sp
   0D9E CDr9Er0B      [17] 3249 	call	_wr_addr
   0DA1 33            [ 6] 3250 	inc	sp
                           3251 ;src/ayx32.c:229: rc  = (u32)rd_reg();
   0DA2 CDr50r0D      [17] 3252 	call	_rd_reg
   0DA5 DD 75 F8      [19] 3253 	ld	-8 (ix), l
   0DA8 DD 36 F9 00   [19] 3254 	ld	-7 (ix), #0x00
   0DAC DD 36 FA 00   [19] 3255 	ld	-6 (ix), #0x00
   0DB0 DD 36 FB 00   [19] 3256 	ld	-5 (ix), #0x00
                           3257 ;src/ayx32.c:230: rc |= (u32)rd_reg() << 8;
   0DB4 CDr50r0D      [17] 3258 	call	_rd_reg
   0DB7 26 00         [ 7] 3259 	ld	h, #0x00
   0DB9 0E 00         [ 7] 3260 	ld	c, #0x00
   0DBB 45            [ 4] 3261 	ld	b, l
   0DBC 5C            [ 4] 3262 	ld	e, h
   0DBD 51            [ 4] 3263 	ld	d, c
   0DBE 0E 00         [ 7] 3264 	ld	c, #0x00
   0DC0 DD 7E F8      [19] 3265 	ld	a, -8 (ix)
   0DC3 B1            [ 4] 3266 	or	a, c
   0DC4 DD 77 FC      [19] 3267 	ld	-4 (ix), a
   0DC7 DD 7E F9      [19] 3268 	ld	a, -7 (ix)
   0DCA B0            [ 4] 3269 	or	a, b
   0DCB DD 77 FD      [19] 3270 	ld	-3 (ix), a
   0DCE DD 7E FA      [19] 3271 	ld	a, -6 (ix)
   0DD1 B3            [ 4] 3272 	or	a, e
   0DD2 DD 77 FE      [19] 3273 	ld	-2 (ix), a
   0DD5 DD 7E FB      [19] 3274 	ld	a, -5 (ix)
   0DD8 B2            [ 4] 3275 	or	a, d
   0DD9 DD 77 FF      [19] 3276 	ld	-1 (ix), a
                           3277 ;src/ayx32.c:231: rc |= (u32)rd_reg() << 16;
   0DDC CDr50r0D      [17] 3278 	call	_rd_reg
   0DDF 26 00         [ 7] 3279 	ld	h, #0x00
   0DE1 01 00 00      [10] 3280 	ld	bc, #0x0000
   0DE4 DD 7E FC      [19] 3281 	ld	a, -4 (ix)
   0DE7 B1            [ 4] 3282 	or	a, c
   0DE8 4F            [ 4] 3283 	ld	c, a
   0DE9 DD 7E FD      [19] 3284 	ld	a, -3 (ix)
   0DEC B0            [ 4] 3285 	or	a, b
   0DED 47            [ 4] 3286 	ld	b, a
   0DEE DD 7E FE      [19] 3287 	ld	a, -2 (ix)
   0DF1 B5            [ 4] 3288 	or	a, l
   0DF2 5F            [ 4] 3289 	ld	e, a
   0DF3 DD 7E FF      [19] 3290 	ld	a, -1 (ix)
   0DF6 B4            [ 4] 3291 	or	a, h
   0DF7 57            [ 4] 3292 	ld	d, a
   0DF8 DD 71 FC      [19] 3293 	ld	-4 (ix), c
   0DFB DD 70 FD      [19] 3294 	ld	-3 (ix), b
   0DFE DD 73 FE      [19] 3295 	ld	-2 (ix), e
   0E01 DD 72 FF      [19] 3296 	ld	-1 (ix), d
                           3297 ;src/ayx32.c:232: rc |= (u32)rd_reg() << 24;
   0E04 CDr50r0D      [17] 3298 	call	_rd_reg
   0E07 55            [ 4] 3299 	ld	d, l
   0E08 01 00 00      [10] 3300 	ld	bc, #0x0000
   0E0B 1E 00         [ 7] 3301 	ld	e, #0x00
   0E0D DD 7E FC      [19] 3302 	ld	a, -4 (ix)
   0E10 B1            [ 4] 3303 	or	a, c
   0E11 6F            [ 4] 3304 	ld	l, a
   0E12 DD 7E FD      [19] 3305 	ld	a, -3 (ix)
   0E15 B0            [ 4] 3306 	or	a, b
   0E16 67            [ 4] 3307 	ld	h, a
   0E17 DD 7E FE      [19] 3308 	ld	a, -2 (ix)
   0E1A B3            [ 4] 3309 	or	a, e
   0E1B 5F            [ 4] 3310 	ld	e, a
   0E1C DD 7E FF      [19] 3311 	ld	a, -1 (ix)
   0E1F B2            [ 4] 3312 	or	a, d
   0E20 57            [ 4] 3313 	ld	d, a
                           3314 ;src/ayx32.c:233: return rc;
                           3315 ;src/ayx32.c:234: }
   0E21 DD F9         [10] 3316 	ld	sp, ix
   0E23 DD E1         [14] 3317 	pop	ix
   0E25 C9            [10] 3318 	ret
                           3319 ;src/ayx32.c:236: void rd_reg_arr(u8 reg, u8 *ptr, u16 size)
                           3320 ;	---------------------------------
                           3321 ; Function rd_reg_arr
                           3322 ; ---------------------------------
   0E26                    3323 _rd_reg_arr::
   0E26 DD E5         [15] 3324 	push	ix
   0E28 DD 21 00 00   [14] 3325 	ld	ix,#0
   0E2C DD 39         [15] 3326 	add	ix,sp
                           3327 ;src/ayx32.c:238: wr_addr(reg);
   0E2E DD 7E 04      [19] 3328 	ld	a, 4 (ix)
   0E31 F5            [11] 3329 	push	af
   0E32 33            [ 6] 3330 	inc	sp
   0E33 CDr9Er0B      [17] 3331 	call	_wr_addr
   0E36 33            [ 6] 3332 	inc	sp
                           3333 ;src/ayx32.c:240: while (size--)
   0E37 DD 5E 05      [19] 3334 	ld	e, 5 (ix)
   0E3A DD 56 06      [19] 3335 	ld	d, 6 (ix)
   0E3D DD 4E 07      [19] 3336 	ld	c, 7 (ix)
   0E40 DD 46 08      [19] 3337 	ld	b, 8 (ix)
   0E43                    3338 00101$:
   0E43 69            [ 4] 3339 	ld	l, c
   0E44 60            [ 4] 3340 	ld	h, b
   0E45 0B            [ 6] 3341 	dec	bc
   0E46 7C            [ 4] 3342 	ld	a, h
   0E47 B5            [ 4] 3343 	or	a, l
   0E48 28 0C         [12] 3344 	jr	Z,00104$
                           3345 ;src/ayx32.c:241: *ptr++ = rd_reg();
   0E4A C5            [11] 3346 	push	bc
   0E4B D5            [11] 3347 	push	de
   0E4C CDr50r0D      [17] 3348 	call	_rd_reg
   0E4F 7D            [ 4] 3349 	ld	a, l
   0E50 D1            [10] 3350 	pop	de
   0E51 C1            [10] 3351 	pop	bc
   0E52 12            [ 7] 3352 	ld	(de), a
   0E53 13            [ 6] 3353 	inc	de
   0E54 18 ED         [12] 3354 	jr	00101$
   0E56                    3355 00104$:
                           3356 ;src/ayx32.c:242: }
   0E56 DD E1         [14] 3357 	pop	ix
   0E58 C9            [10] 3358 	ret
                           3359 ;src/ayx32.c:244: void rd_reg_str(u8 reg, u8 *str, u8 n)
                           3360 ;	---------------------------------
                           3361 ; Function rd_reg_str
                           3362 ; ---------------------------------
   0E59                    3363 _rd_reg_str::
                           3364 ;src/ayx32.c:248: wr_addr(reg);
   0E59 21 02 00      [10] 3365 	ld	hl, #2+0
   0E5C 39            [11] 3366 	add	hl, sp
   0E5D 7E            [ 7] 3367 	ld	a, (hl)
   0E5E F5            [11] 3368 	push	af
   0E5F 33            [ 6] 3369 	inc	sp
   0E60 CDr9Er0B      [17] 3370 	call	_wr_addr
   0E63 33            [ 6] 3371 	inc	sp
                           3372 ;src/ayx32.c:250: while (--n)
   0E64 21 03 00      [10] 3373 	ld	hl, #3
   0E67 39            [11] 3374 	add	hl, sp
   0E68 4E            [ 7] 3375 	ld	c, (hl)
   0E69 23            [ 6] 3376 	inc	hl
   0E6A 46            [ 7] 3377 	ld	b, (hl)
   0E6B 21 05 00      [10] 3378 	ld	hl, #5+0
   0E6E 39            [11] 3379 	add	hl, sp
   0E6F 5E            [ 7] 3380 	ld	e, (hl)
   0E70                    3381 00103$:
   0E70 1D            [ 4] 3382 	dec	e
   0E71 28 10         [12] 3383 	jr	Z,00105$
                           3384 ;src/ayx32.c:252: d = rd_reg();
   0E73 C5            [11] 3385 	push	bc
   0E74 D5            [11] 3386 	push	de
   0E75 CDr50r0D      [17] 3387 	call	_rd_reg
   0E78 7D            [ 4] 3388 	ld	a, l
   0E79 D1            [10] 3389 	pop	de
   0E7A C1            [10] 3390 	pop	bc
                           3391 ;src/ayx32.c:253: if (!d) break;
                           3392 ;src/ayx32.c:254: *str++ = d;
   0E7B 57            [ 4] 3393 	ld	d,a
   0E7C B7            [ 4] 3394 	or	a,a
   0E7D 28 04         [12] 3395 	jr	Z,00105$
   0E7F 02            [ 7] 3396 	ld	(bc), a
   0E80 03            [ 6] 3397 	inc	bc
   0E81 18 ED         [12] 3398 	jr	00103$
   0E83                    3399 00105$:
                           3400 ;src/ayx32.c:257: *str = 0;
   0E83 AF            [ 4] 3401 	xor	a, a
   0E84 02            [ 7] 3402 	ld	(bc), a
                           3403 ;src/ayx32.c:258: }
   0E85 C9            [10] 3404 	ret
                           3405 ;src/ayx32.c:260: void wait_busy()
                           3406 ;	---------------------------------
                           3407 ; Function wait_busy
                           3408 ; ---------------------------------
   0E86                    3409 _wait_busy::
                           3410 ;src/ayx32.c:262: while (rd_reg8(R_STATUS) & S_BUSY);
   0E86                    3411 00101$:
   0E86 3E E1         [ 7] 3412 	ld	a, #0xe1
   0E88 F5            [11] 3413 	push	af
   0E89 33            [ 6] 3414 	inc	sp
   0E8A CDr56r0D      [17] 3415 	call	_rd_reg8
   0E8D 33            [ 6] 3416 	inc	sp
   0E8E 7D            [ 4] 3417 	ld	a, l
   0E8F 0F            [ 4] 3418 	rrca
   0E90 38 F4         [12] 3419 	jr	C,00101$
                           3420 ;src/ayx32.c:263: }
   0E92 C9            [10] 3421 	ret
                           3422 ;src/ayx32.c:265: void unlock_chip()
                           3423 ;	---------------------------------
                           3424 ; Function unlock_chip
                           3425 ; ---------------------------------
   0E93                    3426 _unlock_chip::
                           3427 ;src/ayx32.c:267: wr_reg32(R_PARAM, MAGIC_LCK);
   0E93 21 DE C0      [10] 3428 	ld	hl, #0xc0de
   0E96 E5            [11] 3429 	push	hl
   0E97 21 CE FA      [10] 3430 	ld	hl, #0xface
   0E9A E5            [11] 3431 	push	hl
   0E9B 3E E3         [ 7] 3432 	ld	a, #0xe3
   0E9D F5            [11] 3433 	push	af
   0E9E 33            [ 6] 3434 	inc	sp
   0E9F CDrD1r0B      [17] 3435 	call	_wr_reg32
   0EA2 F1            [10] 3436 	pop	af
   0EA3 F1            [10] 3437 	pop	af
   0EA4 33            [ 6] 3438 	inc	sp
                           3439 ;src/ayx32.c:268: wr_reg8(R_CMD, C_LOCK);
   0EA5 11 E1 E4      [10] 3440 	ld	de, #0xe4e1
   0EA8 D5            [11] 3441 	push	de
   0EA9 CDrB4r0B      [17] 3442 	call	_wr_reg8
   0EAC F1            [10] 3443 	pop	af
                           3444 ;src/ayx32.c:269: wait_busy();
                           3445 ;src/ayx32.c:270: }
   0EAD C3r86r0E      [10] 3446 	jp  _wait_busy
                           3447 ;src/ayx32.c:272: bool detect_chip()
                           3448 ;	---------------------------------
                           3449 ; Function detect_chip
                           3450 ; ---------------------------------
   0EB0                    3451 _detect_chip::
                           3452 ;src/ayx32.c:274: return rd_reg16(R_DEV_SIG) == M_DEVSIG;
   0EB0 3E E0         [ 7] 3453 	ld	a, #0xe0
   0EB2 F5            [11] 3454 	push	af
   0EB3 33            [ 6] 3455 	inc	sp
   0EB4 CDr64r0D      [17] 3456 	call	_rd_reg16
   0EB7 33            [ 6] 3457 	inc	sp
   0EB8 7D            [ 4] 3458 	ld	a, l
   0EB9 D6 55         [ 7] 3459 	sub	a, #0x55
   0EBB 20 08         [12] 3460 	jr	NZ,00103$
   0EBD 7C            [ 4] 3461 	ld	a, h
   0EBE D6 AA         [ 7] 3462 	sub	a, #0xaa
   0EC0 20 03         [12] 3463 	jr	NZ, 00103$
   0EC2 3E 01         [ 7] 3464 	ld	a, #0x01
   0EC4 20                 3465 	.db	#0x20
   0EC5                    3466 00103$:
   0EC5 AF            [ 4] 3467 	xor	a, a
   0EC6                    3468 00104$:
   0EC6 6F            [ 4] 3469 	ld	l, a
                           3470 ;src/ayx32.c:275: }
   0EC7 C9            [10] 3471 	ret
                           3472 ;src/ayx32.c:277: void wait_online()
                           3473 ;	---------------------------------
                           3474 ; Function wait_online
                           3475 ; ---------------------------------
   0EC8                    3476 _wait_online::
                           3477 ;src/ayx32.c:279: while(1)
   0EC8                    3478 00106$:
                           3479 ;src/ayx32.c:282: if (detect_chip()) break;
   0EC8 CDrB0r0E      [17] 3480 	call	_detect_chip
   0ECB 7D            [ 4] 3481 	ld	a, l
   0ECC B7            [ 4] 3482 	or	a, a
   0ECD C0            [11] 3483 	ret	NZ
                           3484 ;src/ayx32.c:285: wr_reg8(0, 0x55);
   0ECE 3E 55         [ 7] 3485 	ld	a, #0x55
   0ED0 F5            [11] 3486 	push	af
   0ED1 33            [ 6] 3487 	inc	sp
   0ED2 AF            [ 4] 3488 	xor	a, a
   0ED3 F5            [11] 3489 	push	af
   0ED4 33            [ 6] 3490 	inc	sp
   0ED5 CDrB4r0B      [17] 3491 	call	_wr_reg8
   0ED8 F1            [10] 3492 	pop	af
                           3493 ;src/ayx32.c:286: if (rd_reg8(0) == 0x55) break;
   0ED9 AF            [ 4] 3494 	xor	a, a
   0EDA F5            [11] 3495 	push	af
   0EDB 33            [ 6] 3496 	inc	sp
   0EDC CDr56r0D      [17] 3497 	call	_rd_reg8
   0EDF 33            [ 6] 3498 	inc	sp
   0EE0 7D            [ 4] 3499 	ld	a, l
   0EE1 D6 55         [ 7] 3500 	sub	a, #0x55
   0EE3 20 E3         [12] 3501 	jr	NZ,00106$
                           3502 ;src/ayx32.c:288: }
   0EE5 C9            [10] 3503 	ret
                           3504 ;src/ayx32.c:290: void reset_chip()
                           3505 ;	---------------------------------
                           3506 ; Function reset_chip
                           3507 ; ---------------------------------
   0EE6                    3508 _reset_chip::
                           3509 ;src/ayx32.c:292: wr_reg32(R_PARAM, MAGIC_RES);
   0EE6 21 AD DE      [10] 3510 	ld	hl, #0xdead
   0EE9 E5            [11] 3511 	push	hl
   0EEA 21 EF BE      [10] 3512 	ld	hl, #0xbeef
   0EED E5            [11] 3513 	push	hl
   0EEE 3E E3         [ 7] 3514 	ld	a, #0xe3
   0EF0 F5            [11] 3515 	push	af
   0EF1 33            [ 6] 3516 	inc	sp
   0EF2 CDrD1r0B      [17] 3517 	call	_wr_reg32
   0EF5 F1            [10] 3518 	pop	af
   0EF6 F1            [10] 3519 	pop	af
   0EF7 33            [ 6] 3520 	inc	sp
                           3521 ;src/ayx32.c:293: wr_reg8(R_CMD, C_RESET);
   0EF8 11 E1 EB      [10] 3522 	ld	de, #0xebe1
   0EFB D5            [11] 3523 	push	de
   0EFC CDrB4r0B      [17] 3524 	call	_wr_reg8
   0EFF F1            [10] 3525 	pop	af
                           3526 ;src/ayx32.c:294: wait_online();
                           3527 ;src/ayx32.c:295: }
   0F00 C3rC8r0E      [10] 3528 	jp  _wait_online
                           3529 ;src/kbd.c:3: u8 getkey() __naked
                           3530 ;	---------------------------------
                           3531 ; Function getkey
                           3532 ; ---------------------------------
   0F03                    3533 _getkey::
                           3534 ;src/kbd.c:20: __endasm;
   0F03 01 FE FE      [10] 3535 	ld	bc, #0xFEFE
   0F06 2E 00         [ 7] 3536 	ld	l, #0
   0F08                    3537 	  k1:
   0F08 ED 78         [12] 3538 	in	a, (c)
   0F0A 26 05         [ 7] 3539 	ld	h, #5
   0F0C                    3540 	  k2:
   0F0C 1F            [ 4] 3541 	rra
   0F0D D0            [11] 3542 	ret	nc
   0F0E 2C            [ 4] 3543 	inc	l
   0F0F 25            [ 4] 3544 	dec	h
   0F10 20 FA         [12] 3545 	jr	nz, k2
   0F12 CB 00         [ 8] 3546 	rlc	b
   0F14 38 F2         [12] 3547 	jr	c, k1
   0F16 C9            [10] 3548 	ret
                           3549 ;src/kbd.c:21: }
                           3550 ;src/func.c:2: void set_mix(u8 mix)
                           3551 ;	---------------------------------
                           3552 ; Function set_mix
                           3553 ; ---------------------------------
   0F17                    3554 _set_mix::
   0F17 DD E5         [15] 3555 	push	ix
   0F19 DD 21 00 00   [14] 3556 	ld	ix,#0
   0F1D DD 39         [15] 3557 	add	ix,sp
   0F1F 21 F5 FF      [10] 3558 	ld	hl, #-11
   0F22 39            [11] 3559 	add	hl, sp
   0F23 F9            [ 6] 3560 	ld	sp, hl
                           3561 ;src/func.c:6: for (i = 0; i < 4; i++)
   0F24 01r0Br01      [10] 3562 	ld	bc, #_mix_sel_val+0
   0F27 DD 5E 04      [19] 3563 	ld	e, 4 (ix)
   0F2A 16 00         [ 7] 3564 	ld	d, #0x00
   0F2C 6B            [ 4] 3565 	ld	l, e
   0F2D 62            [ 4] 3566 	ld	h, d
   0F2E 29            [11] 3567 	add	hl, hl
   0F2F 19            [11] 3568 	add	hl, de
   0F30 29            [11] 3569 	add	hl, hl
   0F31 09            [11] 3570 	add	hl, bc
   0F32 EB            [ 4] 3571 	ex	de, hl
   0F33 33            [ 6] 3572 	inc	sp
   0F34 33            [ 6] 3573 	inc	sp
   0F35 D5            [11] 3574 	push	de
   0F36 DD 73 F7      [19] 3575 	ld	-9 (ix), e
   0F39 DD 72 F8      [19] 3576 	ld	-8 (ix), d
   0F3C DD 73 F9      [19] 3577 	ld	-7 (ix), e
   0F3F DD 72 FA      [19] 3578 	ld	-6 (ix), d
   0F42 DD 73 FB      [19] 3579 	ld	-5 (ix), e
   0F45 DD 72 FC      [19] 3580 	ld	-4 (ix), d
   0F48 DD 73 FD      [19] 3581 	ld	-3 (ix), e
   0F4B DD 72 FE      [19] 3582 	ld	-2 (ix), d
   0F4E DD 36 FF 00   [19] 3583 	ld	-1 (ix), #0x00
   0F52                    3584 00102$:
                           3585 ;src/func.c:8: wr_reg8(R_PSG_SEL, i);
   0F52 D5            [11] 3586 	push	de
   0F53 DD 56 FF      [19] 3587 	ld	d, -1 (ix)
   0F56 1E D0         [ 7] 3588 	ld	e,#0xd0
   0F58 D5            [11] 3589 	push	de
   0F59 CDrB4r0B      [17] 3590 	call	_wr_reg8
   0F5C F1            [10] 3591 	pop	af
   0F5D D1            [10] 3592 	pop	de
                           3593 ;src/func.c:9: wr_reg8(R_PSG_VOL_AL, mix_sel_val[mix][0]);
   0F5E 1A            [ 7] 3594 	ld	a, (de)
   0F5F D5            [11] 3595 	push	de
   0F60 57            [ 4] 3596 	ld	d,a
   0F61 1E 10         [ 7] 3597 	ld	e,#0x10
   0F63 D5            [11] 3598 	push	de
   0F64 CDrB4r0B      [17] 3599 	call	_wr_reg8
   0F67 F1            [10] 3600 	pop	af
   0F68 D1            [10] 3601 	pop	de
                           3602 ;src/func.c:10: wr_reg8(R_PSG_VOL_AR, mix_sel_val[mix][1]);
   0F69 E1            [10] 3603 	pop	hl
   0F6A E5            [11] 3604 	push	hl
   0F6B 23            [ 6] 3605 	inc	hl
   0F6C 7E            [ 7] 3606 	ld	a, (hl)
   0F6D D5            [11] 3607 	push	de
   0F6E 57            [ 4] 3608 	ld	d,a
   0F6F 1E 11         [ 7] 3609 	ld	e,#0x11
   0F71 D5            [11] 3610 	push	de
   0F72 CDrB4r0B      [17] 3611 	call	_wr_reg8
   0F75 F1            [10] 3612 	pop	af
   0F76 D1            [10] 3613 	pop	de
                           3614 ;src/func.c:11: wr_reg8(R_PSG_VOL_BL, mix_sel_val[mix][2]);
   0F77 DD 6E F7      [19] 3615 	ld	l, -9 (ix)
   0F7A DD 66 F8      [19] 3616 	ld	h, -8 (ix)
   0F7D 23            [ 6] 3617 	inc	hl
   0F7E 23            [ 6] 3618 	inc	hl
   0F7F 7E            [ 7] 3619 	ld	a, (hl)
   0F80 D5            [11] 3620 	push	de
   0F81 57            [ 4] 3621 	ld	d,a
   0F82 1E 12         [ 7] 3622 	ld	e,#0x12
   0F84 D5            [11] 3623 	push	de
   0F85 CDrB4r0B      [17] 3624 	call	_wr_reg8
   0F88 F1            [10] 3625 	pop	af
   0F89 D1            [10] 3626 	pop	de
                           3627 ;src/func.c:12: wr_reg8(R_PSG_VOL_BR, mix_sel_val[mix][3]);
   0F8A DD 6E F9      [19] 3628 	ld	l, -7 (ix)
   0F8D DD 66 FA      [19] 3629 	ld	h, -6 (ix)
   0F90 23            [ 6] 3630 	inc	hl
   0F91 23            [ 6] 3631 	inc	hl
   0F92 23            [ 6] 3632 	inc	hl
   0F93 7E            [ 7] 3633 	ld	a, (hl)
   0F94 D5            [11] 3634 	push	de
   0F95 57            [ 4] 3635 	ld	d,a
   0F96 1E 13         [ 7] 3636 	ld	e,#0x13
   0F98 D5            [11] 3637 	push	de
   0F99 CDrB4r0B      [17] 3638 	call	_wr_reg8
   0F9C F1            [10] 3639 	pop	af
   0F9D D1            [10] 3640 	pop	de
                           3641 ;src/func.c:13: wr_reg8(R_PSG_VOL_CL, mix_sel_val[mix][4]);
   0F9E DD 6E FB      [19] 3642 	ld	l, -5 (ix)
   0FA1 DD 66 FC      [19] 3643 	ld	h, -4 (ix)
   0FA4 01 04 00      [10] 3644 	ld	bc, #0x0004
   0FA7 09            [11] 3645 	add	hl, bc
   0FA8 7E            [ 7] 3646 	ld	a, (hl)
   0FA9 D5            [11] 3647 	push	de
   0FAA 57            [ 4] 3648 	ld	d,a
   0FAB 1E 14         [ 7] 3649 	ld	e,#0x14
   0FAD D5            [11] 3650 	push	de
   0FAE CDrB4r0B      [17] 3651 	call	_wr_reg8
   0FB1 F1            [10] 3652 	pop	af
   0FB2 D1            [10] 3653 	pop	de
                           3654 ;src/func.c:14: wr_reg8(R_PSG_VOL_CR, mix_sel_val[mix][5]);
   0FB3 DD 6E FD      [19] 3655 	ld	l, -3 (ix)
   0FB6 DD 66 FE      [19] 3656 	ld	h, -2 (ix)
   0FB9 01 05 00      [10] 3657 	ld	bc, #0x0005
   0FBC 09            [11] 3658 	add	hl, bc
   0FBD 7E            [ 7] 3659 	ld	a, (hl)
   0FBE D5            [11] 3660 	push	de
   0FBF 57            [ 4] 3661 	ld	d,a
   0FC0 1E 15         [ 7] 3662 	ld	e,#0x15
   0FC2 D5            [11] 3663 	push	de
   0FC3 CDrB4r0B      [17] 3664 	call	_wr_reg8
   0FC6 F1            [10] 3665 	pop	af
   0FC7 D1            [10] 3666 	pop	de
                           3667 ;src/func.c:6: for (i = 0; i < 4; i++)
   0FC8 DD 34 FF      [23] 3668 	inc	-1 (ix)
   0FCB DD 7E FF      [19] 3669 	ld	a, -1 (ix)
   0FCE D6 04         [ 7] 3670 	sub	a, #0x04
   0FD0 DAr52r0F      [10] 3671 	jp	C, 00102$
                           3672 ;src/func.c:16: }
   0FD3 DD F9         [10] 3673 	ld	sp, ix
   0FD5 DD E1         [14] 3674 	pop	ix
   0FD7 C9            [10] 3675 	ret
                           3676 ;src/func.c:18: void play_wav(u8 *w, u16 s)
                           3677 ;	---------------------------------
                           3678 ; Function play_wav
                           3679 ; ---------------------------------
   0FD8                    3680 _play_wav::
   0FD8 DD E5         [15] 3681 	push	ix
   0FDA DD 21 00 00   [14] 3682 	ld	ix,#0
   0FDE DD 39         [15] 3683 	add	ix,sp
                           3684 ;src/func.c:22: while (s)
   0FE0                    3685 00103$:
   0FE0 DD 7E 07      [19] 3686 	ld	a, 7 (ix)
   0FE3 DD B6 06      [19] 3687 	or	a, 6 (ix)
   0FE6 28 55         [12] 3688 	jr	Z,00106$
                           3689 ;src/func.c:24: f = rd_reg16(R_DAC_FREE);
   0FE8 3E 44         [ 7] 3690 	ld	a, #0x44
   0FEA F5            [11] 3691 	push	af
   0FEB 33            [ 6] 3692 	inc	sp
   0FEC CDr64r0D      [17] 3693 	call	_rd_reg16
   0FEF 33            [ 6] 3694 	inc	sp
   0FF0 4D            [ 4] 3695 	ld	c, l
   0FF1 44            [ 4] 3696 	ld	b, h
                           3697 ;src/func.c:29: f = min(f, s);
   0FF2 79            [ 4] 3698 	ld	a, c
   0FF3 DD 96 06      [19] 3699 	sub	a, 6 (ix)
   0FF6 78            [ 4] 3700 	ld	a, b
   0FF7 DD 9E 07      [19] 3701 	sbc	a, 7 (ix)
   0FFA 38 06         [12] 3702 	jr	C,00109$
   0FFC DD 4E 06      [19] 3703 	ld	c, 6 (ix)
   0FFF DD 46 07      [19] 3704 	ld	b, 7 (ix)
   1002                    3705 00109$:
                           3706 ;src/func.c:30: if (f > 0)
   1002 78            [ 4] 3707 	ld	a, b
   1003 B1            [ 4] 3708 	or	a, c
   1004 28 DA         [12] 3709 	jr	Z,00103$
                           3710 ;src/func.c:32: wr_addr(R_DAC_DATA);
   1006 C5            [11] 3711 	push	bc
   1007 3E 46         [ 7] 3712 	ld	a, #0x46
   1009 F5            [11] 3713 	push	af
   100A 33            [ 6] 3714 	inc	sp
   100B CDr9Er0B      [17] 3715 	call	_wr_addr
   100E 33            [ 6] 3716 	inc	sp
   100F C1            [10] 3717 	pop	bc
                           3718 ;src/func.c:33: wr_arr(w, f);
   1010 C5            [11] 3719 	push	bc
   1011 C5            [11] 3720 	push	bc
   1012 DD 6E 04      [19] 3721 	ld	l, 4 (ix)
   1015 DD 66 05      [19] 3722 	ld	h, 5 (ix)
   1018 E5            [11] 3723 	push	hl
   1019 CDrA0r0C      [17] 3724 	call	_wr_arr
   101C F1            [10] 3725 	pop	af
   101D F1            [10] 3726 	pop	af
   101E C1            [10] 3727 	pop	bc
                           3728 ;src/func.c:34: w += f;
   101F DD 7E 04      [19] 3729 	ld	a, 4 (ix)
   1022 81            [ 4] 3730 	add	a, c
   1023 DD 77 04      [19] 3731 	ld	4 (ix), a
   1026 DD 7E 05      [19] 3732 	ld	a, 5 (ix)
   1029 88            [ 4] 3733 	adc	a, b
   102A DD 77 05      [19] 3734 	ld	5 (ix), a
                           3735 ;src/func.c:35: s -= f;
   102D DD 7E 06      [19] 3736 	ld	a, 6 (ix)
   1030 91            [ 4] 3737 	sub	a, c
   1031 DD 77 06      [19] 3738 	ld	6 (ix), a
   1034 DD 7E 07      [19] 3739 	ld	a, 7 (ix)
   1037 98            [ 4] 3740 	sbc	a, b
   1038 DD 77 07      [19] 3741 	ld	7 (ix), a
   103B 18 A3         [12] 3742 	jr	00103$
   103D                    3743 00106$:
                           3744 ;src/func.c:38: }
   103D DD E1         [14] 3745 	pop	ix
   103F C9            [10] 3746 	ret
                           3747 ;src/func.c:40: void wait(u16 d)
                           3748 ;	---------------------------------
                           3749 ; Function wait
                           3750 ; ---------------------------------
   1040                    3751 _wait::
   1040 F5            [11] 3752 	push	af
                           3753 ;src/func.c:42: volatile u16 a = d;
   1041 21 04 00      [10] 3754 	ld	hl, #4+0
   1044 39            [11] 3755 	add	hl, sp
   1045 7E            [ 7] 3756 	ld	a, (hl)
   1046 FD 21 00 00   [14] 3757 	ld	iy, #0
   104A FD 39         [15] 3758 	add	iy, sp
   104C FD 77 00      [19] 3759 	ld	0 (iy), a
   104F 21 05 00      [10] 3760 	ld	hl, #4+1
   1052 39            [11] 3761 	add	hl, sp
   1053 7E            [ 7] 3762 	ld	a, (hl)
   1054 FD 21 00 00   [14] 3763 	ld	iy, #0
   1058 FD 39         [15] 3764 	add	iy, sp
   105A FD 77 01      [19] 3765 	ld	1 (iy), a
                           3766 ;src/func.c:43: while (a--);
   105D                    3767 00101$:
   105D C1            [10] 3768 	pop	bc
   105E C5            [11] 3769 	push	bc
   105F 21 00 00      [10] 3770 	ld	hl, #0
   1062 39            [11] 3771 	add	hl, sp
   1063 79            [ 4] 3772 	ld	a, c
   1064 C6 FF         [ 7] 3773 	add	a, #0xff
   1066 77            [ 7] 3774 	ld	(hl), a
   1067 78            [ 4] 3775 	ld	a, b
   1068 CE FF         [ 7] 3776 	adc	a, #0xff
   106A 23            [ 6] 3777 	inc	hl
   106B 77            [ 7] 3778 	ld	(hl), a
   106C 78            [ 4] 3779 	ld	a, b
   106D B1            [ 4] 3780 	or	a, c
   106E 20 ED         [12] 3781 	jr	NZ,00101$
                           3782 ;src/func.c:44: }
   1070 F1            [10] 3783 	pop	af
   1071 C9            [10] 3784 	ret
                           3785 ;src/msg.c:2: void msg_main()
                           3786 ;	---------------------------------
                           3787 ; Function msg_main
                           3788 ; ---------------------------------
   1072                    3789 _msg_main::
                           3790 ;src/msg.c:4: cls();
   1072 CDrB9r00      [17] 3791 	call	_cls
                           3792 ;src/msg.c:5: xy(41,1); color(C_HEAD); printf("AYX-32 Configuration Utility");
   1075 21r00r00      [10] 3793 	ld	hl,#_cx + 0
   1078 36 29         [10] 3794 	ld	(hl), #0x29
   107A 21r01r00      [10] 3795 	ld	hl,#_cy + 0
   107D 36 01         [10] 3796 	ld	(hl), #0x01
   107F 21r03r00      [10] 3797 	ld	hl,#_cc + 0
   1082 36 45         [10] 3798 	ld	(hl), #0x45
   1084 21r3Er11      [10] 3799 	ld	hl, #___str_19
   1087 E5            [11] 3800 	push	hl
   1088 CDr00r00      [17] 3801 	call	_printf
   108B F1            [10] 3802 	pop	af
                           3803 ;src/msg.c:6: defx = 30; xy(defx, 5);
   108C 21r02r00      [10] 3804 	ld	hl,#_defx + 0
   108F 36 1E         [10] 3805 	ld	(hl), #0x1e
   1091 21r00r00      [10] 3806 	ld	hl,#_cx + 0
   1094 36 1E         [10] 3807 	ld	(hl), #0x1e
   1096 21r01r00      [10] 3808 	ld	hl,#_cy + 0
   1099 36 05         [10] 3809 	ld	(hl), #0x05
                           3810 ;src/msg.c:7: color(C_BUTN); printf("1. "); color(C_NORM); printf("Device info\n\n");
   109B 21r03r00      [10] 3811 	ld	hl,#_cc + 0
   109E 36 44         [10] 3812 	ld	(hl), #0x44
   10A0 21r5Br11      [10] 3813 	ld	hl, #___str_20
   10A3 E5            [11] 3814 	push	hl
   10A4 CDr00r00      [17] 3815 	call	_printf
   10A7 F1            [10] 3816 	pop	af
   10A8 21r03r00      [10] 3817 	ld	hl,#_cc + 0
   10AB 36 47         [10] 3818 	ld	(hl), #0x47
   10AD 21r5Fr11      [10] 3819 	ld	hl, #___str_22
   10B0 E5            [11] 3820 	push	hl
   10B1 CDr00r00      [17] 3821 	call	_puts
   10B4 F1            [10] 3822 	pop	af
                           3823 ;src/msg.c:8: color(C_BUTN); printf("2. "); color(C_NORM); printf("Settings\n\n");
   10B5 21r03r00      [10] 3824 	ld	hl,#_cc + 0
   10B8 36 44         [10] 3825 	ld	(hl), #0x44
   10BA 21r6Cr11      [10] 3826 	ld	hl, #___str_23
   10BD E5            [11] 3827 	push	hl
   10BE CDr00r00      [17] 3828 	call	_printf
   10C1 F1            [10] 3829 	pop	af
   10C2 21r03r00      [10] 3830 	ld	hl,#_cc + 0
   10C5 36 47         [10] 3831 	ld	(hl), #0x47
                           3832 ;src/msg.c:10: printf("\n\n");
   10C7 21rB4r11      [10] 3833 	ld	hl, #___str_36
   10CA E5            [11] 3834 	push	hl
   10CB CDr00r00      [17] 3835 	call	_puts
   10CE F1            [10] 3836 	pop	af
                           3837 ;src/msg.c:11: color(C_BUTN); printf("U. "); color(C_NORM); printf("Upload Firmware\n\n");
   10CF 21r03r00      [10] 3838 	ld	hl,#_cc + 0
   10D2 36 44         [10] 3839 	ld	(hl), #0x44
   10D4 21r70r11      [10] 3840 	ld	hl, #___str_28
   10D7 E5            [11] 3841 	push	hl
   10D8 CDr00r00      [17] 3842 	call	_printf
   10DB F1            [10] 3843 	pop	af
   10DC 21r03r00      [10] 3844 	ld	hl,#_cc + 0
   10DF 36 47         [10] 3845 	ld	(hl), #0x47
   10E1 21r74r11      [10] 3846 	ld	hl, #___str_30
   10E4 E5            [11] 3847 	push	hl
   10E5 CDr00r00      [17] 3848 	call	_puts
   10E8 F1            [10] 3849 	pop	af
                           3850 ;src/msg.c:12: color(C_BUTN); printf("R. "); color(C_NORM); printf("Restart device\n\n");
   10E9 21r03r00      [10] 3851 	ld	hl,#_cc + 0
   10EC 36 44         [10] 3852 	ld	(hl), #0x44
   10EE 21r85r11      [10] 3853 	ld	hl, #___str_31
   10F1 E5            [11] 3854 	push	hl
   10F2 CDr00r00      [17] 3855 	call	_printf
   10F5 F1            [10] 3856 	pop	af
   10F6 21r03r00      [10] 3857 	ld	hl,#_cc + 0
   10F9 36 47         [10] 3858 	ld	(hl), #0x47
   10FB 21r89r11      [10] 3859 	ld	hl, #___str_33
   10FE E5            [11] 3860 	push	hl
   10FF CDr00r00      [17] 3861 	call	_puts
   1102 F1            [10] 3862 	pop	af
                           3863 ;src/msg.c:13: color(C_BUTN); printf("B. "); color(C_NORM); printf("Restart device in Boot");
   1103 21r03r00      [10] 3864 	ld	hl,#_cc + 0
   1106 36 44         [10] 3865 	ld	(hl), #0x44
   1108 21r99r11      [10] 3866 	ld	hl, #___str_34
   110B E5            [11] 3867 	push	hl
   110C CDr00r00      [17] 3868 	call	_printf
   110F F1            [10] 3869 	pop	af
   1110 21r03r00      [10] 3870 	ld	hl,#_cc + 0
   1113 36 47         [10] 3871 	ld	(hl), #0x47
   1115 21r9Dr11      [10] 3872 	ld	hl, #___str_35
   1118 E5            [11] 3873 	push	hl
   1119 CDr00r00      [17] 3874 	call	_printf
   111C F1            [10] 3875 	pop	af
                           3876 ;src/msg.c:14: }
   111D C9            [10] 3877 	ret
   111E                    3878 _fw_bin:
   111E 01                 3879 	.db #0x01	; 1
   111F 00                 3880 	.db #0x00	; 0
   1120 01                 3881 	.db #0x01	; 1
   1121 00                 3882 	.db #0x00	; 0
   1122 06                 3883 	.db #0x06	; 6
   1123 00                 3884 	.db #0x00	; 0
   1124 98                 3885 	.db #0x98	; 152
   1125 01                 3886 	.db #0x01	; 1
   1126 74                 3887 	.db #0x74	; 116	't'
   1127 C5                 3888 	.db #0xc5	; 197
   1128 00                 3889 	.db #0x00	; 0
   1129 00                 3890 	.db #0x00	; 0
   112A DD                 3891 	.db #0xdd	; 221
   112B A6                 3892 	.db #0xa6	; 166
   112C DA                 3893 	.db #0xda	; 218
   112D 9A                 3894 	.db #0x9a	; 154
   112E 55                 3895 	.db #0x55	; 85	'U'
   112F 4D                 3896 	.db #0x4d	; 77	'M'
   1130 26                 3897 	.db #0x26	; 38
   1131 99                 3898 	.db #0x99	; 153
   1132 B0                 3899 	.db #0xb0	; 176
   1133 B9                 3900 	.db #0xb9	; 185
   1134 F1                 3901 	.db #0xf1	; 241
   1135 05                 3902 	.db #0x05	; 5
   1136 53                 3903 	.db #0x53	; 83	'S'
   1137 9F                 3904 	.db #0x9f	; 159
   1138 BB                 3905 	.db #0xbb	; 187
   1139 D7                 3906 	.db #0xd7	; 215
   113A DE                 3907 	.db #0xde	; 222
   113B 4B                 3908 	.db #0x4b	; 75	'K'
   113C EB                 3909 	.db #0xeb	; 235
   113D 37                 3910 	.db #0x37	; 55	'7'
   113E                    3911 ___str_19:
   113E 41 59 58 2D 33 32  3912 	.ascii "AYX-32 Configuration Utility"
        20 43 6F 6E 66 69
        67 75 72 61 74 69
        6F 6E 20 55 74 69
        6C 69 74 79
   115A 00                 3913 	.db 0x00
   115B                    3914 ___str_20:
   115B 31 2E 20           3915 	.ascii "1. "
   115E 00                 3916 	.db 0x00
   115F                    3917 ___str_22:
   115F 44 65 76 69 63 65  3918 	.ascii "Device info"
        20 69 6E 66 6F
   116A 0A                 3919 	.db 0x0a
   116B 00                 3920 	.db 0x00
   116C                    3921 ___str_23:
   116C 32 2E 20           3922 	.ascii "2. "
   116F 00                 3923 	.db 0x00
   1170                    3924 ___str_28:
   1170 55 2E 20           3925 	.ascii "U. "
   1173 00                 3926 	.db 0x00
   1174                    3927 ___str_30:
   1174 55 70 6C 6F 61 64  3928 	.ascii "Upload Firmware"
        20 46 69 72 6D 77
        61 72 65
   1183 0A                 3929 	.db 0x0a
   1184 00                 3930 	.db 0x00
   1185                    3931 ___str_31:
   1185 52 2E 20           3932 	.ascii "R. "
   1188 00                 3933 	.db 0x00
   1189                    3934 ___str_33:
   1189 52 65 73 74 61 72  3935 	.ascii "Restart device"
        74 20 64 65 76 69
        63 65
   1197 0A                 3936 	.db 0x0a
   1198 00                 3937 	.db 0x00
   1199                    3938 ___str_34:
   1199 42 2E 20           3939 	.ascii "B. "
   119C 00                 3940 	.db 0x00
   119D                    3941 ___str_35:
   119D 52 65 73 74 61 72  3942 	.ascii "Restart device in Boot"
        74 20 64 65 76 69
        63 65 20 69 6E 20
        42 6F 6F 74
   11B3 00                 3943 	.db 0x00
   11B4                    3944 ___str_36:
   11B4 53 65 74 74 69 6E  3945 	.ascii "Settings"
        67 73
   11BC 0A                 3946 	.db 0x0a
   11BD 0A                 3947 	.db 0x0a
   11BE 0A                 3948 	.db 0x0a
   11BF 00                 3949 	.db 0x00
                           3950 ;src/msg.c:17: void msg_mode()
                           3951 ;	---------------------------------
                           3952 ; Function msg_mode
                           3953 ; ---------------------------------
   11C0                    3954 _msg_mode::
                           3955 ;src/msg.c:19: color(C_NORM); printf("Mode: ");
   11C0 21r03r00      [10] 3956 	ld	hl,#_cc + 0
   11C3 36 47         [10] 3957 	ld	(hl), #0x47
   11C5 21rF1r11      [10] 3958 	ld	hl, #___str_37
   11C8 E5            [11] 3959 	push	hl
   11C9 CDr00r00      [17] 3960 	call	_printf
   11CC F1            [10] 3961 	pop	af
                           3962 ;src/msg.c:20: color(C_DATA); printf("%s\n\n", (rd_reg8(R_STATUS) & S_BOOT) ? "Boot" : "Work");
   11CD 21r03r00      [10] 3963 	ld	hl,#_cc + 0
   11D0 36 46         [10] 3964 	ld	(hl), #0x46
   11D2 3E E1         [ 7] 3965 	ld	a, #0xe1
   11D4 F5            [11] 3966 	push	af
   11D5 33            [ 6] 3967 	inc	sp
   11D6 CDr56r0D      [17] 3968 	call	_rd_reg8
   11D9 33            [ 6] 3969 	inc	sp
   11DA 7D            [ 4] 3970 	ld	a, l
   11DB 07            [ 4] 3971 	rlca
   11DC 30 05         [12] 3972 	jr	NC,00103$
   11DE 01rFDr11      [10] 3973 	ld	bc, #___str_39+0
   11E1 18 03         [12] 3974 	jr	00104$
   11E3                    3975 00103$:
   11E3 01r02r12      [10] 3976 	ld	bc, #___str_40+0
   11E6                    3977 00104$:
   11E6 C5            [11] 3978 	push	bc
   11E7 21rF8r11      [10] 3979 	ld	hl, #___str_38
   11EA E5            [11] 3980 	push	hl
   11EB CDr00r00      [17] 3981 	call	_printf
   11EE F1            [10] 3982 	pop	af
   11EF F1            [10] 3983 	pop	af
                           3984 ;src/msg.c:21: }
   11F0 C9            [10] 3985 	ret
   11F1                    3986 ___str_37:
   11F1 4D 6F 64 65 3A 20  3987 	.ascii "Mode: "
   11F7 00                 3988 	.db 0x00
   11F8                    3989 ___str_38:
   11F8 25 73              3990 	.ascii "%s"
   11FA 0A                 3991 	.db 0x0a
   11FB 0A                 3992 	.db 0x0a
   11FC 00                 3993 	.db 0x00
   11FD                    3994 ___str_39:
   11FD 42 6F 6F 74        3995 	.ascii "Boot"
   1201 00                 3996 	.db 0x00
   1202                    3997 ___str_40:
   1202 57 6F 72 6B        3998 	.ascii "Work"
   1206 00                 3999 	.db 0x00
                           4000 ;src/msg.c:23: void msg_res()
                           4001 ;	---------------------------------
                           4002 ; Function msg_res
                           4003 ; ---------------------------------
   1207                    4004 _msg_res::
                           4005 ;src/msg.c:25: reset_chip();
   1207 CDrE6r0E      [17] 4006 	call	_reset_chip
                           4007 ;src/msg.c:26: unlock_chip();
   120A CDr93r0E      [17] 4008 	call	_unlock_chip
                           4009 ;src/msg.c:27: fade();
   120D CDr61r0A      [17] 4010 	call	_fade
                           4011 ;src/msg.c:28: frame (56, 8, 22, 5, C_FRAM);
   1210 11 05 07      [10] 4012 	ld	de, #0x0705
   1213 D5            [11] 4013 	push	de
   1214 11 08 16      [10] 4014 	ld	de, #0x1608
   1217 D5            [11] 4015 	push	de
   1218 3E 38         [ 7] 4016 	ld	a, #0x38
   121A F5            [11] 4017 	push	af
   121B 33            [ 6] 4018 	inc	sp
   121C CDrB5r0A      [17] 4019 	call	_frame
   121F F1            [10] 4020 	pop	af
   1220 F1            [10] 4021 	pop	af
   1221 33            [ 6] 4022 	inc	sp
                           4023 ;src/msg.c:29: xy(80, 10); color(C_OK); printf("Device restarted");
   1222 21r00r00      [10] 4024 	ld	hl,#_cx + 0
   1225 36 50         [10] 4025 	ld	(hl), #0x50
   1227 21r01r00      [10] 4026 	ld	hl,#_cy + 0
   122A 36 0A         [10] 4027 	ld	(hl), #0x0a
   122C 21r03r00      [10] 4028 	ld	hl,#_cc + 0
   122F 36 44         [10] 4029 	ld	(hl), #0x44
   1231 21r46r12      [10] 4030 	ld	hl, #___str_41
   1234 E5            [11] 4031 	push	hl
   1235 CDr00r00      [17] 4032 	call	_printf
   1238 F1            [10] 4033 	pop	af
                           4034 ;src/msg.c:30: xy(96, 12); msg_mode();
   1239 21r00r00      [10] 4035 	ld	hl,#_cx + 0
   123C 36 60         [10] 4036 	ld	(hl), #0x60
   123E 21r01r00      [10] 4037 	ld	hl,#_cy + 0
   1241 36 0C         [10] 4038 	ld	(hl), #0x0c
                           4039 ;src/msg.c:31: }
   1243 C3rC0r11      [10] 4040 	jp  _msg_mode
   1246                    4041 ___str_41:
   1246 44 65 76 69 63 65  4042 	.ascii "Device restarted"
        20 72 65 73 74 61
        72 74 65 64
   1256 00                 4043 	.db 0x00
                           4044 ;src/msg.c:33: void msg_boot()
                           4045 ;	---------------------------------
                           4046 ; Function msg_boot
                           4047 ; ---------------------------------
   1257                    4048 _msg_boot::
                           4049 ;src/msg.c:35: fade();
   1257 CDr61r0A      [17] 4050 	call	_fade
                           4051 ;src/msg.c:36: frame (32, 6, 30, 3, C_FRAM);
   125A 11 03 07      [10] 4052 	ld	de, #0x0703
   125D D5            [11] 4053 	push	de
   125E 11 06 1E      [10] 4054 	ld	de, #0x1e06
   1261 D5            [11] 4055 	push	de
   1262 3E 20         [ 7] 4056 	ld	a, #0x20
   1264 F5            [11] 4057 	push	af
   1265 33            [ 6] 4058 	inc	sp
   1266 CDrB5r0A      [17] 4059 	call	_frame
   1269 F1            [10] 4060 	pop	af
   126A F1            [10] 4061 	pop	af
   126B 33            [ 6] 4062 	inc	sp
                           4063 ;src/msg.c:37: xy(72, 8); color(C_QUST); printf("Short 'BOOT' jumper");
   126C 21r00r00      [10] 4064 	ld	hl,#_cx + 0
   126F 36 48         [10] 4065 	ld	(hl), #0x48
   1271 21r01r00      [10] 4066 	ld	hl,#_cy + 0
   1274 36 08         [10] 4067 	ld	(hl), #0x08
   1276 21r03r00      [10] 4068 	ld	hl,#_cc + 0
   1279 36 46         [10] 4069 	ld	(hl), #0x46
   127B 21rC2r12      [10] 4070 	ld	hl, #___str_42
   127E E5            [11] 4071 	push	hl
   127F CDr00r00      [17] 4072 	call	_printf
   1282 F1            [10] 4073 	pop	af
                           4074 ;src/msg.c:39: while (1)
   1283                    4075 00104$:
                           4076 ;src/msg.c:41: reset_chip();
   1283 CDrE6r0E      [17] 4077 	call	_reset_chip
                           4078 ;src/msg.c:42: unlock_chip();
   1286 CDr93r0E      [17] 4079 	call	_unlock_chip
                           4080 ;src/msg.c:43: if (rd_reg8(R_STATUS) & S_BOOT) break;
   1289 3E E1         [ 7] 4081 	ld	a, #0xe1
   128B F5            [11] 4082 	push	af
   128C 33            [ 6] 4083 	inc	sp
   128D CDr56r0D      [17] 4084 	call	_rd_reg8
   1290 33            [ 6] 4085 	inc	sp
   1291 7D            [ 4] 4086 	ld	a, l
   1292 07            [ 4] 4087 	rlca
   1293 30 EE         [12] 4088 	jr	NC,00104$
                           4089 ;src/msg.c:46: fade();
   1295 CDr61r0A      [17] 4090 	call	_fade
                           4091 ;src/msg.c:47: frame (48, 12, 24, 1, C_FRAM);
   1298 11 01 07      [10] 4092 	ld	de, #0x0701
   129B D5            [11] 4093 	push	de
   129C 11 0C 18      [10] 4094 	ld	de, #0x180c
   129F D5            [11] 4095 	push	de
   12A0 3E 30         [ 7] 4096 	ld	a, #0x30
   12A2 F5            [11] 4097 	push	af
   12A3 33            [ 6] 4098 	inc	sp
   12A4 CDrB5r0A      [17] 4099 	call	_frame
   12A7 F1            [10] 4100 	pop	af
   12A8 F1            [10] 4101 	pop	af
   12A9 33            [ 6] 4102 	inc	sp
                           4103 ;src/msg.c:48: xy(76, 13); color(C_INFO); printf("Device is in Boot");
   12AA 21r00r00      [10] 4104 	ld	hl,#_cx + 0
   12AD 36 4C         [10] 4105 	ld	(hl), #0x4c
   12AF 21r01r00      [10] 4106 	ld	hl,#_cy + 0
   12B2 36 0D         [10] 4107 	ld	(hl), #0x0d
   12B4 21r03r00      [10] 4108 	ld	hl,#_cc + 0
   12B7 36 44         [10] 4109 	ld	(hl), #0x44
   12B9 21rD6r12      [10] 4110 	ld	hl, #___str_43
   12BC E5            [11] 4111 	push	hl
   12BD CDr00r00      [17] 4112 	call	_printf
   12C0 F1            [10] 4113 	pop	af
                           4114 ;src/msg.c:49: }
   12C1 C9            [10] 4115 	ret
   12C2                    4116 ___str_42:
   12C2 53 68 6F 72 74 20  4117 	.ascii "Short 'BOOT' jumper"
        27 42 4F 4F 54 27
        20 6A 75 6D 70 65
        72
   12D5 00                 4118 	.db 0x00
   12D6                    4119 ___str_43:
   12D6 44 65 76 69 63 65  4120 	.ascii "Device is in Boot"
        20 69 73 20 69 6E
        20 42 6F 6F 74
   12E7 00                 4121 	.db 0x00
                           4122 ;src/msg.c:51: void msg_save()
                           4123 ;	---------------------------------
                           4124 ; Function msg_save
                           4125 ; ---------------------------------
   12E8                    4126 _msg_save::
                           4127 ;src/msg.c:53: fade();
   12E8 CDr61r0A      [17] 4128 	call	_fade
                           4129 ;src/msg.c:54: frame (32, 6, 30, 6, C_FRAM);
   12EB 11 06 07      [10] 4130 	ld	de, #0x0706
   12EE D5            [11] 4131 	push	de
   12EF 11 06 1E      [10] 4132 	ld	de, #0x1e06
   12F2 D5            [11] 4133 	push	de
   12F3 3E 20         [ 7] 4134 	ld	a, #0x20
   12F5 F5            [11] 4135 	push	af
   12F6 33            [ 6] 4136 	inc	sp
   12F7 CDrB5r0A      [17] 4137 	call	_frame
   12FA F1            [10] 4138 	pop	af
   12FB F1            [10] 4139 	pop	af
   12FC 33            [ 6] 4140 	inc	sp
                           4141 ;src/msg.c:55: xy(60, 8); color(C_QUST); printf("You are about to write");
   12FD 21r00r00      [10] 4142 	ld	hl,#_cx + 0
   1300 36 3C         [10] 4143 	ld	(hl), #0x3c
   1302 21r01r00      [10] 4144 	ld	hl,#_cy + 0
   1305 36 08         [10] 4145 	ld	(hl), #0x08
   1307 21r03r00      [10] 4146 	ld	hl,#_cc + 0
   130A 36 46         [10] 4147 	ld	(hl), #0x46
   130C 21r3Er13      [10] 4148 	ld	hl, #___str_44
   130F E5            [11] 4149 	push	hl
   1310 CDr00r00      [17] 4150 	call	_printf
   1313 F1            [10] 4151 	pop	af
                           4152 ;src/msg.c:56: xy(70, 9); printf("settings into Flash");
   1314 21r00r00      [10] 4153 	ld	hl,#_cx + 0
   1317 36 46         [10] 4154 	ld	(hl), #0x46
   1319 21r01r00      [10] 4155 	ld	hl,#_cy + 0
   131C 36 09         [10] 4156 	ld	(hl), #0x09
   131E 21r55r13      [10] 4157 	ld	hl, #___str_45
   1321 E5            [11] 4158 	push	hl
   1322 CDr00r00      [17] 4159 	call	_printf
   1325 F1            [10] 4160 	pop	af
                           4161 ;src/msg.c:57: xy(98, 11); color(C_NORM); printf("Sure? (Y/N)");
   1326 21r00r00      [10] 4162 	ld	hl,#_cx + 0
   1329 36 62         [10] 4163 	ld	(hl), #0x62
   132B 21r01r00      [10] 4164 	ld	hl,#_cy + 0
   132E 36 0B         [10] 4165 	ld	(hl), #0x0b
   1330 21r03r00      [10] 4166 	ld	hl,#_cc + 0
   1333 36 47         [10] 4167 	ld	(hl), #0x47
   1335 21r69r13      [10] 4168 	ld	hl, #___str_46
   1338 E5            [11] 4169 	push	hl
   1339 CDr00r00      [17] 4170 	call	_printf
   133C F1            [10] 4171 	pop	af
                           4172 ;src/msg.c:58: }
   133D C9            [10] 4173 	ret
   133E                    4174 ___str_44:
   133E 59 6F 75 20 61 72  4175 	.ascii "You are about to write"
        65 20 61 62 6F 75
        74 20 74 6F 20 77
        72 69 74 65
   1354 00                 4176 	.db 0x00
   1355                    4177 ___str_45:
   1355 73 65 74 74 69 6E  4178 	.ascii "settings into Flash"
        67 73 20 69 6E 74
        6F 20 46 6C 61 73
        68
   1368 00                 4179 	.db 0x00
   1369                    4180 ___str_46:
   1369 53 75 72 65 3F 20  4181 	.ascii "Sure? (Y/N)"
        28 59 2F 4E 29
   1374 00                 4182 	.db 0x00
                           4183 ;src/msg.c:60: void msg_save1()
                           4184 ;	---------------------------------
                           4185 ; Function msg_save1
                           4186 ; ---------------------------------
   1375                    4187 _msg_save1::
                           4188 ;src/msg.c:62: frame (48, 15, 24, 1, C_FRAM);
   1375 11 01 07      [10] 4189 	ld	de, #0x0701
   1378 D5            [11] 4190 	push	de
   1379 11 0F 18      [10] 4191 	ld	de, #0x180f
   137C D5            [11] 4192 	push	de
   137D 3E 30         [ 7] 4193 	ld	a, #0x30
   137F F5            [11] 4194 	push	af
   1380 33            [ 6] 4195 	inc	sp
   1381 CDrB5r0A      [17] 4196 	call	_frame
   1384 F1            [10] 4197 	pop	af
   1385 F1            [10] 4198 	pop	af
   1386 33            [ 6] 4199 	inc	sp
                           4200 ;src/msg.c:63: xy(74, 16); color(C_INFO); printf("Saving ... ");
   1387 21r00r00      [10] 4201 	ld	hl,#_cx + 0
   138A 36 4A         [10] 4202 	ld	(hl), #0x4a
   138C 21r01r00      [10] 4203 	ld	hl,#_cy + 0
   138F 36 10         [10] 4204 	ld	(hl), #0x10
   1391 21r03r00      [10] 4205 	ld	hl,#_cc + 0
   1394 36 44         [10] 4206 	ld	(hl), #0x44
   1396 21rEDr13      [10] 4207 	ld	hl, #___str_47
   1399 E5            [11] 4208 	push	hl
   139A CDr00r00      [17] 4209 	call	_printf
                           4210 ;src/msg.c:65: wr_reg32(R_PARAM, MAGIC_CFG);
   139D 21 C8 37      [10] 4211 	ld	hl, #0x37c8
   13A0 E3            [19] 4212 	ex	(sp),hl
   13A1 21 AA 55      [10] 4213 	ld	hl, #0x55aa
   13A4 E5            [11] 4214 	push	hl
   13A5 3E E3         [ 7] 4215 	ld	a, #0xe3
   13A7 F5            [11] 4216 	push	af
   13A8 33            [ 6] 4217 	inc	sp
   13A9 CDrD1r0B      [17] 4218 	call	_wr_reg32
   13AC F1            [10] 4219 	pop	af
   13AD F1            [10] 4220 	pop	af
   13AE 33            [ 6] 4221 	inc	sp
                           4222 ;src/msg.c:66: wr_reg8(R_CMD, C_SAVE_CFG);
   13AF 11 E1 EA      [10] 4223 	ld	de, #0xeae1
   13B2 D5            [11] 4224 	push	de
   13B3 CDrB4r0B      [17] 4225 	call	_wr_reg8
   13B6 F1            [10] 4226 	pop	af
                           4227 ;src/msg.c:67: wait_busy();
   13B7 CDr86r0E      [17] 4228 	call	_wait_busy
                           4229 ;src/msg.c:69: if (rd_reg8(R_ERROR) != E_DONE)
   13BA 3E E2         [ 7] 4230 	ld	a, #0xe2
   13BC F5            [11] 4231 	push	af
   13BD 33            [ 6] 4232 	inc	sp
   13BE CDr56r0D      [17] 4233 	call	_rd_reg8
   13C1 33            [ 6] 4234 	inc	sp
   13C2 2D            [ 4] 4235 	dec	l
   13C3 28 1A         [12] 4236 	jr	Z,00102$
                           4237 ;src/msg.c:71: color(C_ERR); printf("error 0x%02X", rd_reg8(R_ERROR));
   13C5 21r03r00      [10] 4238 	ld	hl,#_cc + 0
   13C8 36 42         [10] 4239 	ld	(hl), #0x42
   13CA 3E E2         [ 7] 4240 	ld	a, #0xe2
   13CC F5            [11] 4241 	push	af
   13CD 33            [ 6] 4242 	inc	sp
   13CE CDr56r0D      [17] 4243 	call	_rd_reg8
   13D1 33            [ 6] 4244 	inc	sp
   13D2 26 00         [ 7] 4245 	ld	h, #0x00
   13D4 01rF9r13      [10] 4246 	ld	bc, #___str_48+0
   13D7 E5            [11] 4247 	push	hl
   13D8 C5            [11] 4248 	push	bc
   13D9 CDr00r00      [17] 4249 	call	_printf
   13DC F1            [10] 4250 	pop	af
   13DD F1            [10] 4251 	pop	af
                           4252 ;src/msg.c:72: return;
   13DE C9            [10] 4253 	ret
   13DF                    4254 00102$:
                           4255 ;src/msg.c:76: color(C_OK); printf("ok\n");
   13DF 21r03r00      [10] 4256 	ld	hl,#_cc + 0
   13E2 36 44         [10] 4257 	ld	(hl), #0x44
   13E4 21r06r14      [10] 4258 	ld	hl, #___str_50
   13E7 E5            [11] 4259 	push	hl
   13E8 CDr00r00      [17] 4260 	call	_puts
   13EB F1            [10] 4261 	pop	af
                           4262 ;src/msg.c:78: }
   13EC C9            [10] 4263 	ret
   13ED                    4264 ___str_47:
   13ED 53 61 76 69 6E 67  4265 	.ascii "Saving ... "
        20 2E 2E 2E 20
   13F8 00                 4266 	.db 0x00
   13F9                    4267 ___str_48:
   13F9 65 72 72 6F 72 20  4268 	.ascii "error 0x%02X"
        30 78 25 30 32 58
   1405 00                 4269 	.db 0x00
   1406                    4270 ___str_50:
   1406 6F 6B              4271 	.ascii "ok"
   1408 00                 4272 	.db 0x00
                           4273 ;src/msg.c:80: void msg_fupd()
                           4274 ;	---------------------------------
                           4275 ; Function msg_fupd
                           4276 ; ---------------------------------
   1409                    4277 _msg_fupd::
                           4278 ;src/msg.c:82: fade();
   1409 CDr61r0A      [17] 4279 	call	_fade
                           4280 ;src/msg.c:83: frame (32, 4, 30, 6, C_FRAM);
   140C 11 06 07      [10] 4281 	ld	de, #0x0706
   140F D5            [11] 4282 	push	de
   1410 11 04 1E      [10] 4283 	ld	de, #0x1e04
   1413 D5            [11] 4284 	push	de
   1414 3E 20         [ 7] 4285 	ld	a, #0x20
   1416 F5            [11] 4286 	push	af
   1417 33            [ 6] 4287 	inc	sp
   1418 CDrB5r0A      [17] 4288 	call	_frame
   141B F1            [10] 4289 	pop	af
   141C F1            [10] 4290 	pop	af
   141D 33            [ 6] 4291 	inc	sp
                           4292 ;src/msg.c:84: xy(60, 6); color(C_QUST); printf("You are about to flash");
   141E 21r00r00      [10] 4293 	ld	hl,#_cx + 0
   1421 36 3C         [10] 4294 	ld	(hl), #0x3c
   1423 21r01r00      [10] 4295 	ld	hl,#_cy + 0
   1426 36 06         [10] 4296 	ld	(hl), #0x06
   1428 21r03r00      [10] 4297 	ld	hl,#_cc + 0
   142B 36 46         [10] 4298 	ld	(hl), #0x46
   142D 21r71r14      [10] 4299 	ld	hl, #___str_51
   1430 E5            [11] 4300 	push	hl
   1431 CDr00r00      [17] 4301 	call	_printf
   1434 F1            [10] 4302 	pop	af
                           4303 ;src/msg.c:85: xy(60, 7); color (C_CRIT); printf("FIRMWARE ");
   1435 21r00r00      [10] 4304 	ld	hl,#_cx + 0
   1438 36 3C         [10] 4305 	ld	(hl), #0x3c
   143A 21r01r00      [10] 4306 	ld	hl,#_cy + 0
   143D 36 07         [10] 4307 	ld	(hl), #0x07
   143F 21r03r00      [10] 4308 	ld	hl,#_cc + 0
   1442 36 42         [10] 4309 	ld	(hl), #0x42
   1444 21r88r14      [10] 4310 	ld	hl, #___str_52
   1447 E5            [11] 4311 	push	hl
   1448 CDr00r00      [17] 4312 	call	_printf
   144B F1            [10] 4313 	pop	af
                           4314 ;src/msg.c:86: color (C_QUST); printf("into the chip");
   144C 21r03r00      [10] 4315 	ld	hl,#_cc + 0
   144F 36 46         [10] 4316 	ld	(hl), #0x46
   1451 21r92r14      [10] 4317 	ld	hl, #___str_53
   1454 E5            [11] 4318 	push	hl
   1455 CDr00r00      [17] 4319 	call	_printf
   1458 F1            [10] 4320 	pop	af
                           4321 ;src/msg.c:87: xy(98, 9); color(C_NORM); printf("Sure? (Y/N)");
   1459 21r00r00      [10] 4322 	ld	hl,#_cx + 0
   145C 36 62         [10] 4323 	ld	(hl), #0x62
   145E 21r01r00      [10] 4324 	ld	hl,#_cy + 0
   1461 36 09         [10] 4325 	ld	(hl), #0x09
   1463 21r03r00      [10] 4326 	ld	hl,#_cc + 0
   1466 36 47         [10] 4327 	ld	(hl), #0x47
   1468 21rA0r14      [10] 4328 	ld	hl, #___str_54
   146B E5            [11] 4329 	push	hl
   146C CDr00r00      [17] 4330 	call	_printf
   146F F1            [10] 4331 	pop	af
                           4332 ;src/msg.c:88: }
   1470 C9            [10] 4333 	ret
   1471                    4334 ___str_51:
   1471 59 6F 75 20 61 72  4335 	.ascii "You are about to flash"
        65 20 61 62 6F 75
        74 20 74 6F 20 66
        6C 61 73 68
   1487 00                 4336 	.db 0x00
   1488                    4337 ___str_52:
   1488 46 49 52 4D 57 41  4338 	.ascii "FIRMWARE "
        52 45 20
   1491 00                 4339 	.db 0x00
   1492                    4340 ___str_53:
   1492 69 6E 74 6F 20 74  4341 	.ascii "into the chip"
        68 65 20 63 68 69
        70
   149F 00                 4342 	.db 0x00
   14A0                    4343 ___str_54:
   14A0 53 75 72 65 3F 20  4344 	.ascii "Sure? (Y/N)"
        28 59 2F 4E 29
   14AB 00                 4345 	.db 0x00
                           4346 ;src/msg.c:90: void msg_fupd1()
                           4347 ;	---------------------------------
                           4348 ; Function msg_fupd1
                           4349 ; ---------------------------------
   14AC                    4350 _msg_fupd1::
   14AC DD E5         [15] 4351 	push	ix
   14AE DD 21 00 00   [14] 4352 	ld	ix,#0
   14B2 DD 39         [15] 4353 	add	ix,sp
   14B4 F5            [11] 4354 	push	af
   14B5 F5            [11] 4355 	push	af
                           4356 ;src/msg.c:92: FW_HDR *fw = (FW_HDR*)fw_bin;
                           4357 ;src/msg.c:93: u32 fw_size = fw->size + fw->offs;
   14B6 11r26r11      [10] 4358 	ld	de, #_fw_bin + 8
   14B9 21 00 00      [10] 4359 	ld	hl, #0x0000
   14BC 39            [11] 4360 	add	hl, sp
   14BD EB            [ 4] 4361 	ex	de, hl
   14BE 01 04 00      [10] 4362 	ld	bc, #0x0004
   14C1 ED B0         [21] 4363 	ldir
   14C3 2Ar24r11      [16] 4364 	ld	hl, (#_fw_bin + 6)
   14C6 11 00 00      [10] 4365 	ld	de, #0x0000
   14C9 DD 7E FC      [19] 4366 	ld	a, -4 (ix)
   14CC 85            [ 4] 4367 	add	a, l
   14CD 4F            [ 4] 4368 	ld	c, a
   14CE DD 7E FD      [19] 4369 	ld	a, -3 (ix)
   14D1 8C            [ 4] 4370 	adc	a, h
   14D2 47            [ 4] 4371 	ld	b, a
   14D3 DD 7E FE      [19] 4372 	ld	a, -2 (ix)
   14D6 8B            [ 4] 4373 	adc	a, e
   14D7 5F            [ 4] 4374 	ld	e, a
   14D8 DD 7E FF      [19] 4375 	ld	a, -1 (ix)
   14DB 8A            [ 4] 4376 	adc	a, d
   14DC 57            [ 4] 4377 	ld	d, a
   14DD DD 71 FC      [19] 4378 	ld	-4 (ix), c
   14E0 DD 70 FD      [19] 4379 	ld	-3 (ix), b
   14E3 DD 73 FE      [19] 4380 	ld	-2 (ix), e
   14E6 DD 72 FF      [19] 4381 	ld	-1 (ix), d
                           4382 ;src/msg.c:95: fade();
   14E9 CDr61r0A      [17] 4383 	call	_fade
                           4384 ;src/msg.c:96: frame (32, 13, 30, 4, C_FRAM);
   14EC 11 04 07      [10] 4385 	ld	de, #0x0704
   14EF D5            [11] 4386 	push	de
   14F0 11 0D 1E      [10] 4387 	ld	de, #0x1e0d
   14F3 D5            [11] 4388 	push	de
   14F4 3E 20         [ 7] 4389 	ld	a, #0x20
   14F6 F5            [11] 4390 	push	af
   14F7 33            [ 6] 4391 	inc	sp
   14F8 CDrB5r0A      [17] 4392 	call	_frame
   14FB F1            [10] 4393 	pop	af
   14FC F1            [10] 4394 	pop	af
   14FD 33            [ 6] 4395 	inc	sp
                           4396 ;src/msg.c:99: color(C_NORM);
   14FE 21r03r00      [10] 4397 	ld	hl,#_cc + 0
   1501 36 47         [10] 4398 	ld	(hl), #0x47
                           4399 ;src/msg.c:100: printf("Detect: ");
   1503 21r74r16      [10] 4400 	ld	hl, #___str_55
   1506 E5            [11] 4401 	push	hl
   1507 CDr00r00      [17] 4402 	call	_printf
   150A F1            [10] 4403 	pop	af
                           4404 ;src/msg.c:102: if (detect_chip())
   150B CDrB0r0E      [17] 4405 	call	_detect_chip
   150E 7D            [ 4] 4406 	ld	a, l
   150F B7            [ 4] 4407 	or	a, a
   1510 28 0F         [12] 4408 	jr	Z,00102$
                           4409 ;src/msg.c:104: color(C_OK); printf("found\n");
   1512 21r03r00      [10] 4410 	ld	hl,#_cc + 0
   1515 36 44         [10] 4411 	ld	(hl), #0x44
   1517 21r7Dr16      [10] 4412 	ld	hl, #___str_57
   151A E5            [11] 4413 	push	hl
   151B CDr00r00      [17] 4414 	call	_puts
   151E F1            [10] 4415 	pop	af
   151F 18 10         [12] 4416 	jr	00103$
   1521                    4417 00102$:
                           4418 ;src/msg.c:108: color(C_ERR); printf("not found\n");
   1521 21r03r00      [10] 4419 	ld	hl,#_cc + 0
   1524 36 42         [10] 4420 	ld	(hl), #0x42
   1526 21r83r16      [10] 4421 	ld	hl, #___str_59
   1529 E5            [11] 4422 	push	hl
   152A CDr00r00      [17] 4423 	call	_puts
   152D F1            [10] 4424 	pop	af
                           4425 ;src/msg.c:109: return;
   152E C3r6Fr16      [10] 4426 	jp	00115$
   1531                    4427 00103$:
                           4428 ;src/msg.c:113: color(C_NORM); printf("Check mode: ");
   1531 21r03r00      [10] 4429 	ld	hl,#_cc + 0
   1534 36 47         [10] 4430 	ld	(hl), #0x47
   1536 21r8Dr16      [10] 4431 	ld	hl, #___str_60
   1539 E5            [11] 4432 	push	hl
   153A CDr00r00      [17] 4433 	call	_printf
                           4434 ;src/msg.c:115: if (!(rd_reg8(R_STATUS) & S_BOOT))
   153D 26 E1         [ 7] 4435 	ld	h,#0xe1
   153F E3            [19] 4436 	ex	(sp),hl
   1540 33            [ 6] 4437 	inc	sp
   1541 CDr56r0D      [17] 4438 	call	_rd_reg8
   1544 33            [ 6] 4439 	inc	sp
   1545 7D            [ 4] 4440 	ld	a, l
   1546 07            [ 4] 4441 	rlca
   1547 38 10         [12] 4442 	jr	C,00105$
                           4443 ;src/msg.c:117: color(C_ERR); printf("restart in Boot\n");
   1549 21r03r00      [10] 4444 	ld	hl,#_cc + 0
   154C 36 42         [10] 4445 	ld	(hl), #0x42
   154E 21r9Ar16      [10] 4446 	ld	hl, #___str_62
   1551 E5            [11] 4447 	push	hl
   1552 CDr00r00      [17] 4448 	call	_puts
   1555 F1            [10] 4449 	pop	af
                           4450 ;src/msg.c:118: return;
   1556 C3r6Fr16      [10] 4451 	jp	00115$
   1559                    4452 00105$:
                           4453 ;src/msg.c:122: color(C_OK); printf("boot\n");
   1559 21r03r00      [10] 4454 	ld	hl,#_cc + 0
   155C 36 44         [10] 4455 	ld	(hl), #0x44
   155E 21rAAr16      [10] 4456 	ld	hl, #___str_64
   1561 E5            [11] 4457 	push	hl
   1562 CDr00r00      [17] 4458 	call	_puts
   1565 F1            [10] 4459 	pop	af
                           4460 ;src/msg.c:126: color(C_NORM); printf("Send f/w (%ub): ", fw_size);
   1566 21r03r00      [10] 4461 	ld	hl,#_cc + 0
   1569 36 47         [10] 4462 	ld	(hl), #0x47
   156B DD 6E FE      [19] 4463 	ld	l, -2 (ix)
   156E DD 66 FF      [19] 4464 	ld	h, -1 (ix)
   1571 E5            [11] 4465 	push	hl
   1572 DD 6E FC      [19] 4466 	ld	l, -4 (ix)
   1575 DD 66 FD      [19] 4467 	ld	h, -3 (ix)
   1578 E5            [11] 4468 	push	hl
   1579 21rAFr16      [10] 4469 	ld	hl, #___str_65
   157C E5            [11] 4470 	push	hl
   157D CDr00r00      [17] 4471 	call	_printf
   1580 21 06 00      [10] 4472 	ld	hl, #6
   1583 39            [11] 4473 	add	hl, sp
   1584 F9            [ 6] 4474 	ld	sp, hl
                           4475 ;src/msg.c:127: wr_reg8(R_CMD, C_BREAK);
   1585 AF            [ 4] 4476 	xor	a, a
   1586 57            [ 4] 4477 	ld	d,a
   1587 1E E1         [ 7] 4478 	ld	e,#0xe1
   1589 D5            [11] 4479 	push	de
   158A CDrB4r0B      [17] 4480 	call	_wr_reg8
   158D F1            [10] 4481 	pop	af
                           4482 ;src/msg.c:128: wr_reg32(R_PARAM, fw_size);
   158E DD 6E FE      [19] 4483 	ld	l, -2 (ix)
   1591 DD 66 FF      [19] 4484 	ld	h, -1 (ix)
   1594 E5            [11] 4485 	push	hl
   1595 DD 6E FC      [19] 4486 	ld	l, -4 (ix)
   1598 DD 66 FD      [19] 4487 	ld	h, -3 (ix)
   159B E5            [11] 4488 	push	hl
   159C 3E E3         [ 7] 4489 	ld	a, #0xe3
   159E F5            [11] 4490 	push	af
   159F 33            [ 6] 4491 	inc	sp
   15A0 CDrD1r0B      [17] 4492 	call	_wr_reg32
   15A3 F1            [10] 4493 	pop	af
   15A4 F1            [10] 4494 	pop	af
   15A5 33            [ 6] 4495 	inc	sp
                           4496 ;src/msg.c:129: wr_reg8(R_CMD, C_UP_FW);
   15A6 11 E1 E8      [10] 4497 	ld	de, #0xe8e1
   15A9 D5            [11] 4498 	push	de
   15AA CDrB4r0B      [17] 4499 	call	_wr_reg8
                           4500 ;src/msg.c:131: if (!(rd_reg8(R_STATUS) & S_DRQ))
   15AD 26 E1         [ 7] 4501 	ld	h,#0xe1
   15AF E3            [19] 4502 	ex	(sp),hl
   15B0 33            [ 6] 4503 	inc	sp
   15B1 CDr56r0D      [17] 4504 	call	_rd_reg8
   15B4 33            [ 6] 4505 	inc	sp
   15B5 CB 4D         [ 8] 4506 	bit	1, l
   15B7 20 10         [12] 4507 	jr	NZ,00108$
                           4508 ;src/msg.c:133: color(C_ERR); printf("DRQ err\n");
   15B9 21r03r00      [10] 4509 	ld	hl,#_cc + 0
   15BC 36 42         [10] 4510 	ld	(hl), #0x42
   15BE 21rC0r16      [10] 4511 	ld	hl, #___str_67
   15C1 E5            [11] 4512 	push	hl
   15C2 CDr00r00      [17] 4513 	call	_puts
   15C5 F1            [10] 4514 	pop	af
                           4515 ;src/msg.c:134: return;
   15C6 C3r6Fr16      [10] 4516 	jp	00115$
   15C9                    4517 00108$:
                           4518 ;src/msg.c:138: wr_addr(R_DATA);
   15C9 3E E4         [ 7] 4519 	ld	a, #0xe4
   15CB F5            [11] 4520 	push	af
   15CC 33            [ 6] 4521 	inc	sp
   15CD CDr9Er0B      [17] 4522 	call	_wr_addr
   15D0 33            [ 6] 4523 	inc	sp
                           4524 ;src/msg.c:139: wr_arrpg((void *)startPageAddress, fw_size);   //fw_bin
   15D1 C1            [10] 4525 	pop	bc
   15D2 C5            [11] 4526 	push	bc
   15D3 C5            [11] 4527 	push	bc
   15D4 21 00 C0      [10] 4528 	ld	hl, #0xc000
   15D7 E5            [11] 4529 	push	hl
   15D8 CDrEBr0C      [17] 4530 	call	_wr_arrpg
   15DB F1            [10] 4531 	pop	af
   15DC F1            [10] 4532 	pop	af
                           4533 ;src/msg.c:140: wait_busy();
   15DD CDr86r0E      [17] 4534 	call	_wait_busy
                           4535 ;src/msg.c:142: if (rd_reg8(R_ERROR) != E_DONE)
   15E0 3E E2         [ 7] 4536 	ld	a, #0xe2
   15E2 F5            [11] 4537 	push	af
   15E3 33            [ 6] 4538 	inc	sp
   15E4 CDr56r0D      [17] 4539 	call	_rd_reg8
   15E7 33            [ 6] 4540 	inc	sp
   15E8 2D            [ 4] 4541 	dec	l
   15E9 28 1B         [12] 4542 	jr	Z,00110$
                           4543 ;src/msg.c:144: color(C_ERR); printf("error 0x%02X\n", rd_reg8(R_ERROR));
   15EB 21r03r00      [10] 4544 	ld	hl,#_cc + 0
   15EE 36 42         [10] 4545 	ld	(hl), #0x42
   15F0 3E E2         [ 7] 4546 	ld	a, #0xe2
   15F2 F5            [11] 4547 	push	af
   15F3 33            [ 6] 4548 	inc	sp
   15F4 CDr56r0D      [17] 4549 	call	_rd_reg8
   15F7 33            [ 6] 4550 	inc	sp
   15F8 26 00         [ 7] 4551 	ld	h, #0x00
   15FA 01rC8r16      [10] 4552 	ld	bc, #___str_68+0
   15FD E5            [11] 4553 	push	hl
   15FE C5            [11] 4554 	push	bc
   15FF CDr00r00      [17] 4555 	call	_printf
   1602 F1            [10] 4556 	pop	af
   1603 F1            [10] 4557 	pop	af
                           4558 ;src/msg.c:145: return;
   1604 18 69         [12] 4559 	jr	00115$
   1606                    4560 00110$:
                           4561 ;src/msg.c:149: color(C_OK); printf("ok\n");
   1606 21r03r00      [10] 4562 	ld	hl,#_cc + 0
   1609 36 44         [10] 4563 	ld	(hl), #0x44
   160B 21rD6r16      [10] 4564 	ld	hl, #___str_70
   160E E5            [11] 4565 	push	hl
   160F CDr00r00      [17] 4566 	call	_puts
   1612 F1            [10] 4567 	pop	af
                           4568 ;src/msg.c:153: color(C_NORM); printf("Flash f/w: ");
   1613 21r03r00      [10] 4569 	ld	hl,#_cc + 0
   1616 36 47         [10] 4570 	ld	(hl), #0x47
   1618 21rD9r16      [10] 4571 	ld	hl, #___str_71
   161B E5            [11] 4572 	push	hl
   161C CDr00r00      [17] 4573 	call	_printf
                           4574 ;src/msg.c:154: wr_reg32(R_PARAM, MAGIC_FFW);
   161F 21 41 78      [10] 4575 	ld	hl, #0x7841
   1622 E3            [19] 4576 	ex	(sp),hl
   1623 21 55 AA      [10] 4577 	ld	hl, #0xaa55
   1626 E5            [11] 4578 	push	hl
   1627 3E E3         [ 7] 4579 	ld	a, #0xe3
   1629 F5            [11] 4580 	push	af
   162A 33            [ 6] 4581 	inc	sp
   162B CDrD1r0B      [17] 4582 	call	_wr_reg32
   162E F1            [10] 4583 	pop	af
   162F F1            [10] 4584 	pop	af
   1630 33            [ 6] 4585 	inc	sp
                           4586 ;src/msg.c:155: wr_reg8(R_CMD, C_FLASH_FW);
   1631 11 E1 E9      [10] 4587 	ld	de, #0xe9e1
   1634 D5            [11] 4588 	push	de
   1635 CDrB4r0B      [17] 4589 	call	_wr_reg8
   1638 F1            [10] 4590 	pop	af
                           4591 ;src/msg.c:156: wait_busy();
   1639 CDr86r0E      [17] 4592 	call	_wait_busy
                           4593 ;src/msg.c:158: if (rd_reg8(R_ERROR) != E_DONE)
   163C 3E E2         [ 7] 4594 	ld	a, #0xe2
   163E F5            [11] 4595 	push	af
   163F 33            [ 6] 4596 	inc	sp
   1640 CDr56r0D      [17] 4597 	call	_rd_reg8
   1643 33            [ 6] 4598 	inc	sp
   1644 2D            [ 4] 4599 	dec	l
   1645 28 1B         [12] 4600 	jr	Z,00113$
                           4601 ;src/msg.c:160: color(C_ERR); printf("error 0x%02X", rd_reg8(R_ERROR));
   1647 21r03r00      [10] 4602 	ld	hl,#_cc + 0
   164A 36 42         [10] 4603 	ld	(hl), #0x42
   164C 3E E2         [ 7] 4604 	ld	a, #0xe2
   164E F5            [11] 4605 	push	af
   164F 33            [ 6] 4606 	inc	sp
   1650 CDr56r0D      [17] 4607 	call	_rd_reg8
   1653 33            [ 6] 4608 	inc	sp
   1654 26 00         [ 7] 4609 	ld	h, #0x00
   1656 01rE5r16      [10] 4610 	ld	bc, #___str_72+0
   1659 E5            [11] 4611 	push	hl
   165A C5            [11] 4612 	push	bc
   165B CDr00r00      [17] 4613 	call	_printf
   165E F1            [10] 4614 	pop	af
   165F F1            [10] 4615 	pop	af
                           4616 ;src/msg.c:161: return;
   1660 18 0D         [12] 4617 	jr	00115$
   1662                    4618 00113$:
                           4619 ;src/msg.c:165: color(C_OK); printf("ok\n");
   1662 21r03r00      [10] 4620 	ld	hl,#_cc + 0
   1665 36 44         [10] 4621 	ld	(hl), #0x44
   1667 21rD6r16      [10] 4622 	ld	hl, #___str_70
   166A E5            [11] 4623 	push	hl
   166B CDr00r00      [17] 4624 	call	_puts
   166E F1            [10] 4625 	pop	af
   166F                    4626 00115$:
                           4627 ;src/msg.c:167: }
   166F DD F9         [10] 4628 	ld	sp, ix
   1671 DD E1         [14] 4629 	pop	ix
   1673 C9            [10] 4630 	ret
   1674                    4631 ___str_55:
   1674 44 65 74 65 63 74  4632 	.ascii "Detect: "
        3A 20
   167C 00                 4633 	.db 0x00
   167D                    4634 ___str_57:
   167D 66 6F 75 6E 64     4635 	.ascii "found"
   1682 00                 4636 	.db 0x00
   1683                    4637 ___str_59:
   1683 6E 6F 74 20 66 6F  4638 	.ascii "not found"
        75 6E 64
   168C 00                 4639 	.db 0x00
   168D                    4640 ___str_60:
   168D 43 68 65 63 6B 20  4641 	.ascii "Check mode: "
        6D 6F 64 65 3A 20
   1699 00                 4642 	.db 0x00
   169A                    4643 ___str_62:
   169A 72 65 73 74 61 72  4644 	.ascii "restart in Boot"
        74 20 69 6E 20 42
        6F 6F 74
   16A9 00                 4645 	.db 0x00
   16AA                    4646 ___str_64:
   16AA 62 6F 6F 74        4647 	.ascii "boot"
   16AE 00                 4648 	.db 0x00
   16AF                    4649 ___str_65:
   16AF 53 65 6E 64 20 66  4650 	.ascii "Send f/w (%ub): "
        2F 77 20 28 25 75
        62 29 3A 20
   16BF 00                 4651 	.db 0x00
   16C0                    4652 ___str_67:
   16C0 44 52 51 20 65 72  4653 	.ascii "DRQ err"
        72
   16C7 00                 4654 	.db 0x00
   16C8                    4655 ___str_68:
   16C8 65 72 72 6F 72 20  4656 	.ascii "error 0x%02X"
        30 78 25 30 32 58
   16D4 0A                 4657 	.db 0x0a
   16D5 00                 4658 	.db 0x00
   16D6                    4659 ___str_70:
   16D6 6F 6B              4660 	.ascii "ok"
   16D8 00                 4661 	.db 0x00
   16D9                    4662 ___str_71:
   16D9 46 6C 61 73 68 20  4663 	.ascii "Flash f/w: "
        66 2F 77 3A 20
   16E4 00                 4664 	.db 0x00
   16E5                    4665 ___str_72:
   16E5 65 72 72 6F 72 20  4666 	.ascii "error 0x%02X"
        30 78 25 30 32 58
   16F1 00                 4667 	.db 0x00
                           4668 ;src/msg.c:170: void msg_info1()
                           4669 ;	---------------------------------
                           4670 ; Function msg_info1
                           4671 ; ---------------------------------
   16F2                    4672 _msg_info1::
   16F2 DD E5         [15] 4673 	push	ix
   16F4 DD 21 00 00   [14] 4674 	ld	ix,#0
   16F8 DD 39         [15] 4675 	add	ix,sp
   16FA 21 F5 FF      [10] 4676 	ld	hl, #-11
   16FD 39            [11] 4677 	add	hl, sp
   16FE F9            [ 6] 4678 	ld	sp, hl
                           4679 ;src/msg.c:172: u32 f = rd_reg32(R_UPTIME);
   16FF 3E EB         [ 7] 4680 	ld	a, #0xeb
   1701 F5            [11] 4681 	push	af
   1702 33            [ 6] 4682 	inc	sp
   1703 CDr8Cr0D      [17] 4683 	call	_rd_reg32
   1706 33            [ 6] 4684 	inc	sp
   1707 4D            [ 4] 4685 	ld	c, l
   1708 44            [ 4] 4686 	ld	b, h
                           4687 ;src/msg.c:175: ms = f % 1000;
   1709 C5            [11] 4688 	push	bc
   170A D5            [11] 4689 	push	de
   170B 21 00 00      [10] 4690 	ld	hl, #0x0000
   170E E5            [11] 4691 	push	hl
   170F 21 E8 03      [10] 4692 	ld	hl, #0x03e8
   1712 E5            [11] 4693 	push	hl
   1713 D5            [11] 4694 	push	de
   1714 C5            [11] 4695 	push	bc
   1715 CDr00r00      [17] 4696 	call	__modulong
   1718 F1            [10] 4697 	pop	af
   1719 F1            [10] 4698 	pop	af
   171A F1            [10] 4699 	pop	af
   171B F1            [10] 4700 	pop	af
   171C DD 75 FC      [19] 4701 	ld	-4 (ix), l
   171F DD 74 FD      [19] 4702 	ld	-3 (ix), h
   1722 DD 73 FE      [19] 4703 	ld	-2 (ix), e
   1725 DD 72 FF      [19] 4704 	ld	-1 (ix), d
   1728 D1            [10] 4705 	pop	de
   1729 C1            [10] 4706 	pop	bc
   172A DD 7E FC      [19] 4707 	ld	a, -4 (ix)
   172D DD 77 F9      [19] 4708 	ld	-7 (ix), a
   1730 DD 7E FD      [19] 4709 	ld	a, -3 (ix)
   1733 DD 77 FA      [19] 4710 	ld	-6 (ix), a
                           4711 ;src/msg.c:176: f /= 1000;
   1736 21 00 00      [10] 4712 	ld	hl, #0x0000
   1739 E5            [11] 4713 	push	hl
   173A 21 E8 03      [10] 4714 	ld	hl, #0x03e8
   173D E5            [11] 4715 	push	hl
   173E D5            [11] 4716 	push	de
   173F C5            [11] 4717 	push	bc
   1740 CDr00r00      [17] 4718 	call	__divulong
   1743 F1            [10] 4719 	pop	af
   1744 F1            [10] 4720 	pop	af
   1745 F1            [10] 4721 	pop	af
   1746 F1            [10] 4722 	pop	af
   1747 4D            [ 4] 4723 	ld	c, l
   1748 44            [ 4] 4724 	ld	b, h
                           4725 ;src/msg.c:177: s = f % 60;
   1749 C5            [11] 4726 	push	bc
   174A D5            [11] 4727 	push	de
   174B 21 00 00      [10] 4728 	ld	hl, #0x0000
   174E E5            [11] 4729 	push	hl
   174F 21 3C 00      [10] 4730 	ld	hl, #0x003c
   1752 E5            [11] 4731 	push	hl
   1753 D5            [11] 4732 	push	de
   1754 C5            [11] 4733 	push	bc
   1755 CDr00r00      [17] 4734 	call	__modulong
   1758 F1            [10] 4735 	pop	af
   1759 F1            [10] 4736 	pop	af
   175A F1            [10] 4737 	pop	af
   175B F1            [10] 4738 	pop	af
   175C DD 75 F5      [19] 4739 	ld	-11 (ix), l
   175F DD 74 F6      [19] 4740 	ld	-10 (ix), h
   1762 DD 73 F7      [19] 4741 	ld	-9 (ix), e
   1765 DD 72 F8      [19] 4742 	ld	-8 (ix), d
   1768 D1            [10] 4743 	pop	de
   1769 C1            [10] 4744 	pop	bc
   176A DD 7E F5      [19] 4745 	ld	a, -11 (ix)
   176D DD 77 FE      [19] 4746 	ld	-2 (ix), a
                           4747 ;src/msg.c:178: f /= 60;
   1770 21 00 00      [10] 4748 	ld	hl, #0x0000
   1773 E5            [11] 4749 	push	hl
   1774 21 3C 00      [10] 4750 	ld	hl, #0x003c
   1777 E5            [11] 4751 	push	hl
   1778 D5            [11] 4752 	push	de
   1779 C5            [11] 4753 	push	bc
   177A CDr00r00      [17] 4754 	call	__divulong
   177D F1            [10] 4755 	pop	af
   177E F1            [10] 4756 	pop	af
   177F F1            [10] 4757 	pop	af
   1780 F1            [10] 4758 	pop	af
   1781 4D            [ 4] 4759 	ld	c, l
   1782 44            [ 4] 4760 	ld	b, h
                           4761 ;src/msg.c:179: m = f % 60;
   1783 C5            [11] 4762 	push	bc
   1784 D5            [11] 4763 	push	de
   1785 21 00 00      [10] 4764 	ld	hl, #0x0000
   1788 E5            [11] 4765 	push	hl
   1789 21 3C 00      [10] 4766 	ld	hl, #0x003c
   178C E5            [11] 4767 	push	hl
   178D D5            [11] 4768 	push	de
   178E C5            [11] 4769 	push	bc
   178F CDr00r00      [17] 4770 	call	__modulong
   1792 F1            [10] 4771 	pop	af
   1793 F1            [10] 4772 	pop	af
   1794 F1            [10] 4773 	pop	af
   1795 F1            [10] 4774 	pop	af
   1796 DD 75 F5      [19] 4775 	ld	-11 (ix), l
   1799 DD 74 F6      [19] 4776 	ld	-10 (ix), h
   179C DD 73 F7      [19] 4777 	ld	-9 (ix), e
   179F DD 72 F8      [19] 4778 	ld	-8 (ix), d
   17A2 D1            [10] 4779 	pop	de
   17A3 C1            [10] 4780 	pop	bc
   17A4 DD 7E F5      [19] 4781 	ld	a, -11 (ix)
   17A7 DD 77 FF      [19] 4782 	ld	-1 (ix), a
                           4783 ;src/msg.c:180: f /= 60;
   17AA 21 00 00      [10] 4784 	ld	hl, #0x0000
   17AD E5            [11] 4785 	push	hl
   17AE 21 3C 00      [10] 4786 	ld	hl, #0x003c
   17B1 E5            [11] 4787 	push	hl
   17B2 D5            [11] 4788 	push	de
   17B3 C5            [11] 4789 	push	bc
   17B4 CDr00r00      [17] 4790 	call	__divulong
   17B7 F1            [10] 4791 	pop	af
   17B8 F1            [10] 4792 	pop	af
   17B9 F1            [10] 4793 	pop	af
   17BA F1            [10] 4794 	pop	af
   17BB 4D            [ 4] 4795 	ld	c, l
   17BC 44            [ 4] 4796 	ld	b, h
                           4797 ;src/msg.c:181: h = f % 24;
   17BD C5            [11] 4798 	push	bc
   17BE D5            [11] 4799 	push	de
   17BF 21 00 00      [10] 4800 	ld	hl, #0x0000
   17C2 E5            [11] 4801 	push	hl
   17C3 21 18 00      [10] 4802 	ld	hl, #0x0018
   17C6 E5            [11] 4803 	push	hl
   17C7 D5            [11] 4804 	push	de
   17C8 C5            [11] 4805 	push	bc
   17C9 CDr00r00      [17] 4806 	call	__modulong
   17CC F1            [10] 4807 	pop	af
   17CD F1            [10] 4808 	pop	af
   17CE F1            [10] 4809 	pop	af
   17CF F1            [10] 4810 	pop	af
   17D0 DD 75 F5      [19] 4811 	ld	-11 (ix), l
   17D3 DD 74 F6      [19] 4812 	ld	-10 (ix), h
   17D6 DD 73 F7      [19] 4813 	ld	-9 (ix), e
   17D9 DD 72 F8      [19] 4814 	ld	-8 (ix), d
   17DC D1            [10] 4815 	pop	de
   17DD C1            [10] 4816 	pop	bc
   17DE DD 7E F5      [19] 4817 	ld	a, -11 (ix)
   17E1 DD 77 FB      [19] 4818 	ld	-5 (ix), a
                           4819 ;src/msg.c:182: d = f / 24;
   17E4 21 00 00      [10] 4820 	ld	hl, #0x0000
   17E7 E5            [11] 4821 	push	hl
   17E8 21 18 00      [10] 4822 	ld	hl, #0x0018
   17EB E5            [11] 4823 	push	hl
   17EC D5            [11] 4824 	push	de
   17ED C5            [11] 4825 	push	bc
   17EE CDr00r00      [17] 4826 	call	__divulong
   17F1 F1            [10] 4827 	pop	af
   17F2 F1            [10] 4828 	pop	af
   17F3 F1            [10] 4829 	pop	af
   17F4 F1            [10] 4830 	pop	af
   17F5 EB            [ 4] 4831 	ex	de, hl
                           4832 ;src/msg.c:184: xy(0, 21); color(C_NORM); printf("Uptime: ");
   17F6 21r00r00      [10] 4833 	ld	hl,#_cx + 0
   17F9 36 00         [10] 4834 	ld	(hl), #0x00
   17FB 21r01r00      [10] 4835 	ld	hl,#_cy + 0
   17FE 36 15         [10] 4836 	ld	(hl), #0x15
   1800 21r03r00      [10] 4837 	ld	hl,#_cc + 0
   1803 36 47         [10] 4838 	ld	(hl), #0x47
   1805 D5            [11] 4839 	push	de
   1806 21r57r18      [10] 4840 	ld	hl, #___str_74
   1809 E5            [11] 4841 	push	hl
   180A CDr00r00      [17] 4842 	call	_printf
   180D F1            [10] 4843 	pop	af
   180E D1            [10] 4844 	pop	de
                           4845 ;src/msg.c:185: color(C_DATA); printf("%ud %uh %um %us %ums     ", d, h, m, s, ms);
   180F 21r03r00      [10] 4846 	ld	hl,#_cc + 0
   1812 36 46         [10] 4847 	ld	(hl), #0x46
   1814 DD 7E FE      [19] 4848 	ld	a, -2 (ix)
   1817 DD 77 FC      [19] 4849 	ld	-4 (ix), a
   181A DD 36 FD 00   [19] 4850 	ld	-3 (ix), #0x00
   181E DD 7E FF      [19] 4851 	ld	a, -1 (ix)
   1821 DD 77 FE      [19] 4852 	ld	-2 (ix), a
   1824 DD 36 FF 00   [19] 4853 	ld	-1 (ix), #0x00
   1828 DD 4E FB      [19] 4854 	ld	c, -5 (ix)
   182B 06 00         [ 7] 4855 	ld	b, #0x00
   182D 16 00         [ 7] 4856 	ld	d, #0x00
   182F DD 6E F9      [19] 4857 	ld	l, -7 (ix)
   1832 DD 66 FA      [19] 4858 	ld	h, -6 (ix)
   1835 E5            [11] 4859 	push	hl
   1836 DD 6E FC      [19] 4860 	ld	l, -4 (ix)
   1839 DD 66 FD      [19] 4861 	ld	h, -3 (ix)
   183C E5            [11] 4862 	push	hl
   183D DD 6E FE      [19] 4863 	ld	l, -2 (ix)
   1840 DD 66 FF      [19] 4864 	ld	h, -1 (ix)
   1843 E5            [11] 4865 	push	hl
   1844 C5            [11] 4866 	push	bc
   1845 D5            [11] 4867 	push	de
   1846 21r60r18      [10] 4868 	ld	hl, #___str_75
   1849 E5            [11] 4869 	push	hl
   184A CDr00r00      [17] 4870 	call	_printf
   184D 21 0C 00      [10] 4871 	ld	hl, #12
   1850 39            [11] 4872 	add	hl, sp
   1851 F9            [ 6] 4873 	ld	sp, hl
                           4874 ;src/msg.c:186: }
   1852 DD F9         [10] 4875 	ld	sp, ix
   1854 DD E1         [14] 4876 	pop	ix
   1856 C9            [10] 4877 	ret
   1857                    4878 ___str_74:
   1857 55 70 74 69 6D 65  4879 	.ascii "Uptime: "
        3A 20
   185F 00                 4880 	.db 0x00
   1860                    4881 ___str_75:
   1860 25 75 64 20 25 75  4882 	.ascii "%ud %uh %um %us %ums     "
        68 20 25 75 6D 20
        25 75 73 20 25 75
        6D 73 20 20 20 20
        20
   1879 00                 4883 	.db 0x00
                           4884 ;src/msg.c:188: void msg_info()
                           4885 ;	---------------------------------
                           4886 ; Function msg_info
                           4887 ; ---------------------------------
   187A                    4888 _msg_info::
   187A DD E5         [15] 4889 	push	ix
   187C DD 21 00 00   [14] 4890 	ld	ix,#0
   1880 DD 39         [15] 4891 	add	ix,sp
   1882 21 D6 FF      [10] 4892 	ld	hl, #-42
   1885 39            [11] 4893 	add	hl, sp
   1886 F9            [ 6] 4894 	ld	sp, hl
                           4895 ;src/msg.c:195: cls();
   1887 CDrB9r00      [17] 4896 	call	_cls
                           4897 ;src/msg.c:196: xy(90,1); color(C_HEAD); printf("Device Info");
   188A 21r00r00      [10] 4898 	ld	hl,#_cx + 0
   188D 36 5A         [10] 4899 	ld	(hl), #0x5a
   188F 21r01r00      [10] 4900 	ld	hl,#_cy + 0
   1892 36 01         [10] 4901 	ld	(hl), #0x01
   1894 21r03r00      [10] 4902 	ld	hl,#_cc + 0
   1897 36 45         [10] 4903 	ld	(hl), #0x45
   1899 21r7Dr1A      [10] 4904 	ld	hl, #___str_76
   189C E5            [11] 4905 	push	hl
   189D CDr00r00      [17] 4906 	call	_printf
                           4907 ;src/msg.c:198: f1 = rd_reg16(R_DEV_SIG);
   18A0 26 E0         [ 7] 4908 	ld	h,#0xe0
   18A2 E3            [19] 4909 	ex	(sp),hl
   18A3 33            [ 6] 4910 	inc	sp
   18A4 CDr64r0D      [17] 4911 	call	_rd_reg16
   18A7 33            [ 6] 4912 	inc	sp
   18A8 4D            [ 4] 4913 	ld	c, l
   18A9 44            [ 4] 4914 	ld	b, h
                           4915 ;src/msg.c:199: xy(0, 4); color(C_NORM); printf("Device signature: ");
   18AA 21r00r00      [10] 4916 	ld	hl,#_cx + 0
   18AD 36 00         [10] 4917 	ld	(hl), #0x00
   18AF 21r01r00      [10] 4918 	ld	hl,#_cy + 0
   18B2 36 04         [10] 4919 	ld	(hl), #0x04
   18B4 21r03r00      [10] 4920 	ld	hl,#_cc + 0
   18B7 36 47         [10] 4921 	ld	(hl), #0x47
   18B9 C5            [11] 4922 	push	bc
   18BA 21r89r1A      [10] 4923 	ld	hl, #___str_77
   18BD E5            [11] 4924 	push	hl
   18BE CDr00r00      [17] 4925 	call	_printf
   18C1 F1            [10] 4926 	pop	af
   18C2 C1            [10] 4927 	pop	bc
                           4928 ;src/msg.c:200: color(C_DATA); printf("%P\n\n", f1);
   18C3 21r03r00      [10] 4929 	ld	hl,#_cc + 0
   18C6 36 46         [10] 4930 	ld	(hl), #0x46
   18C8 C5            [11] 4931 	push	bc
   18C9 C5            [11] 4932 	push	bc
   18CA 21r9Cr1A      [10] 4933 	ld	hl, #___str_78
   18CD E5            [11] 4934 	push	hl
   18CE CDr00r00      [17] 4935 	call	_printf
   18D1 F1            [10] 4936 	pop	af
   18D2 F1            [10] 4937 	pop	af
   18D3 C1            [10] 4938 	pop	bc
                           4939 ;src/msg.c:202: if (f1 == M_DEVSIG)
   18D4 79            [ 4] 4940 	ld	a, c
   18D5 D6 55         [ 7] 4941 	sub	a, #0x55
   18D7 20 0A         [12] 4942 	jr	NZ,00102$
   18D9 78            [ 4] 4943 	ld	a, b
   18DA D6 AA         [ 7] 4944 	sub	a, #0xaa
   18DC 20 05         [12] 4945 	jr	NZ,00102$
                           4946 ;src/msg.c:203: unlock_chip();
   18DE CDr93r0E      [17] 4947 	call	_unlock_chip
   18E1 18 10         [12] 4948 	jr	00103$
   18E3                    4949 00102$:
                           4950 ;src/msg.c:206: color(C_ERR); printf("ERROR: chip not found!");
   18E3 21r03r00      [10] 4951 	ld	hl,#_cc + 0
   18E6 36 42         [10] 4952 	ld	(hl), #0x42
   18E8 21rA1r1A      [10] 4953 	ld	hl, #___str_79
   18EB E5            [11] 4954 	push	hl
   18EC CDr00r00      [17] 4955 	call	_printf
   18EF F1            [10] 4956 	pop	af
                           4957 ;src/msg.c:207: return;
   18F0 C3r78r1A      [10] 4958 	jp	00104$
   18F3                    4959 00103$:
                           4960 ;src/msg.c:210: f = rd_reg32(R_CORE_FRQ) / 1000;
   18F3 3E EF         [ 7] 4961 	ld	a, #0xef
   18F5 F5            [11] 4962 	push	af
   18F6 33            [ 6] 4963 	inc	sp
   18F7 CDr8Cr0D      [17] 4964 	call	_rd_reg32
   18FA 33            [ 6] 4965 	inc	sp
   18FB 4D            [ 4] 4966 	ld	c, l
   18FC 44            [ 4] 4967 	ld	b, h
   18FD 21 00 00      [10] 4968 	ld	hl, #0x0000
   1900 E5            [11] 4969 	push	hl
   1901 21 E8 03      [10] 4970 	ld	hl, #0x03e8
   1904 E5            [11] 4971 	push	hl
   1905 D5            [11] 4972 	push	de
   1906 C5            [11] 4973 	push	bc
   1907 CDr00r00      [17] 4974 	call	__divulong
   190A F1            [10] 4975 	pop	af
   190B F1            [10] 4976 	pop	af
   190C F1            [10] 4977 	pop	af
   190D F1            [10] 4978 	pop	af
   190E 4D            [ 4] 4979 	ld	c, l
   190F 44            [ 4] 4980 	ld	b, h
                           4981 ;src/msg.c:211: color(C_NORM); printf("Core frequency: ");
   1910 21r03r00      [10] 4982 	ld	hl,#_cc + 0
   1913 36 47         [10] 4983 	ld	(hl), #0x47
   1915 C5            [11] 4984 	push	bc
   1916 D5            [11] 4985 	push	de
   1917 21rB8r1A      [10] 4986 	ld	hl, #___str_80
   191A E5            [11] 4987 	push	hl
   191B CDr00r00      [17] 4988 	call	_printf
   191E F1            [10] 4989 	pop	af
   191F D1            [10] 4990 	pop	de
   1920 C1            [10] 4991 	pop	bc
                           4992 ;src/msg.c:212: color(C_DATA); printf("%d.%03dMHz\n\n", f / 1000, f % 1000);
   1921 21r03r00      [10] 4993 	ld	hl,#_cc + 0
   1924 36 46         [10] 4994 	ld	(hl), #0x46
   1926 C5            [11] 4995 	push	bc
   1927 D5            [11] 4996 	push	de
   1928 21 00 00      [10] 4997 	ld	hl, #0x0000
   192B E5            [11] 4998 	push	hl
   192C 21 E8 03      [10] 4999 	ld	hl, #0x03e8
   192F E5            [11] 5000 	push	hl
   1930 D5            [11] 5001 	push	de
   1931 C5            [11] 5002 	push	bc
   1932 CDr00r00      [17] 5003 	call	__modulong
   1935 F1            [10] 5004 	pop	af
   1936 F1            [10] 5005 	pop	af
   1937 F1            [10] 5006 	pop	af
   1938 F1            [10] 5007 	pop	af
   1939 DD 75 FC      [19] 5008 	ld	-4 (ix), l
   193C DD 74 FD      [19] 5009 	ld	-3 (ix), h
   193F DD 73 FE      [19] 5010 	ld	-2 (ix), e
   1942 DD 72 FF      [19] 5011 	ld	-1 (ix), d
   1945 D1            [10] 5012 	pop	de
   1946 C1            [10] 5013 	pop	bc
   1947 21 00 00      [10] 5014 	ld	hl, #0x0000
   194A E5            [11] 5015 	push	hl
   194B 21 E8 03      [10] 5016 	ld	hl, #0x03e8
   194E E5            [11] 5017 	push	hl
   194F D5            [11] 5018 	push	de
   1950 C5            [11] 5019 	push	bc
   1951 CDr00r00      [17] 5020 	call	__divulong
   1954 F1            [10] 5021 	pop	af
   1955 F1            [10] 5022 	pop	af
   1956 F1            [10] 5023 	pop	af
   1957 F1            [10] 5024 	pop	af
   1958 4D            [ 4] 5025 	ld	c, l
   1959 44            [ 4] 5026 	ld	b, h
   195A DD 6E FE      [19] 5027 	ld	l, -2 (ix)
   195D DD 66 FF      [19] 5028 	ld	h, -1 (ix)
   1960 E5            [11] 5029 	push	hl
   1961 DD 6E FC      [19] 5030 	ld	l, -4 (ix)
   1964 DD 66 FD      [19] 5031 	ld	h, -3 (ix)
   1967 E5            [11] 5032 	push	hl
   1968 D5            [11] 5033 	push	de
   1969 C5            [11] 5034 	push	bc
   196A 21rC9r1A      [10] 5035 	ld	hl, #___str_81
   196D E5            [11] 5036 	push	hl
   196E CDr00r00      [17] 5037 	call	_printf
   1971 21 0A 00      [10] 5038 	ld	hl, #10
   1974 39            [11] 5039 	add	hl, sp
   1975 F9            [ 6] 5040 	ld	sp, hl
                           5041 ;src/msg.c:214: msg_mode();
   1976 CDrC0r11      [17] 5042 	call	_msg_mode
                           5043 ;src/msg.c:216: rd_reg_arr(R_VER, (u8*)&ver, sizeof(ver));
   1979 21 20 00      [10] 5044 	ld	hl, #32
   197C 39            [11] 5045 	add	hl, sp
   197D EB            [ 4] 5046 	ex	de, hl
   197E 4B            [ 4] 5047 	ld	c, e
   197F 42            [ 4] 5048 	ld	b, d
   1980 D5            [11] 5049 	push	de
   1981 21 06 00      [10] 5050 	ld	hl, #0x0006
   1984 E5            [11] 5051 	push	hl
   1985 C5            [11] 5052 	push	bc
   1986 3E EC         [ 7] 5053 	ld	a, #0xec
   1988 F5            [11] 5054 	push	af
   1989 33            [ 6] 5055 	inc	sp
   198A CDr26r0E      [17] 5056 	call	_rd_reg_arr
   198D F1            [10] 5057 	pop	af
   198E F1            [10] 5058 	pop	af
   198F 33            [ 6] 5059 	inc	sp
   1990 D1            [10] 5060 	pop	de
                           5061 ;src/msg.c:217: color(C_NORM); printf("Hardware version: ");
   1991 21r03r00      [10] 5062 	ld	hl,#_cc + 0
   1994 36 47         [10] 5063 	ld	(hl), #0x47
   1996 D5            [11] 5064 	push	de
   1997 21rD6r1A      [10] 5065 	ld	hl, #___str_82
   199A E5            [11] 5066 	push	hl
   199B CDr00r00      [17] 5067 	call	_printf
   199E F1            [10] 5068 	pop	af
   199F D1            [10] 5069 	pop	de
                           5070 ;src/msg.c:218: color(C_DATA); printf("%u\n", ver.hw);
   19A0 21r03r00      [10] 5071 	ld	hl,#_cc + 0
   19A3 36 46         [10] 5072 	ld	(hl), #0x46
   19A5 6B            [ 4] 5073 	ld	l, e
   19A6 62            [ 4] 5074 	ld	h, d
   19A7 4E            [ 7] 5075 	ld	c, (hl)
   19A8 23            [ 6] 5076 	inc	hl
   19A9 46            [ 7] 5077 	ld	b, (hl)
   19AA D5            [11] 5078 	push	de
   19AB C5            [11] 5079 	push	bc
   19AC 21rE9r1A      [10] 5080 	ld	hl, #___str_83
   19AF E5            [11] 5081 	push	hl
   19B0 CDr00r00      [17] 5082 	call	_printf
   19B3 F1            [10] 5083 	pop	af
   19B4 F1            [10] 5084 	pop	af
   19B5 D1            [10] 5085 	pop	de
                           5086 ;src/msg.c:219: color(C_NORM); printf("Firmware version: ");
   19B6 21r03r00      [10] 5087 	ld	hl,#_cc + 0
   19B9 36 47         [10] 5088 	ld	(hl), #0x47
   19BB D5            [11] 5089 	push	de
   19BC 21rEDr1A      [10] 5090 	ld	hl, #___str_84
   19BF E5            [11] 5091 	push	hl
   19C0 CDr00r00      [17] 5092 	call	_printf
   19C3 F1            [10] 5093 	pop	af
   19C4 D1            [10] 5094 	pop	de
                           5095 ;src/msg.c:220: color(C_DATA); printf("%u\n", ver.fw);
   19C5 21r03r00      [10] 5096 	ld	hl,#_cc + 0
   19C8 36 46         [10] 5097 	ld	(hl), #0x46
   19CA 6B            [ 4] 5098 	ld	l, e
   19CB 62            [ 4] 5099 	ld	h, d
   19CC 23            [ 6] 5100 	inc	hl
   19CD 23            [ 6] 5101 	inc	hl
   19CE 4E            [ 7] 5102 	ld	c, (hl)
   19CF 23            [ 6] 5103 	inc	hl
   19D0 46            [ 7] 5104 	ld	b, (hl)
   19D1 D5            [11] 5105 	push	de
   19D2 C5            [11] 5106 	push	bc
   19D3 21rE9r1A      [10] 5107 	ld	hl, #___str_83
   19D6 E5            [11] 5108 	push	hl
   19D7 CDr00r00      [17] 5109 	call	_printf
   19DA F1            [10] 5110 	pop	af
   19DB F1            [10] 5111 	pop	af
   19DC D1            [10] 5112 	pop	de
                           5113 ;src/msg.c:221: color(C_NORM); printf("Config version: ");
   19DD 21r03r00      [10] 5114 	ld	hl,#_cc + 0
   19E0 36 47         [10] 5115 	ld	(hl), #0x47
   19E2 D5            [11] 5116 	push	de
   19E3 21r00r1B      [10] 5117 	ld	hl, #___str_85
   19E6 E5            [11] 5118 	push	hl
   19E7 CDr00r00      [17] 5119 	call	_printf
   19EA F1            [10] 5120 	pop	af
   19EB D1            [10] 5121 	pop	de
                           5122 ;src/msg.c:222: color(C_DATA); printf("%u\n\n", ver.cf);
   19EC 21r03r00      [10] 5123 	ld	hl,#_cc + 0
   19EF 36 46         [10] 5124 	ld	(hl), #0x46
   19F1 EB            [ 4] 5125 	ex	de,hl
   19F2 11 04 00      [10] 5126 	ld	de, #0x0004
   19F5 19            [11] 5127 	add	hl, de
   19F6 4E            [ 7] 5128 	ld	c, (hl)
   19F7 23            [ 6] 5129 	inc	hl
   19F8 46            [ 7] 5130 	ld	b, (hl)
   19F9 C5            [11] 5131 	push	bc
   19FA 21r11r1B      [10] 5132 	ld	hl, #___str_86
   19FD E5            [11] 5133 	push	hl
   19FE CDr00r00      [17] 5134 	call	_printf
   1A01 F1            [10] 5135 	pop	af
   1A02 F1            [10] 5136 	pop	af
                           5137 ;src/msg.c:224: rd_reg_str(R_CPR_STR, s, sizeof(s));
   1A03 21 00 00      [10] 5138 	ld	hl, #0
   1A06 39            [11] 5139 	add	hl, sp
   1A07 EB            [ 4] 5140 	ex	de, hl
   1A08 4B            [ 4] 5141 	ld	c, e
   1A09 42            [ 4] 5142 	ld	b, d
   1A0A D5            [11] 5143 	push	de
   1A0B 3E 20         [ 7] 5144 	ld	a, #0x20
   1A0D F5            [11] 5145 	push	af
   1A0E 33            [ 6] 5146 	inc	sp
   1A0F C5            [11] 5147 	push	bc
   1A10 3E ED         [ 7] 5148 	ld	a, #0xed
   1A12 F5            [11] 5149 	push	af
   1A13 33            [ 6] 5150 	inc	sp
   1A14 CDr59r0E      [17] 5151 	call	_rd_reg_str
   1A17 F1            [10] 5152 	pop	af
   1A18 F1            [10] 5153 	pop	af
   1A19 D1            [10] 5154 	pop	de
                           5155 ;src/msg.c:225: color(C_NORM); printf("Info:  ");
   1A1A 21r03r00      [10] 5156 	ld	hl,#_cc + 0
   1A1D 36 47         [10] 5157 	ld	(hl), #0x47
   1A1F D5            [11] 5158 	push	de
   1A20 21r16r1B      [10] 5159 	ld	hl, #___str_87
   1A23 E5            [11] 5160 	push	hl
   1A24 CDr00r00      [17] 5161 	call	_printf
   1A27 F1            [10] 5162 	pop	af
   1A28 D1            [10] 5163 	pop	de
                           5164 ;src/msg.c:226: color(C_DATA); printf("%s\n", s);
   1A29 21r03r00      [10] 5165 	ld	hl,#_cc + 0
   1A2C 36 46         [10] 5166 	ld	(hl), #0x46
   1A2E 4B            [ 4] 5167 	ld	c, e
   1A2F 42            [ 4] 5168 	ld	b, d
   1A30 D5            [11] 5169 	push	de
   1A31 C5            [11] 5170 	push	bc
   1A32 21r1Er1B      [10] 5171 	ld	hl, #___str_88
   1A35 E5            [11] 5172 	push	hl
   1A36 CDr00r00      [17] 5173 	call	_printf
   1A39 F1            [10] 5174 	pop	af
   1A3A F1            [10] 5175 	pop	af
   1A3B D1            [10] 5176 	pop	de
                           5177 ;src/msg.c:228: rd_reg_str(R_BLD_STR, s, sizeof(s));
   1A3C 4B            [ 4] 5178 	ld	c, e
   1A3D 42            [ 4] 5179 	ld	b, d
   1A3E D5            [11] 5180 	push	de
   1A3F 3E 20         [ 7] 5181 	ld	a, #0x20
   1A41 F5            [11] 5182 	push	af
   1A42 33            [ 6] 5183 	inc	sp
   1A43 C5            [11] 5184 	push	bc
   1A44 3E EE         [ 7] 5185 	ld	a, #0xee
   1A46 F5            [11] 5186 	push	af
   1A47 33            [ 6] 5187 	inc	sp
   1A48 CDr59r0E      [17] 5188 	call	_rd_reg_str
   1A4B F1            [10] 5189 	pop	af
   1A4C F1            [10] 5190 	pop	af
   1A4D D1            [10] 5191 	pop	de
                           5192 ;src/msg.c:229: color(C_NORM); printf("Build: ");
   1A4E 21r03r00      [10] 5193 	ld	hl,#_cc + 0
   1A51 36 47         [10] 5194 	ld	(hl), #0x47
   1A53 D5            [11] 5195 	push	de
   1A54 21r22r1B      [10] 5196 	ld	hl, #___str_89
   1A57 E5            [11] 5197 	push	hl
   1A58 CDr00r00      [17] 5198 	call	_printf
   1A5B F1            [10] 5199 	pop	af
   1A5C D1            [10] 5200 	pop	de
                           5201 ;src/msg.c:230: color(C_DATA); printf("%s", s);
   1A5D 21r03r00      [10] 5202 	ld	hl,#_cc + 0
   1A60 36 46         [10] 5203 	ld	(hl), #0x46
   1A62 D5            [11] 5204 	push	de
   1A63 21r2Ar1B      [10] 5205 	ld	hl, #___str_90
   1A66 E5            [11] 5206 	push	hl
   1A67 CDr00r00      [17] 5207 	call	_printf
   1A6A F1            [10] 5208 	pop	af
   1A6B F1            [10] 5209 	pop	af
                           5210 ;src/msg.c:232: task = msg_info1;
   1A6C FD 21r06r00   [14] 5211 	ld	iy, #_task
   1A70 FD 36 00rF2   [19] 5212 	ld	0 (iy), #<(_msg_info1)
   1A74 FD 36 01s16   [19] 5213 	ld	1 (iy), #>(_msg_info1)
   1A78                    5214 00104$:
                           5215 ;src/msg.c:233: }
   1A78 DD F9         [10] 5216 	ld	sp, ix
   1A7A DD E1         [14] 5217 	pop	ix
   1A7C C9            [10] 5218 	ret
   1A7D                    5219 ___str_76:
   1A7D 44 65 76 69 63 65  5220 	.ascii "Device Info"
        20 49 6E 66 6F
   1A88 00                 5221 	.db 0x00
   1A89                    5222 ___str_77:
   1A89 44 65 76 69 63 65  5223 	.ascii "Device signature: "
        20 73 69 67 6E 61
        74 75 72 65 3A 20
   1A9B 00                 5224 	.db 0x00
   1A9C                    5225 ___str_78:
   1A9C 25 50              5226 	.ascii "%P"
   1A9E 0A                 5227 	.db 0x0a
   1A9F 0A                 5228 	.db 0x0a
   1AA0 00                 5229 	.db 0x00
   1AA1                    5230 ___str_79:
   1AA1 45 52 52 4F 52 3A  5231 	.ascii "ERROR: chip not found!"
        20 63 68 69 70 20
        6E 6F 74 20 66 6F
        75 6E 64 21
   1AB7 00                 5232 	.db 0x00
   1AB8                    5233 ___str_80:
   1AB8 43 6F 72 65 20 66  5234 	.ascii "Core frequency: "
        72 65 71 75 65 6E
        63 79 3A 20
   1AC8 00                 5235 	.db 0x00
   1AC9                    5236 ___str_81:
   1AC9 25 64 2E 25 30 33  5237 	.ascii "%d.%03dMHz"
        64 4D 48 7A
   1AD3 0A                 5238 	.db 0x0a
   1AD4 0A                 5239 	.db 0x0a
   1AD5 00                 5240 	.db 0x00
   1AD6                    5241 ___str_82:
   1AD6 48 61 72 64 77 61  5242 	.ascii "Hardware version: "
        72 65 20 76 65 72
        73 69 6F 6E 3A 20
   1AE8 00                 5243 	.db 0x00
   1AE9                    5244 ___str_83:
   1AE9 25 75              5245 	.ascii "%u"
   1AEB 0A                 5246 	.db 0x0a
   1AEC 00                 5247 	.db 0x00
   1AED                    5248 ___str_84:
   1AED 46 69 72 6D 77 61  5249 	.ascii "Firmware version: "
        72 65 20 76 65 72
        73 69 6F 6E 3A 20
   1AFF 00                 5250 	.db 0x00
   1B00                    5251 ___str_85:
   1B00 43 6F 6E 66 69 67  5252 	.ascii "Config version: "
        20 76 65 72 73 69
        6F 6E 3A 20
   1B10 00                 5253 	.db 0x00
   1B11                    5254 ___str_86:
   1B11 25 75              5255 	.ascii "%u"
   1B13 0A                 5256 	.db 0x0a
   1B14 0A                 5257 	.db 0x0a
   1B15 00                 5258 	.db 0x00
   1B16                    5259 ___str_87:
   1B16 49 6E 66 6F 3A 20  5260 	.ascii "Info:  "
        20
   1B1D 00                 5261 	.db 0x00
   1B1E                    5262 ___str_88:
   1B1E 25 73              5263 	.ascii "%s"
   1B20 0A                 5264 	.db 0x0a
   1B21 00                 5265 	.db 0x00
   1B22                    5266 ___str_89:
   1B22 42 75 69 6C 64 3A  5267 	.ascii "Build: "
        20
   1B29 00                 5268 	.db 0x00
   1B2A                    5269 ___str_90:
   1B2A 25 73              5270 	.ascii "%s"
   1B2C 00                 5271 	.db 0x00
                           5272 ;src/msg.c:236: void msg_set()
                           5273 ;	---------------------------------
                           5274 ; Function msg_set
                           5275 ; ---------------------------------
   1B2D                    5276 _msg_set::
                           5277 ;src/msg.c:238: atb_sel.b = rd_reg8(R_PSG_ACTRL);
   1B2D 3E D3         [ 7] 5278 	ld	a, #0xd3
   1B2F F5            [11] 5279 	push	af
   1B30 33            [ 6] 5280 	inc	sp
   1B31 CDr56r0D      [17] 5281 	call	_rd_reg8
   1B34 33            [ 6] 5282 	inc	sp
   1B35 7D            [ 4] 5283 	ld	a, l
   1B36 32r08r00      [13] 5284 	ld	(#_atb_sel),a
                           5285 ;src/msg.c:239: bus_sel.b = rd_reg8(R_PSG_BCTRL);
   1B39 3E D2         [ 7] 5286 	ld	a, #0xd2
   1B3B F5            [11] 5287 	push	af
   1B3C 33            [ 6] 5288 	inc	sp
   1B3D CDr56r0D      [17] 5289 	call	_rd_reg8
   1B40 33            [ 6] 5290 	inc	sp
   1B41 7D            [ 4] 5291 	ld	a, l
   1B42 32r09r00      [13] 5292 	ld	(#_bus_sel),a
                           5293 ;src/msg.c:240: clk_sel.b = rd_reg8(R_PSG_CCTRL);
   1B45 3E D1         [ 7] 5294 	ld	a, #0xd1
   1B47 F5            [11] 5295 	push	af
   1B48 33            [ 6] 5296 	inc	sp
   1B49 CDr56r0D      [17] 5297 	call	_rd_reg8
   1B4C 33            [ 6] 5298 	inc	sp
   1B4D 7D            [ 4] 5299 	ld	a, l
   1B4E 32r0Ar00      [13] 5300 	ld	(#_clk_sel),a
                           5301 ;src/msg.c:242: cls();
   1B51 CDrB9r00      [17] 5302 	call	_cls
                           5303 ;src/msg.c:243: xy(70,1); color(C_HEAD); printf("PSG and WS Settings");
   1B54 21r00r00      [10] 5304 	ld	hl,#_cx + 0
   1B57 36 46         [10] 5305 	ld	(hl), #0x46
   1B59 21r01r00      [10] 5306 	ld	hl,#_cy + 0
   1B5C 36 01         [10] 5307 	ld	(hl), #0x01
   1B5E 21r03r00      [10] 5308 	ld	hl,#_cc + 0
   1B61 36 45         [10] 5309 	ld	(hl), #0x45
   1B63 21r7Ar1C      [10] 5310 	ld	hl, #___str_91
   1B66 E5            [11] 5311 	push	hl
   1B67 CDr00r00      [17] 5312 	call	_printf
   1B6A F1            [10] 5313 	pop	af
                           5314 ;src/msg.c:244: defx = 16; xy(defx, 4);
   1B6B 21r02r00      [10] 5315 	ld	hl,#_defx + 0
   1B6E 36 10         [10] 5316 	ld	(hl), #0x10
   1B70 21r00r00      [10] 5317 	ld	hl,#_cx + 0
   1B73 36 10         [10] 5318 	ld	(hl), #0x10
   1B75 21r01r00      [10] 5319 	ld	hl,#_cy + 0
   1B78 36 04         [10] 5320 	ld	(hl), #0x04
                           5321 ;src/msg.c:246: color(C_BUTN); printf("1. "); color(C_NORM); printf("Clock: "); color(C_SEL); printf("%s\n\n", clk_sel_txt[clk_sel.clksel]);
   1B7A 21r03r00      [10] 5322 	ld	hl,#_cc + 0
   1B7D 36 44         [10] 5323 	ld	(hl), #0x44
   1B7F 21r8Er1C      [10] 5324 	ld	hl, #___str_92
   1B82 E5            [11] 5325 	push	hl
   1B83 CDr00r00      [17] 5326 	call	_printf
   1B86 F1            [10] 5327 	pop	af
   1B87 21r03r00      [10] 5328 	ld	hl,#_cc + 0
   1B8A 36 47         [10] 5329 	ld	(hl), #0x47
   1B8C 21r92r1C      [10] 5330 	ld	hl, #___str_93
   1B8F E5            [11] 5331 	push	hl
   1B90 CDr00r00      [17] 5332 	call	_printf
   1B93 F1            [10] 5333 	pop	af
   1B94 21r03r00      [10] 5334 	ld	hl,#_cc + 0
   1B97 36 46         [10] 5335 	ld	(hl), #0x46
   1B99 01rE3r00      [10] 5336 	ld	bc, #_clk_sel_txt+0
   1B9C 3Ar0Ar00      [13] 5337 	ld	a, (#_clk_sel)
   1B9F E6 07         [ 7] 5338 	and	a, #0x07
   1BA1 6F            [ 4] 5339 	ld	l, a
   1BA2 26 00         [ 7] 5340 	ld	h, #0x00
   1BA4 29            [11] 5341 	add	hl, hl
   1BA5 09            [11] 5342 	add	hl, bc
   1BA6 4E            [ 7] 5343 	ld	c, (hl)
   1BA7 23            [ 6] 5344 	inc	hl
   1BA8 46            [ 7] 5345 	ld	b, (hl)
   1BA9 C5            [11] 5346 	push	bc
   1BAA 21r9Ar1C      [10] 5347 	ld	hl, #___str_94
   1BAD E5            [11] 5348 	push	hl
   1BAE CDr00r00      [17] 5349 	call	_printf
   1BB1 F1            [10] 5350 	pop	af
   1BB2 F1            [10] 5351 	pop	af
                           5352 ;src/msg.c:247: color(C_BUTN); printf("2. "); color(C_NORM); printf("Multiple PSG mode: "); color(C_SEL); printf("%s\n\n", bus_sel_txt[bus_sel.psgmul]);
   1BB3 21r03r00      [10] 5353 	ld	hl,#_cc + 0
   1BB6 36 44         [10] 5354 	ld	(hl), #0x44
   1BB8 21r9Fr1C      [10] 5355 	ld	hl, #___str_95
   1BBB E5            [11] 5356 	push	hl
   1BBC CDr00r00      [17] 5357 	call	_printf
   1BBF F1            [10] 5358 	pop	af
   1BC0 21r03r00      [10] 5359 	ld	hl,#_cc + 0
   1BC3 36 47         [10] 5360 	ld	(hl), #0x47
   1BC5 21rA3r1C      [10] 5361 	ld	hl, #___str_96
   1BC8 E5            [11] 5362 	push	hl
   1BC9 CDr00r00      [17] 5363 	call	_printf
   1BCC F1            [10] 5364 	pop	af
   1BCD 21r03r00      [10] 5365 	ld	hl,#_cc + 0
   1BD0 36 46         [10] 5366 	ld	(hl), #0x46
   1BD2 01rFBr00      [10] 5367 	ld	bc, #_bus_sel_txt+0
   1BD5 3Ar09r00      [13] 5368 	ld	a, (#_bus_sel)
   1BD8 E6 07         [ 7] 5369 	and	a, #0x07
   1BDA 6F            [ 4] 5370 	ld	l, a
   1BDB 26 00         [ 7] 5371 	ld	h, #0x00
   1BDD 29            [11] 5372 	add	hl, hl
   1BDE 09            [11] 5373 	add	hl, bc
   1BDF 4E            [ 7] 5374 	ld	c, (hl)
   1BE0 23            [ 6] 5375 	inc	hl
   1BE1 46            [ 7] 5376 	ld	b, (hl)
   1BE2 C5            [11] 5377 	push	bc
   1BE3 21r9Ar1C      [10] 5378 	ld	hl, #___str_94
   1BE6 E5            [11] 5379 	push	hl
   1BE7 CDr00r00      [17] 5380 	call	_printf
   1BEA F1            [10] 5381 	pop	af
   1BEB F1            [10] 5382 	pop	af
                           5383 ;src/msg.c:248: color(C_BUTN); printf("3. "); color(C_NORM); printf("Set Channel Mixer\n\n");
   1BEC 21r03r00      [10] 5384 	ld	hl,#_cc + 0
   1BEF 36 44         [10] 5385 	ld	(hl), #0x44
   1BF1 21rB7r1C      [10] 5386 	ld	hl, #___str_97
   1BF4 E5            [11] 5387 	push	hl
   1BF5 CDr00r00      [17] 5388 	call	_printf
   1BF8 F1            [10] 5389 	pop	af
   1BF9 21r03r00      [10] 5390 	ld	hl,#_cc + 0
   1BFC 36 47         [10] 5391 	ld	(hl), #0x47
   1BFE 21rBBr1C      [10] 5392 	ld	hl, #___str_99
   1C01 E5            [11] 5393 	push	hl
   1C02 CDr00r00      [17] 5394 	call	_puts
   1C05 F1            [10] 5395 	pop	af
                           5396 ;src/msg.c:249: color(C_BUTN); printf("4. "); color(C_NORM); printf("Set Amplitude Table\n\n");
   1C06 21r03r00      [10] 5397 	ld	hl,#_cc + 0
   1C09 36 44         [10] 5398 	ld	(hl), #0x44
   1C0B 21rCEr1C      [10] 5399 	ld	hl, #___str_100
   1C0E E5            [11] 5400 	push	hl
   1C0F CDr00r00      [17] 5401 	call	_printf
   1C12 F1            [10] 5402 	pop	af
   1C13 21r03r00      [10] 5403 	ld	hl,#_cc + 0
   1C16 36 47         [10] 5404 	ld	(hl), #0x47
   1C18 21rD2r1C      [10] 5405 	ld	hl, #___str_102
   1C1B E5            [11] 5406 	push	hl
   1C1C CDr00r00      [17] 5407 	call	_puts
   1C1F F1            [10] 5408 	pop	af
                           5409 ;src/msg.c:250: color(C_BUTN); printf("5. "); color(C_NORM); printf("Custom Amplitude Table\n\n");
   1C20 21r03r00      [10] 5410 	ld	hl,#_cc + 0
   1C23 36 44         [10] 5411 	ld	(hl), #0x44
   1C25 21rE7r1C      [10] 5412 	ld	hl, #___str_103
   1C28 E5            [11] 5413 	push	hl
   1C29 CDr00r00      [17] 5414 	call	_printf
   1C2C F1            [10] 5415 	pop	af
   1C2D 21r03r00      [10] 5416 	ld	hl,#_cc + 0
   1C30 36 47         [10] 5417 	ld	(hl), #0x47
   1C32 21rEBr1C      [10] 5418 	ld	hl, #___str_105
   1C35 E5            [11] 5419 	push	hl
   1C36 CDr00r00      [17] 5420 	call	_puts
   1C39 F1            [10] 5421 	pop	af
                           5422 ;src/msg.c:252: xy(defx, 20);
   1C3A 3Ar02r00      [13] 5423 	ld	a,(#_defx + 0)
   1C3D 32r00r00      [13] 5424 	ld	(#_cx + 0),a
   1C40 21r01r00      [10] 5425 	ld	hl,#_cy + 0
   1C43 36 14         [10] 5426 	ld	(hl), #0x14
                           5427 ;src/msg.c:253: color(C_BUTN); printf("S. "); color(C_NORM); printf("Save settings\n\n");
   1C45 21r03r00      [10] 5428 	ld	hl,#_cc + 0
   1C48 36 44         [10] 5429 	ld	(hl), #0x44
   1C4A 21r03r1D      [10] 5430 	ld	hl, #___str_106
   1C4D E5            [11] 5431 	push	hl
   1C4E CDr00r00      [17] 5432 	call	_printf
   1C51 F1            [10] 5433 	pop	af
   1C52 21r03r00      [10] 5434 	ld	hl,#_cc + 0
   1C55 36 47         [10] 5435 	ld	(hl), #0x47
   1C57 21r07r1D      [10] 5436 	ld	hl, #___str_108
   1C5A E5            [11] 5437 	push	hl
   1C5B CDr00r00      [17] 5438 	call	_puts
   1C5E F1            [10] 5439 	pop	af
                           5440 ;src/msg.c:254: color(C_BUTN); printf("Enter. "); color(C_NORM); printf("Exit to main menu");
   1C5F 21r03r00      [10] 5441 	ld	hl,#_cc + 0
   1C62 36 44         [10] 5442 	ld	(hl), #0x44
   1C64 21r16r1D      [10] 5443 	ld	hl, #___str_109
   1C67 E5            [11] 5444 	push	hl
   1C68 CDr00r00      [17] 5445 	call	_printf
   1C6B F1            [10] 5446 	pop	af
   1C6C 21r03r00      [10] 5447 	ld	hl,#_cc + 0
   1C6F 36 47         [10] 5448 	ld	(hl), #0x47
   1C71 21r1Er1D      [10] 5449 	ld	hl, #___str_110
   1C74 E5            [11] 5450 	push	hl
   1C75 CDr00r00      [17] 5451 	call	_printf
   1C78 F1            [10] 5452 	pop	af
                           5453 ;src/msg.c:255: }
   1C79 C9            [10] 5454 	ret
   1C7A                    5455 ___str_91:
   1C7A 50 53 47 20 61 6E  5456 	.ascii "PSG and WS Settings"
        64 20 57 53 20 53
        65 74 74 69 6E 67
        73
   1C8D 00                 5457 	.db 0x00
   1C8E                    5458 ___str_92:
   1C8E 31 2E 20           5459 	.ascii "1. "
   1C91 00                 5460 	.db 0x00
   1C92                    5461 ___str_93:
   1C92 43 6C 6F 63 6B 3A  5462 	.ascii "Clock: "
        20
   1C99 00                 5463 	.db 0x00
   1C9A                    5464 ___str_94:
   1C9A 25 73              5465 	.ascii "%s"
   1C9C 0A                 5466 	.db 0x0a
   1C9D 0A                 5467 	.db 0x0a
   1C9E 00                 5468 	.db 0x00
   1C9F                    5469 ___str_95:
   1C9F 32 2E 20           5470 	.ascii "2. "
   1CA2 00                 5471 	.db 0x00
   1CA3                    5472 ___str_96:
   1CA3 4D 75 6C 74 69 70  5473 	.ascii "Multiple PSG mode: "
        6C 65 20 50 53 47
        20 6D 6F 64 65 3A
        20
   1CB6 00                 5474 	.db 0x00
   1CB7                    5475 ___str_97:
   1CB7 33 2E 20           5476 	.ascii "3. "
   1CBA 00                 5477 	.db 0x00
   1CBB                    5478 ___str_99:
   1CBB 53 65 74 20 43 68  5479 	.ascii "Set Channel Mixer"
        61 6E 6E 65 6C 20
        4D 69 78 65 72
   1CCC 0A                 5480 	.db 0x0a
   1CCD 00                 5481 	.db 0x00
   1CCE                    5482 ___str_100:
   1CCE 34 2E 20           5483 	.ascii "4. "
   1CD1 00                 5484 	.db 0x00
   1CD2                    5485 ___str_102:
   1CD2 53 65 74 20 41 6D  5486 	.ascii "Set Amplitude Table"
        70 6C 69 74 75 64
        65 20 54 61 62 6C
        65
   1CE5 0A                 5487 	.db 0x0a
   1CE6 00                 5488 	.db 0x00
   1CE7                    5489 ___str_103:
   1CE7 35 2E 20           5490 	.ascii "5. "
   1CEA 00                 5491 	.db 0x00
   1CEB                    5492 ___str_105:
   1CEB 43 75 73 74 6F 6D  5493 	.ascii "Custom Amplitude Table"
        20 41 6D 70 6C 69
        74 75 64 65 20 54
        61 62 6C 65
   1D01 0A                 5494 	.db 0x0a
   1D02 00                 5495 	.db 0x00
   1D03                    5496 ___str_106:
   1D03 53 2E 20           5497 	.ascii "S. "
   1D06 00                 5498 	.db 0x00
   1D07                    5499 ___str_108:
   1D07 53 61 76 65 20 73  5500 	.ascii "Save settings"
        65 74 74 69 6E 67
        73
   1D14 0A                 5501 	.db 0x0a
   1D15 00                 5502 	.db 0x00
   1D16                    5503 ___str_109:
   1D16 45 6E 74 65 72 2E  5504 	.ascii "Enter. "
        20
   1D1D 00                 5505 	.db 0x00
   1D1E                    5506 ___str_110:
   1D1E 45 78 69 74 20 74  5507 	.ascii "Exit to main menu"
        6F 20 6D 61 69 6E
        20 6D 65 6E 75
   1D2F 00                 5508 	.db 0x00
                           5509 ;src/msg.c:257: void msg_mix()
                           5510 ;	---------------------------------
                           5511 ; Function msg_mix
                           5512 ; ---------------------------------
   1D30                    5513 _msg_mix::
                           5514 ;src/msg.c:261: cls();
   1D30 CDrB9r00      [17] 5515 	call	_cls
                           5516 ;src/msg.c:262: xy(90,1); color(C_HEAD); printf("Mixer Settings");
   1D33 21r00r00      [10] 5517 	ld	hl,#_cx + 0
   1D36 36 5A         [10] 5518 	ld	(hl), #0x5a
   1D38 21r01r00      [10] 5519 	ld	hl,#_cy + 0
   1D3B 36 01         [10] 5520 	ld	(hl), #0x01
   1D3D 21r03r00      [10] 5521 	ld	hl,#_cc + 0
   1D40 36 45         [10] 5522 	ld	(hl), #0x45
   1D42 21rBAr1E      [10] 5523 	ld	hl, #___str_111
   1D45 E5            [11] 5524 	push	hl
   1D46 CDr00r00      [17] 5525 	call	_printf
   1D49 F1            [10] 5526 	pop	af
                           5527 ;src/msg.c:263: defx = 16; xy(defx, 4);
   1D4A 21r02r00      [10] 5528 	ld	hl,#_defx + 0
   1D4D 36 10         [10] 5529 	ld	(hl), #0x10
   1D4F 21r00r00      [10] 5530 	ld	hl,#_cx + 0
   1D52 36 10         [10] 5531 	ld	(hl), #0x10
   1D54 21r01r00      [10] 5532 	ld	hl,#_cy + 0
   1D57 36 04         [10] 5533 	ld	(hl), #0x04
                           5534 ;src/msg.c:265: color(C_BUTN); printf("1. "); color(C_NORM); printf("Full stereo\n\n");
   1D59 21r03r00      [10] 5535 	ld	hl,#_cc + 0
   1D5C 36 44         [10] 5536 	ld	(hl), #0x44
   1D5E 21rC9r1E      [10] 5537 	ld	hl, #___str_112
   1D61 E5            [11] 5538 	push	hl
   1D62 CDr00r00      [17] 5539 	call	_printf
   1D65 F1            [10] 5540 	pop	af
   1D66 21r03r00      [10] 5541 	ld	hl,#_cc + 0
   1D69 36 47         [10] 5542 	ld	(hl), #0x47
   1D6B 21rCDr1E      [10] 5543 	ld	hl, #___str_114
   1D6E E5            [11] 5544 	push	hl
   1D6F CDr00r00      [17] 5545 	call	_puts
   1D72 F1            [10] 5546 	pop	af
                           5547 ;src/msg.c:266: color(C_BUTN); printf("2. "); color(C_NORM); printf("Half stereo\n\n");
   1D73 21r03r00      [10] 5548 	ld	hl,#_cc + 0
   1D76 36 44         [10] 5549 	ld	(hl), #0x44
   1D78 21rDAr1E      [10] 5550 	ld	hl, #___str_115
   1D7B E5            [11] 5551 	push	hl
   1D7C CDr00r00      [17] 5552 	call	_printf
   1D7F F1            [10] 5553 	pop	af
   1D80 21r03r00      [10] 5554 	ld	hl,#_cc + 0
   1D83 36 47         [10] 5555 	ld	(hl), #0x47
   1D85 21rDEr1E      [10] 5556 	ld	hl, #___str_117
   1D88 E5            [11] 5557 	push	hl
   1D89 CDr00r00      [17] 5558 	call	_puts
   1D8C F1            [10] 5559 	pop	af
                           5560 ;src/msg.c:267: color(C_BUTN); printf("3. "); color(C_NORM); printf("Mono\n\n\n");
   1D8D 21r03r00      [10] 5561 	ld	hl,#_cc + 0
   1D90 36 44         [10] 5562 	ld	(hl), #0x44
   1D92 21rEBr1E      [10] 5563 	ld	hl, #___str_118
   1D95 E5            [11] 5564 	push	hl
   1D96 CDr00r00      [17] 5565 	call	_printf
   1D99 F1            [10] 5566 	pop	af
   1D9A 21r03r00      [10] 5567 	ld	hl,#_cc + 0
   1D9D 36 47         [10] 5568 	ld	(hl), #0x47
   1D9F 21rEFr1E      [10] 5569 	ld	hl, #___str_120
   1DA2 E5            [11] 5570 	push	hl
   1DA3 CDr00r00      [17] 5571 	call	_puts
   1DA6 F1            [10] 5572 	pop	af
                           5573 ;src/msg.c:268: color(C_NORM); printf("Current settings:");
   1DA7 21r03r00      [10] 5574 	ld	hl,#_cc + 0
   1DAA 36 47         [10] 5575 	ld	(hl), #0x47
   1DAC 21rF6r1E      [10] 5576 	ld	hl, #___str_121
   1DAF E5            [11] 5577 	push	hl
   1DB0 CDr00r00      [17] 5578 	call	_printf
   1DB3 F1            [10] 5579 	pop	af
                           5580 ;src/msg.c:270: for (i = 0; i < 4; i++)
   1DB4 06 00         [ 7] 5581 	ld	b, #0x00
   1DB6                    5582 00102$:
                           5583 ;src/msg.c:272: u8 x = i * 54 + 28;
   1DB6 78            [ 4] 5584 	ld	a, b
   1DB7 5F            [ 4] 5585 	ld	e, a
   1DB8 87            [ 4] 5586 	add	a, a
   1DB9 83            [ 4] 5587 	add	a, e
   1DBA 87            [ 4] 5588 	add	a, a
   1DBB 87            [ 4] 5589 	add	a, a
   1DBC 83            [ 4] 5590 	add	a, e
   1DBD 87            [ 4] 5591 	add	a, a
   1DBE 83            [ 4] 5592 	add	a, e
   1DBF 87            [ 4] 5593 	add	a, a
   1DC0 C6 1C         [ 7] 5594 	add	a, #0x1c
   1DC2 4F            [ 4] 5595 	ld	c, a
                           5596 ;src/msg.c:273: xy(x, 13); color(C_NORM); printf("PSG %d:", i);
   1DC3 21r00r00      [10] 5597 	ld	hl,#_cx + 0
   1DC6 71            [ 7] 5598 	ld	(hl), c
   1DC7 21r01r00      [10] 5599 	ld	hl,#_cy + 0
   1DCA 36 0D         [10] 5600 	ld	(hl), #0x0d
   1DCC 21r03r00      [10] 5601 	ld	hl,#_cc + 0
   1DCF 36 47         [10] 5602 	ld	(hl), #0x47
   1DD1 58            [ 4] 5603 	ld	e, b
   1DD2 16 00         [ 7] 5604 	ld	d, #0x00
   1DD4 C5            [11] 5605 	push	bc
   1DD5 D5            [11] 5606 	push	de
   1DD6 21r08r1F      [10] 5607 	ld	hl, #___str_122
   1DD9 E5            [11] 5608 	push	hl
   1DDA CDr00r00      [17] 5609 	call	_printf
   1DDD F1            [10] 5610 	pop	af
   1DDE F1            [10] 5611 	pop	af
   1DDF C1            [10] 5612 	pop	bc
                           5613 ;src/msg.c:274: color(C_SEL);
   1DE0 21r03r00      [10] 5614 	ld	hl,#_cc + 0
   1DE3 36 46         [10] 5615 	ld	(hl), #0x46
                           5616 ;src/msg.c:275: wr_reg8(R_PSG_SEL, i);
   1DE5 C5            [11] 5617 	push	bc
   1DE6 C5            [11] 5618 	push	bc
   1DE7 33            [ 6] 5619 	inc	sp
   1DE8 3E D0         [ 7] 5620 	ld	a, #0xd0
   1DEA F5            [11] 5621 	push	af
   1DEB 33            [ 6] 5622 	inc	sp
   1DEC CDrB4r0B      [17] 5623 	call	_wr_reg8
   1DEF F1            [10] 5624 	pop	af
   1DF0 C1            [10] 5625 	pop	bc
                           5626 ;src/msg.c:276: xy(x, 14); printf("%d/%d  ", rd_reg8(R_PSG_VOL_AL), rd_reg8(R_PSG_VOL_AR));
   1DF1 21r00r00      [10] 5627 	ld	hl,#_cx + 0
   1DF4 71            [ 7] 5628 	ld	(hl), c
   1DF5 21r01r00      [10] 5629 	ld	hl,#_cy + 0
   1DF8 36 0E         [10] 5630 	ld	(hl), #0x0e
   1DFA C5            [11] 5631 	push	bc
   1DFB 3E 11         [ 7] 5632 	ld	a, #0x11
   1DFD F5            [11] 5633 	push	af
   1DFE 33            [ 6] 5634 	inc	sp
   1DFF CDr56r0D      [17] 5635 	call	_rd_reg8
   1E02 33            [ 6] 5636 	inc	sp
   1E03 C1            [10] 5637 	pop	bc
   1E04 26 00         [ 7] 5638 	ld	h, #0x00
   1E06 E5            [11] 5639 	push	hl
   1E07 C5            [11] 5640 	push	bc
   1E08 3E 10         [ 7] 5641 	ld	a, #0x10
   1E0A F5            [11] 5642 	push	af
   1E0B 33            [ 6] 5643 	inc	sp
   1E0C CDr56r0D      [17] 5644 	call	_rd_reg8
   1E0F 33            [ 6] 5645 	inc	sp
   1E10 5D            [ 4] 5646 	ld	e, l
   1E11 C1            [10] 5647 	pop	bc
   1E12 E1            [10] 5648 	pop	hl
   1E13 16 00         [ 7] 5649 	ld	d, #0x00
   1E15 C5            [11] 5650 	push	bc
   1E16 E5            [11] 5651 	push	hl
   1E17 D5            [11] 5652 	push	de
   1E18 21r10r1F      [10] 5653 	ld	hl, #___str_123
   1E1B E5            [11] 5654 	push	hl
   1E1C CDr00r00      [17] 5655 	call	_printf
   1E1F 21 06 00      [10] 5656 	ld	hl, #6
   1E22 39            [11] 5657 	add	hl, sp
   1E23 F9            [ 6] 5658 	ld	sp, hl
   1E24 C1            [10] 5659 	pop	bc
                           5660 ;src/msg.c:277: xy(x, 15); printf("%d/%d  ", rd_reg8(R_PSG_VOL_BL), rd_reg8(R_PSG_VOL_BR));
   1E25 21r00r00      [10] 5661 	ld	hl,#_cx + 0
   1E28 71            [ 7] 5662 	ld	(hl), c
   1E29 21r01r00      [10] 5663 	ld	hl,#_cy + 0
   1E2C 36 0F         [10] 5664 	ld	(hl), #0x0f
   1E2E C5            [11] 5665 	push	bc
   1E2F 3E 13         [ 7] 5666 	ld	a, #0x13
   1E31 F5            [11] 5667 	push	af
   1E32 33            [ 6] 5668 	inc	sp
   1E33 CDr56r0D      [17] 5669 	call	_rd_reg8
   1E36 33            [ 6] 5670 	inc	sp
   1E37 C1            [10] 5671 	pop	bc
   1E38 26 00         [ 7] 5672 	ld	h, #0x00
   1E3A E5            [11] 5673 	push	hl
   1E3B C5            [11] 5674 	push	bc
   1E3C 3E 12         [ 7] 5675 	ld	a, #0x12
   1E3E F5            [11] 5676 	push	af
   1E3F 33            [ 6] 5677 	inc	sp
   1E40 CDr56r0D      [17] 5678 	call	_rd_reg8
   1E43 33            [ 6] 5679 	inc	sp
   1E44 5D            [ 4] 5680 	ld	e, l
   1E45 C1            [10] 5681 	pop	bc
   1E46 E1            [10] 5682 	pop	hl
   1E47 16 00         [ 7] 5683 	ld	d, #0x00
   1E49 C5            [11] 5684 	push	bc
   1E4A E5            [11] 5685 	push	hl
   1E4B D5            [11] 5686 	push	de
   1E4C 21r10r1F      [10] 5687 	ld	hl, #___str_123
   1E4F E5            [11] 5688 	push	hl
   1E50 CDr00r00      [17] 5689 	call	_printf
   1E53 21 06 00      [10] 5690 	ld	hl, #6
   1E56 39            [11] 5691 	add	hl, sp
   1E57 F9            [ 6] 5692 	ld	sp, hl
   1E58 C1            [10] 5693 	pop	bc
                           5694 ;src/msg.c:278: xy(x, 16); printf("%d/%d  ", rd_reg8(R_PSG_VOL_CL), rd_reg8(R_PSG_VOL_CR));
   1E59 21r00r00      [10] 5695 	ld	hl,#_cx + 0
   1E5C 71            [ 7] 5696 	ld	(hl), c
   1E5D 21r01r00      [10] 5697 	ld	hl,#_cy + 0
   1E60 36 10         [10] 5698 	ld	(hl), #0x10
   1E62 C5            [11] 5699 	push	bc
   1E63 3E 15         [ 7] 5700 	ld	a, #0x15
   1E65 F5            [11] 5701 	push	af
   1E66 33            [ 6] 5702 	inc	sp
   1E67 CDr56r0D      [17] 5703 	call	_rd_reg8
   1E6A 33            [ 6] 5704 	inc	sp
   1E6B C1            [10] 5705 	pop	bc
   1E6C 26 00         [ 7] 5706 	ld	h, #0x00
   1E6E E5            [11] 5707 	push	hl
   1E6F C5            [11] 5708 	push	bc
   1E70 3E 14         [ 7] 5709 	ld	a, #0x14
   1E72 F5            [11] 5710 	push	af
   1E73 33            [ 6] 5711 	inc	sp
   1E74 CDr56r0D      [17] 5712 	call	_rd_reg8
   1E77 33            [ 6] 5713 	inc	sp
   1E78 5D            [ 4] 5714 	ld	e, l
   1E79 C1            [10] 5715 	pop	bc
   1E7A E1            [10] 5716 	pop	hl
   1E7B 16 00         [ 7] 5717 	ld	d, #0x00
   1E7D C5            [11] 5718 	push	bc
   1E7E E5            [11] 5719 	push	hl
   1E7F D5            [11] 5720 	push	de
   1E80 21r10r1F      [10] 5721 	ld	hl, #___str_123
   1E83 E5            [11] 5722 	push	hl
   1E84 CDr00r00      [17] 5723 	call	_printf
   1E87 21 06 00      [10] 5724 	ld	hl, #6
   1E8A 39            [11] 5725 	add	hl, sp
   1E8B F9            [ 6] 5726 	ld	sp, hl
   1E8C C1            [10] 5727 	pop	bc
                           5728 ;src/msg.c:270: for (i = 0; i < 4; i++)
   1E8D 04            [ 4] 5729 	inc	b
   1E8E 78            [ 4] 5730 	ld	a, b
   1E8F D6 04         [ 7] 5731 	sub	a, #0x04
   1E91 DArB6r1D      [10] 5732 	jp	C, 00102$
                           5733 ;src/msg.c:281: xy(defx, 22);
   1E94 3Ar02r00      [13] 5734 	ld	a,(#_defx + 0)
   1E97 32r00r00      [13] 5735 	ld	(#_cx + 0),a
   1E9A 21r01r00      [10] 5736 	ld	hl,#_cy + 0
   1E9D 36 16         [10] 5737 	ld	(hl), #0x16
                           5738 ;src/msg.c:282: color(C_BUTN); printf("Enter. "); color(C_NORM); printf("Back");
   1E9F 21r03r00      [10] 5739 	ld	hl,#_cc + 0
   1EA2 36 44         [10] 5740 	ld	(hl), #0x44
   1EA4 21r18r1F      [10] 5741 	ld	hl, #___str_124
   1EA7 E5            [11] 5742 	push	hl
   1EA8 CDr00r00      [17] 5743 	call	_printf
   1EAB F1            [10] 5744 	pop	af
   1EAC 21r03r00      [10] 5745 	ld	hl,#_cc + 0
   1EAF 36 47         [10] 5746 	ld	(hl), #0x47
   1EB1 21r20r1F      [10] 5747 	ld	hl, #___str_125
   1EB4 E5            [11] 5748 	push	hl
   1EB5 CDr00r00      [17] 5749 	call	_printf
   1EB8 F1            [10] 5750 	pop	af
                           5751 ;src/msg.c:283: }
   1EB9 C9            [10] 5752 	ret
   1EBA                    5753 ___str_111:
   1EBA 4D 69 78 65 72 20  5754 	.ascii "Mixer Settings"
        53 65 74 74 69 6E
        67 73
   1EC8 00                 5755 	.db 0x00
   1EC9                    5756 ___str_112:
   1EC9 31 2E 20           5757 	.ascii "1. "
   1ECC 00                 5758 	.db 0x00
   1ECD                    5759 ___str_114:
   1ECD 46 75 6C 6C 20 73  5760 	.ascii "Full stereo"
        74 65 72 65 6F
   1ED8 0A                 5761 	.db 0x0a
   1ED9 00                 5762 	.db 0x00
   1EDA                    5763 ___str_115:
   1EDA 32 2E 20           5764 	.ascii "2. "
   1EDD 00                 5765 	.db 0x00
   1EDE                    5766 ___str_117:
   1EDE 48 61 6C 66 20 73  5767 	.ascii "Half stereo"
        74 65 72 65 6F
   1EE9 0A                 5768 	.db 0x0a
   1EEA 00                 5769 	.db 0x00
   1EEB                    5770 ___str_118:
   1EEB 33 2E 20           5771 	.ascii "3. "
   1EEE 00                 5772 	.db 0x00
   1EEF                    5773 ___str_120:
   1EEF 4D 6F 6E 6F        5774 	.ascii "Mono"
   1EF3 0A                 5775 	.db 0x0a
   1EF4 0A                 5776 	.db 0x0a
   1EF5 00                 5777 	.db 0x00
   1EF6                    5778 ___str_121:
   1EF6 43 75 72 72 65 6E  5779 	.ascii "Current settings:"
        74 20 73 65 74 74
        69 6E 67 73 3A
   1F07 00                 5780 	.db 0x00
   1F08                    5781 ___str_122:
   1F08 50 53 47 20 25 64  5782 	.ascii "PSG %d:"
        3A
   1F0F 00                 5783 	.db 0x00
   1F10                    5784 ___str_123:
   1F10 25 64 2F 25 64 20  5785 	.ascii "%d/%d  "
        20
   1F17 00                 5786 	.db 0x00
   1F18                    5787 ___str_124:
   1F18 45 6E 74 65 72 2E  5788 	.ascii "Enter. "
        20
   1F1F 00                 5789 	.db 0x00
   1F20                    5790 ___str_125:
   1F20 42 61 63 6B        5791 	.ascii "Back"
   1F24 00                 5792 	.db 0x00
                           5793 ;src/msg.c:285: void msg_amp()
                           5794 ;	---------------------------------
                           5795 ; Function msg_amp
                           5796 ; ---------------------------------
   1F25                    5797 _msg_amp::
                           5798 ;src/msg.c:288: atb_sel.b = rd_reg8(R_PSG_ACTRL);
   1F25 3E D3         [ 7] 5799 	ld	a, #0xd3
   1F27 F5            [11] 5800 	push	af
   1F28 33            [ 6] 5801 	inc	sp
   1F29 CDr56r0D      [17] 5802 	call	_rd_reg8
   1F2C 33            [ 6] 5803 	inc	sp
   1F2D 7D            [ 4] 5804 	ld	a, l
   1F2E 32r08r00      [13] 5805 	ld	(#_atb_sel),a
                           5806 ;src/msg.c:290: cls();
   1F31 CDrB9r00      [17] 5807 	call	_cls
                           5808 ;src/msg.c:291: xy(90,1); color(C_HEAD); printf("AmpTab Settings");
   1F34 21r00r00      [10] 5809 	ld	hl,#_cx + 0
   1F37 36 5A         [10] 5810 	ld	(hl), #0x5a
   1F39 21r01r00      [10] 5811 	ld	hl,#_cy + 0
   1F3C 36 01         [10] 5812 	ld	(hl), #0x01
   1F3E 21r03r00      [10] 5813 	ld	hl,#_cc + 0
   1F41 36 45         [10] 5814 	ld	(hl), #0x45
   1F43 21r5Fr20      [10] 5815 	ld	hl, #___str_126
   1F46 E5            [11] 5816 	push	hl
   1F47 CDr00r00      [17] 5817 	call	_printf
   1F4A F1            [10] 5818 	pop	af
                           5819 ;src/msg.c:292: defx = 16; xy(defx, 4);
   1F4B 21r02r00      [10] 5820 	ld	hl,#_defx + 0
   1F4E 36 10         [10] 5821 	ld	(hl), #0x10
   1F50 21r00r00      [10] 5822 	ld	hl,#_cx + 0
   1F53 36 10         [10] 5823 	ld	(hl), #0x10
   1F55 21r01r00      [10] 5824 	ld	hl,#_cy + 0
   1F58 36 04         [10] 5825 	ld	(hl), #0x04
                           5826 ;src/msg.c:294: color(C_BUTN); printf("1. "); color(C_NORM); printf("%s\n\n", atab_sel_txt[0]);
   1F5A 21r03r00      [10] 5827 	ld	hl,#_cc + 0
   1F5D 36 44         [10] 5828 	ld	(hl), #0x44
   1F5F 21r6Fr20      [10] 5829 	ld	hl, #___str_127
   1F62 E5            [11] 5830 	push	hl
   1F63 CDr00r00      [17] 5831 	call	_printf
   1F66 F1            [10] 5832 	pop	af
   1F67 21r03r00      [10] 5833 	ld	hl,#_cc + 0
   1F6A 36 47         [10] 5834 	ld	(hl), #0x47
   1F6C ED 4BrF3r00   [20] 5835 	ld	bc, (#_atab_sel_txt + 0)
   1F70 C5            [11] 5836 	push	bc
   1F71 21r73r20      [10] 5837 	ld	hl, #___str_128
   1F74 E5            [11] 5838 	push	hl
   1F75 CDr00r00      [17] 5839 	call	_printf
   1F78 F1            [10] 5840 	pop	af
   1F79 F1            [10] 5841 	pop	af
                           5842 ;src/msg.c:295: color(C_BUTN); printf("2. "); color(C_NORM); printf("%s\n\n", atab_sel_txt[1]);
   1F7A 21r03r00      [10] 5843 	ld	hl,#_cc + 0
   1F7D 36 44         [10] 5844 	ld	(hl), #0x44
   1F7F 21r78r20      [10] 5845 	ld	hl, #___str_129
   1F82 E5            [11] 5846 	push	hl
   1F83 CDr00r00      [17] 5847 	call	_printf
   1F86 F1            [10] 5848 	pop	af
   1F87 21r03r00      [10] 5849 	ld	hl,#_cc + 0
   1F8A 36 47         [10] 5850 	ld	(hl), #0x47
   1F8C 2ArF5r00      [16] 5851 	ld	hl, (#_atab_sel_txt + 2)
   1F8F E5            [11] 5852 	push	hl
   1F90 21r73r20      [10] 5853 	ld	hl, #___str_128
   1F93 E5            [11] 5854 	push	hl
   1F94 CDr00r00      [17] 5855 	call	_printf
   1F97 F1            [10] 5856 	pop	af
   1F98 F1            [10] 5857 	pop	af
                           5858 ;src/msg.c:296: color(C_BUTN); printf("3. "); color(C_NORM); printf("%s\n\n", atab_sel_txt[2]);
   1F99 21r03r00      [10] 5859 	ld	hl,#_cc + 0
   1F9C 36 44         [10] 5860 	ld	(hl), #0x44
   1F9E 21r7Cr20      [10] 5861 	ld	hl, #___str_130
   1FA1 E5            [11] 5862 	push	hl
   1FA2 CDr00r00      [17] 5863 	call	_printf
   1FA5 F1            [10] 5864 	pop	af
   1FA6 21r03r00      [10] 5865 	ld	hl,#_cc + 0
   1FA9 36 47         [10] 5866 	ld	(hl), #0x47
   1FAB 2ArF7r00      [16] 5867 	ld	hl, (#_atab_sel_txt + 4)
   1FAE E5            [11] 5868 	push	hl
   1FAF 21r73r20      [10] 5869 	ld	hl, #___str_128
   1FB2 E5            [11] 5870 	push	hl
   1FB3 CDr00r00      [17] 5871 	call	_printf
   1FB6 F1            [10] 5872 	pop	af
   1FB7 F1            [10] 5873 	pop	af
                           5874 ;src/msg.c:297: color(C_BUTN); printf("4. "); color(C_NORM); printf("%s\n\n\n", atab_sel_txt[3]);
   1FB8 21r03r00      [10] 5875 	ld	hl,#_cc + 0
   1FBB 36 44         [10] 5876 	ld	(hl), #0x44
   1FBD 21r80r20      [10] 5877 	ld	hl, #___str_131
   1FC0 E5            [11] 5878 	push	hl
   1FC1 CDr00r00      [17] 5879 	call	_printf
   1FC4 F1            [10] 5880 	pop	af
   1FC5 21r03r00      [10] 5881 	ld	hl,#_cc + 0
   1FC8 36 47         [10] 5882 	ld	(hl), #0x47
   1FCA 2ArF9r00      [16] 5883 	ld	hl, (#_atab_sel_txt + 6)
   1FCD 01r84r20      [10] 5884 	ld	bc, #___str_132+0
   1FD0 E5            [11] 5885 	push	hl
   1FD1 C5            [11] 5886 	push	bc
   1FD2 CDr00r00      [17] 5887 	call	_printf
   1FD5 F1            [10] 5888 	pop	af
   1FD6 F1            [10] 5889 	pop	af
                           5890 ;src/msg.c:298: color(C_NORM); printf("Current settings:");
   1FD7 21r03r00      [10] 5891 	ld	hl,#_cc + 0
   1FDA 36 47         [10] 5892 	ld	(hl), #0x47
   1FDC 21r8Ar20      [10] 5893 	ld	hl, #___str_133
   1FDF E5            [11] 5894 	push	hl
   1FE0 CDr00r00      [17] 5895 	call	_printf
   1FE3 F1            [10] 5896 	pop	af
                           5897 ;src/msg.c:300: for (i = 0; i < 4; i++)
   1FE4 0E 00         [ 7] 5898 	ld	c, #0x00
   1FE6                    5899 00102$:
                           5900 ;src/msg.c:302: xy(defx, i + 15); color(C_NORM); printf("PSG %d: ", i);
   1FE6 3Ar02r00      [13] 5901 	ld	a,(#_defx + 0)
   1FE9 32r00r00      [13] 5902 	ld	(#_cx + 0),a
   1FEC 79            [ 4] 5903 	ld	a, c
   1FED C6 0F         [ 7] 5904 	add	a, #0x0f
   1FEF 32r01r00      [13] 5905 	ld	(#_cy + 0),a
   1FF2 21r03r00      [10] 5906 	ld	hl,#_cc + 0
   1FF5 36 47         [10] 5907 	ld	(hl), #0x47
   1FF7 59            [ 4] 5908 	ld	e, c
   1FF8 16 00         [ 7] 5909 	ld	d, #0x00
   1FFA C5            [11] 5910 	push	bc
   1FFB D5            [11] 5911 	push	de
   1FFC 21r9Cr20      [10] 5912 	ld	hl, #___str_134
   1FFF E5            [11] 5913 	push	hl
   2000 CDr00r00      [17] 5914 	call	_printf
   2003 F1            [10] 5915 	pop	af
   2004 F1            [10] 5916 	pop	af
   2005 C1            [10] 5917 	pop	bc
                           5918 ;src/msg.c:303: color(C_SEL); printf("%s", atab_sel_txt[(atb_sel.b >> (i * 2)) & 3]);
   2006 21r03r00      [10] 5919 	ld	hl,#_cc + 0
   2009 36 46         [10] 5920 	ld	(hl), #0x46
   200B 21r08r00      [10] 5921 	ld	hl, #_atb_sel + 0
   200E 5E            [ 7] 5922 	ld	e, (hl)
   200F 79            [ 4] 5923 	ld	a, c
   2010 87            [ 4] 5924 	add	a, a
   2011 3C            [ 4] 5925 	inc	a
   2012 18 02         [12] 5926 	jr	00118$
   2014                    5927 00117$:
   2014 CB 3B         [ 8] 5928 	srl	e
   2016                    5929 00118$:
   2016 3D            [ 4] 5930 	dec	a
   2017 20 FB         [12] 5931 	jr	NZ, 00117$
   2019 7B            [ 4] 5932 	ld	a, e
   201A E6 03         [ 7] 5933 	and	a, #0x03
   201C 6F            [ 4] 5934 	ld	l, a
   201D 26 00         [ 7] 5935 	ld	h, #0x00
   201F 29            [11] 5936 	add	hl, hl
   2020 11rF3r00      [10] 5937 	ld	de, #_atab_sel_txt
   2023 19            [11] 5938 	add	hl, de
   2024 5E            [ 7] 5939 	ld	e, (hl)
   2025 23            [ 6] 5940 	inc	hl
   2026 56            [ 7] 5941 	ld	d, (hl)
   2027 C5            [11] 5942 	push	bc
   2028 D5            [11] 5943 	push	de
   2029 21rA5r20      [10] 5944 	ld	hl, #___str_135
   202C E5            [11] 5945 	push	hl
   202D CDr00r00      [17] 5946 	call	_printf
   2030 F1            [10] 5947 	pop	af
   2031 F1            [10] 5948 	pop	af
   2032 C1            [10] 5949 	pop	bc
                           5950 ;src/msg.c:300: for (i = 0; i < 4; i++)
   2033 0C            [ 4] 5951 	inc	c
   2034 79            [ 4] 5952 	ld	a, c
   2035 D6 04         [ 7] 5953 	sub	a, #0x04
   2037 38 AD         [12] 5954 	jr	C,00102$
                           5955 ;src/msg.c:306: xy(defx, 22);
   2039 3Ar02r00      [13] 5956 	ld	a,(#_defx + 0)
   203C 32r00r00      [13] 5957 	ld	(#_cx + 0),a
   203F 21r01r00      [10] 5958 	ld	hl,#_cy + 0
   2042 36 16         [10] 5959 	ld	(hl), #0x16
                           5960 ;src/msg.c:307: color(C_BUTN); printf("Enter. "); color(C_NORM); printf("Back");
   2044 21r03r00      [10] 5961 	ld	hl,#_cc + 0
   2047 36 44         [10] 5962 	ld	(hl), #0x44
   2049 21rA8r20      [10] 5963 	ld	hl, #___str_136
   204C E5            [11] 5964 	push	hl
   204D CDr00r00      [17] 5965 	call	_printf
   2050 F1            [10] 5966 	pop	af
   2051 21r03r00      [10] 5967 	ld	hl,#_cc + 0
   2054 36 47         [10] 5968 	ld	(hl), #0x47
   2056 21rB0r20      [10] 5969 	ld	hl, #___str_137
   2059 E5            [11] 5970 	push	hl
   205A CDr00r00      [17] 5971 	call	_printf
   205D F1            [10] 5972 	pop	af
                           5973 ;src/msg.c:308: }
   205E C9            [10] 5974 	ret
   205F                    5975 ___str_126:
   205F 41 6D 70 54 61 62  5976 	.ascii "AmpTab Settings"
        20 53 65 74 74 69
        6E 67 73
   206E 00                 5977 	.db 0x00
   206F                    5978 ___str_127:
   206F 31 2E 20           5979 	.ascii "1. "
   2072 00                 5980 	.db 0x00
   2073                    5981 ___str_128:
   2073 25 73              5982 	.ascii "%s"
   2075 0A                 5983 	.db 0x0a
   2076 0A                 5984 	.db 0x0a
   2077 00                 5985 	.db 0x00
   2078                    5986 ___str_129:
   2078 32 2E 20           5987 	.ascii "2. "
   207B 00                 5988 	.db 0x00
   207C                    5989 ___str_130:
   207C 33 2E 20           5990 	.ascii "3. "
   207F 00                 5991 	.db 0x00
   2080                    5992 ___str_131:
   2080 34 2E 20           5993 	.ascii "4. "
   2083 00                 5994 	.db 0x00
   2084                    5995 ___str_132:
   2084 25 73              5996 	.ascii "%s"
   2086 0A                 5997 	.db 0x0a
   2087 0A                 5998 	.db 0x0a
   2088 0A                 5999 	.db 0x0a
   2089 00                 6000 	.db 0x00
   208A                    6001 ___str_133:
   208A 43 75 72 72 65 6E  6002 	.ascii "Current settings:"
        74 20 73 65 74 74
        69 6E 67 73 3A
   209B 00                 6003 	.db 0x00
   209C                    6004 ___str_134:
   209C 50 53 47 20 25 64  6005 	.ascii "PSG %d: "
        3A 20
   20A4 00                 6006 	.db 0x00
   20A5                    6007 ___str_135:
   20A5 25 73              6008 	.ascii "%s"
   20A7 00                 6009 	.db 0x00
   20A8                    6010 ___str_136:
   20A8 45 6E 74 65 72 2E  6011 	.ascii "Enter. "
        20
   20AF 00                 6012 	.db 0x00
   20B0                    6013 ___str_137:
   20B0 42 61 63 6B        6014 	.ascii "Back"
   20B4 00                 6015 	.db 0x00
                           6016 ;src/msg.c:310: void msg_cust_amp()
                           6017 ;	---------------------------------
                           6018 ; Function msg_cust_amp
                           6019 ; ---------------------------------
   20B5                    6020 _msg_cust_amp::
   20B5 DD E5         [15] 6021 	push	ix
   20B7 DD 21 00 00   [14] 6022 	ld	ix,#0
   20BB DD 39         [15] 6023 	add	ix,sp
   20BD 3B            [ 6] 6024 	dec	sp
                           6025 ;src/msg.c:314: cls();
   20BE CDrB9r00      [17] 6026 	call	_cls
                           6027 ;src/msg.c:315: xy(58, 1); color(C_HEAD); printf("Custom amplitude table");
   20C1 21r00r00      [10] 6028 	ld	hl,#_cx + 0
   20C4 36 3A         [10] 6029 	ld	(hl), #0x3a
   20C6 21r01r00      [10] 6030 	ld	hl,#_cy + 0
   20C9 36 01         [10] 6031 	ld	(hl), #0x01
   20CB 21r03r00      [10] 6032 	ld	hl,#_cc + 0
   20CE 36 45         [10] 6033 	ld	(hl), #0x45
   20D0 21r75r21      [10] 6034 	ld	hl, #___str_138
   20D3 E5            [11] 6035 	push	hl
   20D4 CDr00r00      [17] 6036 	call	_printf
                           6037 ;src/msg.c:317: rd_reg_arr(R_PSG_AMP_TAB, (u8*)c_amp, sizeof(c_amp));
   20D7 21 40 00      [10] 6038 	ld	hl, #0x0040
   20DA E3            [19] 6039 	ex	(sp),hl
   20DB 21r0Br00      [10] 6040 	ld	hl, #_c_amp
   20DE E5            [11] 6041 	push	hl
   20DF 3E D6         [ 7] 6042 	ld	a, #0xd6
   20E1 F5            [11] 6043 	push	af
   20E2 33            [ 6] 6044 	inc	sp
   20E3 CDr26r0E      [17] 6045 	call	_rd_reg_arr
   20E6 F1            [10] 6046 	pop	af
   20E7 F1            [10] 6047 	pop	af
   20E8 33            [ 6] 6048 	inc	sp
                           6049 ;src/msg.c:319: for (j = 0; j < 16; j++)
   20E9 0E 00         [ 7] 6050 	ld	c, #0x00
                           6051 ;src/msg.c:320: for (k = 0; k < 2; k++)
   20EB                    6052 00109$:
   20EB 06 00         [ 7] 6053 	ld	b, #0x00
   20ED                    6054 00103$:
                           6055 ;src/msg.c:322: i = k * 16 + j;
   20ED 68            [ 4] 6056 	ld	l, b
   20EE 7D            [ 4] 6057 	ld	a, l
   20EF 87            [ 4] 6058 	add	a, a
   20F0 87            [ 4] 6059 	add	a, a
   20F1 87            [ 4] 6060 	add	a, a
   20F2 87            [ 4] 6061 	add	a, a
   20F3 59            [ 4] 6062 	ld	e, c
   20F4 83            [ 4] 6063 	add	a, e
   20F5 DD 77 FF      [19] 6064 	ld	-1 (ix), a
                           6065 ;src/msg.c:323: xy((k * 100) + 40, j + 4);
   20F8 D5            [11] 6066 	push	de
   20F9 7D            [ 4] 6067 	ld	a, l
   20FA 5F            [ 4] 6068 	ld	e, a
   20FB 87            [ 4] 6069 	add	a, a
   20FC 83            [ 4] 6070 	add	a, e
   20FD 87            [ 4] 6071 	add	a, a
   20FE 87            [ 4] 6072 	add	a, a
   20FF 87            [ 4] 6073 	add	a, a
   2100 83            [ 4] 6074 	add	a, e
   2101 87            [ 4] 6075 	add	a, a
   2102 87            [ 4] 6076 	add	a, a
   2103 D1            [10] 6077 	pop	de
   2104 C6 28         [ 7] 6078 	add	a, #0x28
   2106 32r00r00      [13] 6079 	ld	(#_cx + 0),a
   2109 7B            [ 4] 6080 	ld	a, e
   210A C6 04         [ 7] 6081 	add	a, #0x04
   210C 32r01r00      [13] 6082 	ld	(#_cy + 0),a
                           6083 ;src/msg.c:324: color(C_NORM);
   210F 21r03r00      [10] 6084 	ld	hl,#_cc + 0
   2112 36 47         [10] 6085 	ld	(hl), #0x47
                           6086 ;src/msg.c:325: printf("%2u: ", i);
   2114 DD 5E FF      [19] 6087 	ld	e, -1 (ix)
   2117 16 00         [ 7] 6088 	ld	d, #0x00
   2119 C5            [11] 6089 	push	bc
   211A D5            [11] 6090 	push	de
   211B D5            [11] 6091 	push	de
   211C 21r8Cr21      [10] 6092 	ld	hl, #___str_139
   211F E5            [11] 6093 	push	hl
   2120 CDr00r00      [17] 6094 	call	_printf
   2123 F1            [10] 6095 	pop	af
   2124 F1            [10] 6096 	pop	af
   2125 D1            [10] 6097 	pop	de
   2126 C1            [10] 6098 	pop	bc
                           6099 ;src/msg.c:326: color(C_DATA);
   2127 21r03r00      [10] 6100 	ld	hl,#_cc + 0
   212A 36 46         [10] 6101 	ld	(hl), #0x46
                           6102 ;src/msg.c:327: printf("%P", c_amp[i++]);
   212C EB            [ 4] 6103 	ex	de,hl
   212D 29            [11] 6104 	add	hl, hl
   212E 11r0Br00      [10] 6105 	ld	de, #_c_amp
   2131 19            [11] 6106 	add	hl, de
   2132 5E            [ 7] 6107 	ld	e, (hl)
   2133 23            [ 6] 6108 	inc	hl
   2134 56            [ 7] 6109 	ld	d, (hl)
   2135 C5            [11] 6110 	push	bc
   2136 D5            [11] 6111 	push	de
   2137 21r92r21      [10] 6112 	ld	hl, #___str_140
   213A E5            [11] 6113 	push	hl
   213B CDr00r00      [17] 6114 	call	_printf
   213E F1            [10] 6115 	pop	af
   213F F1            [10] 6116 	pop	af
   2140 C1            [10] 6117 	pop	bc
                           6118 ;src/msg.c:320: for (k = 0; k < 2; k++)
   2141 04            [ 4] 6119 	inc	b
   2142 78            [ 4] 6120 	ld	a, b
   2143 D6 02         [ 7] 6121 	sub	a, #0x02
   2145 38 A6         [12] 6122 	jr	C,00103$
                           6123 ;src/msg.c:319: for (j = 0; j < 16; j++)
   2147 0C            [ 4] 6124 	inc	c
   2148 79            [ 4] 6125 	ld	a, c
   2149 D6 10         [ 7] 6126 	sub	a, #0x10
   214B 38 9E         [12] 6127 	jr	C,00109$
                           6128 ;src/msg.c:330: xy(16, 22);
   214D 21r00r00      [10] 6129 	ld	hl,#_cx + 0
   2150 36 10         [10] 6130 	ld	(hl), #0x10
   2152 21r01r00      [10] 6131 	ld	hl,#_cy + 0
   2155 36 16         [10] 6132 	ld	(hl), #0x16
                           6133 ;src/msg.c:331: color(C_BUTN); printf("Enter. "); color(C_NORM); printf("Back");
   2157 21r03r00      [10] 6134 	ld	hl,#_cc + 0
   215A 36 44         [10] 6135 	ld	(hl), #0x44
   215C 21r95r21      [10] 6136 	ld	hl, #___str_141
   215F E5            [11] 6137 	push	hl
   2160 CDr00r00      [17] 6138 	call	_printf
   2163 F1            [10] 6139 	pop	af
   2164 21r03r00      [10] 6140 	ld	hl,#_cc + 0
   2167 36 47         [10] 6141 	ld	(hl), #0x47
   2169 21r9Dr21      [10] 6142 	ld	hl, #___str_142
   216C E5            [11] 6143 	push	hl
   216D CDr00r00      [17] 6144 	call	_printf
   2170 F1            [10] 6145 	pop	af
                           6146 ;src/msg.c:332: }
   2171 33            [ 6] 6147 	inc	sp
   2172 DD E1         [14] 6148 	pop	ix
   2174 C9            [10] 6149 	ret
   2175                    6150 ___str_138:
   2175 43 75 73 74 6F 6D  6151 	.ascii "Custom amplitude table"
        20 61 6D 70 6C 69
        74 75 64 65 20 74
        61 62 6C 65
   218B 00                 6152 	.db 0x00
   218C                    6153 ___str_139:
   218C 25 32 75 3A 20     6154 	.ascii "%2u: "
   2191 00                 6155 	.db 0x00
   2192                    6156 ___str_140:
   2192 25 50              6157 	.ascii "%P"
   2194 00                 6158 	.db 0x00
   2195                    6159 ___str_141:
   2195 45 6E 74 65 72 2E  6160 	.ascii "Enter. "
        20
   219C 00                 6161 	.db 0x00
   219D                    6162 ___str_142:
   219D 42 61 63 6B        6163 	.ascii "Back"
   21A1 00                 6164 	.db 0x00
                           6165 ;src/msg.c:334: void msg_set_b()
                           6166 ;	---------------------------------
                           6167 ; Function msg_set_b
                           6168 ; ---------------------------------
   21A2                    6169 _msg_set_b::
                           6170 ;src/msg.c:336: bus_sel.psgmul++;
   21A2 01r09r00      [10] 6171 	ld	bc, #_bus_sel+0
   21A5 69            [ 4] 6172 	ld	l, c
   21A6 60            [ 4] 6173 	ld	h, b
   21A7 7E            [ 7] 6174 	ld	a, (hl)
   21A8 E6 07         [ 7] 6175 	and	a, #0x07
   21AA 3C            [ 4] 6176 	inc	a
   21AB E6 07         [ 7] 6177 	and	a, #0x07
   21AD 5F            [ 4] 6178 	ld	e, a
   21AE 7E            [ 7] 6179 	ld	a, (hl)
   21AF E6 F8         [ 7] 6180 	and	a, #0xf8
   21B1 B3            [ 4] 6181 	or	a, e
   21B2 77            [ 7] 6182 	ld	(hl), a
                           6183 ;src/msg.c:337: if ((bus_sel.psgmul == 5) || (bus_sel.psgmul == 6)) bus_sel.psgmul = 7;
   21B3 69            [ 4] 6184 	ld	l, c
   21B4 60            [ 4] 6185 	ld	h, b
   21B5 7E            [ 7] 6186 	ld	a, (hl)
   21B6 E6 07         [ 7] 6187 	and	a, #0x07
   21B8 D6 05         [ 7] 6188 	sub	a, #0x05
   21BA 28 09         [12] 6189 	jr	Z,00101$
   21BC 69            [ 4] 6190 	ld	l, c
   21BD 60            [ 4] 6191 	ld	h, b
   21BE 7E            [ 7] 6192 	ld	a, (hl)
   21BF E6 07         [ 7] 6193 	and	a, #0x07
   21C1 D6 06         [ 7] 6194 	sub	a, #0x06
   21C3 20 06         [12] 6195 	jr	NZ,00102$
   21C5                    6196 00101$:
   21C5 59            [ 4] 6197 	ld	e, c
   21C6 50            [ 4] 6198 	ld	d, b
   21C7 1A            [ 7] 6199 	ld	a, (de)
   21C8 F6 07         [ 7] 6200 	or	a, #0x07
   21CA 12            [ 7] 6201 	ld	(de),a
   21CB                    6202 00102$:
                           6203 ;src/msg.c:338: wr_reg8(R_PSG_BCTRL, bus_sel.b);
   21CB 0A            [ 7] 6204 	ld	a, (bc)
   21CC 57            [ 4] 6205 	ld	d,a
   21CD 1E D2         [ 7] 6206 	ld	e,#0xd2
   21CF D5            [11] 6207 	push	de
   21D0 CDrB4r0B      [17] 6208 	call	_wr_reg8
   21D3 F1            [10] 6209 	pop	af
                           6210 ;src/msg.c:339: }
   21D4 C9            [10] 6211 	ret
                           6212 ;src/msg.c:341: void msg_set_c()
                           6213 ;	---------------------------------
                           6214 ; Function msg_set_c
                           6215 ; ---------------------------------
   21D5                    6216 _msg_set_c::
                           6217 ;src/msg.c:343: clk_sel.clksel++;
   21D5 21r0Ar00      [10] 6218 	ld	hl, #_clk_sel
   21D8 7E            [ 7] 6219 	ld	a, (hl)
   21D9 E6 07         [ 7] 6220 	and	a, #0x07
   21DB 3C            [ 4] 6221 	inc	a
   21DC E6 07         [ 7] 6222 	and	a, #0x07
   21DE 4F            [ 4] 6223 	ld	c, a
   21DF 7E            [ 7] 6224 	ld	a, (hl)
   21E0 E6 F8         [ 7] 6225 	and	a, #0xf8
   21E2 B1            [ 4] 6226 	or	a, c
   21E3 77            [ 7] 6227 	ld	(hl), a
                           6228 ;src/msg.c:344: wr_reg8(R_PSG_CCTRL, clk_sel.b);
   21E4 3Ar0Ar00      [13] 6229 	ld	a, (#_clk_sel + 0)
   21E7 57            [ 4] 6230 	ld	d,a
   21E8 1E D1         [ 7] 6231 	ld	e,#0xd1
   21EA D5            [11] 6232 	push	de
   21EB CDrB4r0B      [17] 6233 	call	_wr_reg8
   21EE F1            [10] 6234 	pop	af
                           6235 ;src/msg.c:345: }
   21EF C9            [10] 6236 	ret
                           6237 ;src/msg.c:347: void msg_mix_1()
                           6238 ;	---------------------------------
                           6239 ; Function msg_mix_1
                           6240 ; ---------------------------------
   21F0                    6241 _msg_mix_1::
                           6242 ;src/msg.c:349: set_mix(0);
   21F0 AF            [ 4] 6243 	xor	a, a
   21F1 F5            [11] 6244 	push	af
   21F2 33            [ 6] 6245 	inc	sp
   21F3 CDr17r0F      [17] 6246 	call	_set_mix
   21F6 33            [ 6] 6247 	inc	sp
                           6248 ;src/msg.c:350: }
   21F7 C9            [10] 6249 	ret
                           6250 ;src/msg.c:352: void msg_mix_2()
                           6251 ;	---------------------------------
                           6252 ; Function msg_mix_2
                           6253 ; ---------------------------------
   21F8                    6254 _msg_mix_2::
                           6255 ;src/msg.c:354: set_mix(1);
   21F8 3E 01         [ 7] 6256 	ld	a, #0x01
   21FA F5            [11] 6257 	push	af
   21FB 33            [ 6] 6258 	inc	sp
   21FC CDr17r0F      [17] 6259 	call	_set_mix
   21FF 33            [ 6] 6260 	inc	sp
                           6261 ;src/msg.c:355: }
   2200 C9            [10] 6262 	ret
                           6263 ;src/msg.c:357: void msg_mix_3()
                           6264 ;	---------------------------------
                           6265 ; Function msg_mix_3
                           6266 ; ---------------------------------
   2201                    6267 _msg_mix_3::
                           6268 ;src/msg.c:359: set_mix(2);
   2201 3E 02         [ 7] 6269 	ld	a, #0x02
   2203 F5            [11] 6270 	push	af
   2204 33            [ 6] 6271 	inc	sp
   2205 CDr17r0F      [17] 6272 	call	_set_mix
   2208 33            [ 6] 6273 	inc	sp
                           6274 ;src/msg.c:360: }
   2209 C9            [10] 6275 	ret
                           6276 ;src/msg.c:362: void msg_amp_1()
                           6277 ;	---------------------------------
                           6278 ; Function msg_amp_1
                           6279 ; ---------------------------------
   220A                    6280 _msg_amp_1::
                           6281 ;src/msg.c:364: atb_sel.ampsel0 = atb_sel.ampsel1 = atb_sel.ampsel2 = atb_sel.ampsel3 = 0;
   220A 01r08r00      [10] 6282 	ld	bc, #_atb_sel+0
   220D 11r08r00      [10] 6283 	ld	de, #_atb_sel+0
   2210 21r08r00      [10] 6284 	ld	hl, #_atb_sel
   2213 7E            [ 7] 6285 	ld	a, (hl)
   2214 E6 3F         [ 7] 6286 	and	a, #0x3f
   2216 77            [ 7] 6287 	ld	(hl),a
   2217 07            [ 4] 6288 	rlca
   2218 07            [ 4] 6289 	rlca
   2219 E6 03         [ 7] 6290 	and	a, #0x03
   221B 07            [ 4] 6291 	rlca
   221C 07            [ 4] 6292 	rlca
   221D 07            [ 4] 6293 	rlca
   221E 07            [ 4] 6294 	rlca
   221F E6 30         [ 7] 6295 	and	a, #0x30
   2221 6F            [ 4] 6296 	ld	l, a
   2222 1A            [ 7] 6297 	ld	a, (de)
   2223 E6 CF         [ 7] 6298 	and	a, #0xcf
   2225 B5            [ 4] 6299 	or	a, l
   2226 12            [ 7] 6300 	ld	(de), a
   2227 EB            [ 4] 6301 	ex	de,hl
   2228 7E            [ 7] 6302 	ld	a, (hl)
   2229 07            [ 4] 6303 	rlca
   222A 07            [ 4] 6304 	rlca
   222B 07            [ 4] 6305 	rlca
   222C 07            [ 4] 6306 	rlca
   222D E6 03         [ 7] 6307 	and	a, #0x03
   222F 07            [ 4] 6308 	rlca
   2230 07            [ 4] 6309 	rlca
   2231 E6 0C         [ 7] 6310 	and	a, #0x0c
   2233 5F            [ 4] 6311 	ld	e, a
   2234 0A            [ 7] 6312 	ld	a, (bc)
   2235 E6 F3         [ 7] 6313 	and	a, #0xf3
   2237 B3            [ 4] 6314 	or	a, e
   2238 02            [ 7] 6315 	ld	(bc), a
   2239 69            [ 4] 6316 	ld	l, c
   223A 60            [ 4] 6317 	ld	h, b
   223B 7E            [ 7] 6318 	ld	a, (hl)
   223C 0F            [ 4] 6319 	rrca
   223D 0F            [ 4] 6320 	rrca
   223E E6 03         [ 7] 6321 	and	a, #0x03
   2240 21r08r00      [10] 6322 	ld	hl, #_atb_sel
   2243 E6 03         [ 7] 6323 	and	a, #0x03
   2245 4F            [ 4] 6324 	ld	c, a
   2246 7E            [ 7] 6325 	ld	a, (hl)
   2247 E6 FC         [ 7] 6326 	and	a, #0xfc
   2249 B1            [ 4] 6327 	or	a, c
   224A 77            [ 7] 6328 	ld	(hl), a
                           6329 ;src/msg.c:365: wr_reg8(R_PSG_ACTRL, atb_sel.b);
   224B 3Ar08r00      [13] 6330 	ld	a, (#_atb_sel + 0)
   224E 57            [ 4] 6331 	ld	d,a
   224F 1E D3         [ 7] 6332 	ld	e,#0xd3
   2251 D5            [11] 6333 	push	de
   2252 CDrB4r0B      [17] 6334 	call	_wr_reg8
   2255 F1            [10] 6335 	pop	af
                           6336 ;src/msg.c:366: }
   2256 C9            [10] 6337 	ret
                           6338 ;src/msg.c:368: void msg_amp_2()
                           6339 ;	---------------------------------
                           6340 ; Function msg_amp_2
                           6341 ; ---------------------------------
   2257                    6342 _msg_amp_2::
                           6343 ;src/msg.c:370: atb_sel.ampsel0 = atb_sel.ampsel1 = atb_sel.ampsel2 = atb_sel.ampsel3 = 1;
   2257 01r08r00      [10] 6344 	ld	bc, #_atb_sel+0
   225A 11r08r00      [10] 6345 	ld	de, #_atb_sel+0
   225D 21r08r00      [10] 6346 	ld	hl, #_atb_sel
   2260 7E            [ 7] 6347 	ld	a, (hl)
   2261 E6 3F         [ 7] 6348 	and	a, #0x3f
   2263 F6 40         [ 7] 6349 	or	a, #0x40
   2265 77            [ 7] 6350 	ld	(hl),a
   2266 07            [ 4] 6351 	rlca
   2267 07            [ 4] 6352 	rlca
   2268 E6 03         [ 7] 6353 	and	a, #0x03
   226A 07            [ 4] 6354 	rlca
   226B 07            [ 4] 6355 	rlca
   226C 07            [ 4] 6356 	rlca
   226D 07            [ 4] 6357 	rlca
   226E E6 30         [ 7] 6358 	and	a, #0x30
   2270 6F            [ 4] 6359 	ld	l, a
   2271 1A            [ 7] 6360 	ld	a, (de)
   2272 E6 CF         [ 7] 6361 	and	a, #0xcf
   2274 B5            [ 4] 6362 	or	a, l
   2275 12            [ 7] 6363 	ld	(de), a
   2276 EB            [ 4] 6364 	ex	de,hl
   2277 7E            [ 7] 6365 	ld	a, (hl)
   2278 07            [ 4] 6366 	rlca
   2279 07            [ 4] 6367 	rlca
   227A 07            [ 4] 6368 	rlca
   227B 07            [ 4] 6369 	rlca
   227C E6 03         [ 7] 6370 	and	a, #0x03
   227E 07            [ 4] 6371 	rlca
   227F 07            [ 4] 6372 	rlca
   2280 E6 0C         [ 7] 6373 	and	a, #0x0c
   2282 5F            [ 4] 6374 	ld	e, a
   2283 0A            [ 7] 6375 	ld	a, (bc)
   2284 E6 F3         [ 7] 6376 	and	a, #0xf3
   2286 B3            [ 4] 6377 	or	a, e
   2287 02            [ 7] 6378 	ld	(bc), a
   2288 69            [ 4] 6379 	ld	l, c
   2289 60            [ 4] 6380 	ld	h, b
   228A 7E            [ 7] 6381 	ld	a, (hl)
   228B 0F            [ 4] 6382 	rrca
   228C 0F            [ 4] 6383 	rrca
   228D E6 03         [ 7] 6384 	and	a, #0x03
   228F 21r08r00      [10] 6385 	ld	hl, #_atb_sel
   2292 E6 03         [ 7] 6386 	and	a, #0x03
   2294 4F            [ 4] 6387 	ld	c, a
   2295 7E            [ 7] 6388 	ld	a, (hl)
   2296 E6 FC         [ 7] 6389 	and	a, #0xfc
   2298 B1            [ 4] 6390 	or	a, c
   2299 77            [ 7] 6391 	ld	(hl), a
                           6392 ;src/msg.c:371: wr_reg8(R_PSG_ACTRL, atb_sel.b);
   229A 3Ar08r00      [13] 6393 	ld	a, (#_atb_sel + 0)
   229D 57            [ 4] 6394 	ld	d,a
   229E 1E D3         [ 7] 6395 	ld	e,#0xd3
   22A0 D5            [11] 6396 	push	de
   22A1 CDrB4r0B      [17] 6397 	call	_wr_reg8
   22A4 F1            [10] 6398 	pop	af
                           6399 ;src/msg.c:372: }
   22A5 C9            [10] 6400 	ret
                           6401 ;src/msg.c:374: void msg_amp_3()
                           6402 ;	---------------------------------
                           6403 ; Function msg_amp_3
                           6404 ; ---------------------------------
   22A6                    6405 _msg_amp_3::
                           6406 ;src/msg.c:376: atb_sel.ampsel0 = atb_sel.ampsel1 = atb_sel.ampsel2 = atb_sel.ampsel3 = 2;
   22A6 01r08r00      [10] 6407 	ld	bc, #_atb_sel+0
   22A9 11r08r00      [10] 6408 	ld	de, #_atb_sel+0
   22AC 21r08r00      [10] 6409 	ld	hl, #_atb_sel
   22AF 7E            [ 7] 6410 	ld	a, (hl)
   22B0 E6 3F         [ 7] 6411 	and	a, #0x3f
   22B2 F6 80         [ 7] 6412 	or	a, #0x80
   22B4 77            [ 7] 6413 	ld	(hl),a
   22B5 07            [ 4] 6414 	rlca
   22B6 07            [ 4] 6415 	rlca
   22B7 E6 03         [ 7] 6416 	and	a, #0x03
   22B9 07            [ 4] 6417 	rlca
   22BA 07            [ 4] 6418 	rlca
   22BB 07            [ 4] 6419 	rlca
   22BC 07            [ 4] 6420 	rlca
   22BD E6 30         [ 7] 6421 	and	a, #0x30
   22BF 6F            [ 4] 6422 	ld	l, a
   22C0 1A            [ 7] 6423 	ld	a, (de)
   22C1 E6 CF         [ 7] 6424 	and	a, #0xcf
   22C3 B5            [ 4] 6425 	or	a, l
   22C4 12            [ 7] 6426 	ld	(de), a
   22C5 EB            [ 4] 6427 	ex	de,hl
   22C6 7E            [ 7] 6428 	ld	a, (hl)
   22C7 07            [ 4] 6429 	rlca
   22C8 07            [ 4] 6430 	rlca
   22C9 07            [ 4] 6431 	rlca
   22CA 07            [ 4] 6432 	rlca
   22CB E6 03         [ 7] 6433 	and	a, #0x03
   22CD 07            [ 4] 6434 	rlca
   22CE 07            [ 4] 6435 	rlca
   22CF E6 0C         [ 7] 6436 	and	a, #0x0c
   22D1 5F            [ 4] 6437 	ld	e, a
   22D2 0A            [ 7] 6438 	ld	a, (bc)
   22D3 E6 F3         [ 7] 6439 	and	a, #0xf3
   22D5 B3            [ 4] 6440 	or	a, e
   22D6 02            [ 7] 6441 	ld	(bc), a
   22D7 69            [ 4] 6442 	ld	l, c
   22D8 60            [ 4] 6443 	ld	h, b
   22D9 7E            [ 7] 6444 	ld	a, (hl)
   22DA 0F            [ 4] 6445 	rrca
   22DB 0F            [ 4] 6446 	rrca
   22DC E6 03         [ 7] 6447 	and	a, #0x03
   22DE 21r08r00      [10] 6448 	ld	hl, #_atb_sel
   22E1 E6 03         [ 7] 6449 	and	a, #0x03
   22E3 4F            [ 4] 6450 	ld	c, a
   22E4 7E            [ 7] 6451 	ld	a, (hl)
   22E5 E6 FC         [ 7] 6452 	and	a, #0xfc
   22E7 B1            [ 4] 6453 	or	a, c
   22E8 77            [ 7] 6454 	ld	(hl), a
                           6455 ;src/msg.c:377: wr_reg8(R_PSG_ACTRL, atb_sel.b);
   22E9 3Ar08r00      [13] 6456 	ld	a, (#_atb_sel + 0)
   22EC 57            [ 4] 6457 	ld	d,a
   22ED 1E D3         [ 7] 6458 	ld	e,#0xd3
   22EF D5            [11] 6459 	push	de
   22F0 CDrB4r0B      [17] 6460 	call	_wr_reg8
   22F3 F1            [10] 6461 	pop	af
                           6462 ;src/msg.c:378: }
   22F4 C9            [10] 6463 	ret
                           6464 ;src/msg.c:380: void msg_amp_4()
                           6465 ;	---------------------------------
                           6466 ; Function msg_amp_4
                           6467 ; ---------------------------------
   22F5                    6468 _msg_amp_4::
                           6469 ;src/msg.c:382: atb_sel.ampsel0 = atb_sel.ampsel1 = atb_sel.ampsel2 = atb_sel.ampsel3 = 3;
   22F5 01r08r00      [10] 6470 	ld	bc, #_atb_sel+0
   22F8 11r08r00      [10] 6471 	ld	de, #_atb_sel+0
   22FB 21r08r00      [10] 6472 	ld	hl, #_atb_sel
   22FE 7E            [ 7] 6473 	ld	a, (hl)
   22FF F6 C0         [ 7] 6474 	or	a, #0xc0
   2301 77            [ 7] 6475 	ld	(hl),a
   2302 07            [ 4] 6476 	rlca
   2303 07            [ 4] 6477 	rlca
   2304 E6 03         [ 7] 6478 	and	a, #0x03
   2306 07            [ 4] 6479 	rlca
   2307 07            [ 4] 6480 	rlca
   2308 07            [ 4] 6481 	rlca
   2309 07            [ 4] 6482 	rlca
   230A E6 30         [ 7] 6483 	and	a, #0x30
   230C 6F            [ 4] 6484 	ld	l, a
   230D 1A            [ 7] 6485 	ld	a, (de)
   230E E6 CF         [ 7] 6486 	and	a, #0xcf
   2310 B5            [ 4] 6487 	or	a, l
   2311 12            [ 7] 6488 	ld	(de), a
   2312 EB            [ 4] 6489 	ex	de,hl
   2313 7E            [ 7] 6490 	ld	a, (hl)
   2314 07            [ 4] 6491 	rlca
   2315 07            [ 4] 6492 	rlca
   2316 07            [ 4] 6493 	rlca
   2317 07            [ 4] 6494 	rlca
   2318 E6 03         [ 7] 6495 	and	a, #0x03
   231A 07            [ 4] 6496 	rlca
   231B 07            [ 4] 6497 	rlca
   231C E6 0C         [ 7] 6498 	and	a, #0x0c
   231E 5F            [ 4] 6499 	ld	e, a
   231F 0A            [ 7] 6500 	ld	a, (bc)
   2320 E6 F3         [ 7] 6501 	and	a, #0xf3
   2322 B3            [ 4] 6502 	or	a, e
   2323 02            [ 7] 6503 	ld	(bc), a
   2324 69            [ 4] 6504 	ld	l, c
   2325 60            [ 4] 6505 	ld	h, b
   2326 7E            [ 7] 6506 	ld	a, (hl)
   2327 0F            [ 4] 6507 	rrca
   2328 0F            [ 4] 6508 	rrca
   2329 E6 03         [ 7] 6509 	and	a, #0x03
   232B 21r08r00      [10] 6510 	ld	hl, #_atb_sel
   232E E6 03         [ 7] 6511 	and	a, #0x03
   2330 4F            [ 4] 6512 	ld	c, a
   2331 7E            [ 7] 6513 	ld	a, (hl)
   2332 E6 FC         [ 7] 6514 	and	a, #0xfc
   2334 B1            [ 4] 6515 	or	a, c
   2335 77            [ 7] 6516 	ld	(hl), a
                           6517 ;src/msg.c:383: wr_reg8(R_PSG_ACTRL, atb_sel.b);
   2336 3Ar08r00      [13] 6518 	ld	a, (#_atb_sel + 0)
   2339 57            [ 4] 6519 	ld	d,a
   233A 1E D3         [ 7] 6520 	ld	e,#0xd3
   233C D5            [11] 6521 	push	de
   233D CDrB4r0B      [17] 6522 	call	_wr_reg8
   2340 F1            [10] 6523 	pop	af
                           6524 ;src/msg.c:384: }
   2341 C9            [10] 6525 	ret
                           6526 ;src/msg.c:387: void msg_dac1()
                           6527 ;	---------------------------------
                           6528 ; Function msg_dac1
                           6529 ; ---------------------------------
   2342                    6530 _msg_dac1::
                           6531 ;src/msg.c:393: wr_reg8(R_DAC_VOL_L, 128 - v);
   2342 21r4Br00      [10] 6532 	ld	hl,#_msg_dac1_v_65536_142 + 0
   2345 4E            [ 7] 6533 	ld	c, (hl)
   2346 3E 80         [ 7] 6534 	ld	a, #0x80
   2348 91            [ 4] 6535 	sub	a, c
   2349 57            [ 4] 6536 	ld	d,a
   234A 1E 41         [ 7] 6537 	ld	e,#0x41
   234C D5            [11] 6538 	push	de
   234D CDrB4r0B      [17] 6539 	call	_wr_reg8
   2350 F1            [10] 6540 	pop	af
                           6541 ;src/msg.c:394: wr_reg8(R_DAC_VOL_R, v);
   2351 3Ar4Br00      [13] 6542 	ld	a, (_msg_dac1_v_65536_142)
   2354 57            [ 4] 6543 	ld	d,a
   2355 1E 42         [ 7] 6544 	ld	e,#0x42
   2357 D5            [11] 6545 	push	de
   2358 CDrB4r0B      [17] 6546 	call	_wr_reg8
   235B F1            [10] 6547 	pop	af
                           6548 ;src/msg.c:396: while (n--)
   235C 0E 0A         [ 7] 6549 	ld	c, #0x0a
   235E                    6550 00101$:
   235E 79            [ 4] 6551 	ld	a, c
   235F 0D            [ 4] 6552 	dec	c
   2360 B7            [ 4] 6553 	or	a, a
   2361 28 11         [12] 6554 	jr	Z,00103$
                           6555 ;src/msg.c:397: play_wav((u8*)wav, sizeof(wav));
   2363 C5            [11] 6556 	push	bc
   2364 21 64 00      [10] 6557 	ld	hl, #0x0064
   2367 E5            [11] 6558 	push	hl
   2368 21r1Dr09      [10] 6559 	ld	hl, #_wav
   236B E5            [11] 6560 	push	hl
   236C CDrD8r0F      [17] 6561 	call	_play_wav
   236F F1            [10] 6562 	pop	af
   2370 F1            [10] 6563 	pop	af
   2371 C1            [10] 6564 	pop	bc
   2372 18 EA         [12] 6565 	jr	00101$
   2374                    6566 00103$:
                           6567 ;src/msg.c:399: if (!d)
   2374 3Ar4Cr00      [13] 6568 	ld	a,(#_msg_dac1_d_65536_142 + 0)
   2377 B7            [ 4] 6569 	or	a, a
   2378 20 1D         [12] 6570 	jr	NZ,00109$
                           6571 ;src/msg.c:401: v++;
   237A FD 21r4Br00   [14] 6572 	ld	iy, #_msg_dac1_v_65536_142
   237E FD 34 00      [23] 6573 	inc	0 (iy)
                           6574 ;src/msg.c:402: if (v == 128) d = !d;
   2381 FD 7E 00      [19] 6575 	ld	a, 0 (iy)
   2384 D6 80         [ 7] 6576 	sub	a, #0x80
   2386 C0            [11] 6577 	ret	NZ
   2387 FD 21r4Cr00   [14] 6578 	ld	iy, #_msg_dac1_d_65536_142
   238B FD 7E 00      [19] 6579 	ld	a, 0 (iy)
   238E D6 01         [ 7] 6580 	sub	a,#0x01
   2390 3E 00         [ 7] 6581 	ld	a, #0x00
   2392 17            [ 4] 6582 	rla
   2393 FD 77 00      [19] 6583 	ld	0 (iy), a
   2396 C9            [10] 6584 	ret
   2397                    6585 00109$:
                           6586 ;src/msg.c:406: v--;
   2397 FD 21r4Br00   [14] 6587 	ld	iy, #_msg_dac1_v_65536_142
   239B FD 35 00      [23] 6588 	dec	0 (iy)
                           6589 ;src/msg.c:407: if (v == 0) d = !d;
   239E FD 7E 00      [19] 6590 	ld	a, 0 (iy)
   23A1 B7            [ 4] 6591 	or	a, a
   23A2 C0            [11] 6592 	ret	NZ
   23A3 FD 21r4Cr00   [14] 6593 	ld	iy, #_msg_dac1_d_65536_142
   23A7 FD 7E 00      [19] 6594 	ld	a, 0 (iy)
   23AA D6 01         [ 7] 6595 	sub	a,#0x01
   23AC 3E 00         [ 7] 6596 	ld	a, #0x00
   23AE 17            [ 4] 6597 	rla
   23AF FD 77 00      [19] 6598 	ld	0 (iy), a
                           6599 ;src/msg.c:409: }
   23B2 C9            [10] 6600 	ret
                           6601 ;src/msg.c:411: void msg_dac()
                           6602 ;	---------------------------------
                           6603 ; Function msg_dac
                           6604 ; ---------------------------------
   23B3                    6605 _msg_dac::
                           6606 ;src/msg.c:414: cls();
   23B3 CDrB9r00      [17] 6607 	call	_cls
                           6608 ;src/msg.c:415: xy(104, 1); color(C_HEAD); printf("DAC test");
   23B6 21r00r00      [10] 6609 	ld	hl,#_cx + 0
   23B9 36 68         [10] 6610 	ld	(hl), #0x68
   23BB 21r01r00      [10] 6611 	ld	hl,#_cy + 0
   23BE 36 01         [10] 6612 	ld	(hl), #0x01
   23C0 21r03r00      [10] 6613 	ld	hl,#_cc + 0
   23C3 36 45         [10] 6614 	ld	(hl), #0x45
   23C5 21rDAr23      [10] 6615 	ld	hl, #___str_143
   23C8 E5            [11] 6616 	push	hl
   23C9 CDr00r00      [17] 6617 	call	_printf
   23CC F1            [10] 6618 	pop	af
                           6619 ;src/msg.c:417: task = msg_dac1;
   23CD FD 21r06r00   [14] 6620 	ld	iy, #_task
   23D1 FD 36 00r42   [19] 6621 	ld	0 (iy), #<(_msg_dac1)
   23D5 FD 36 01s23   [19] 6622 	ld	1 (iy), #>(_msg_dac1)
                           6623 ;src/msg.c:418: }
   23D9 C9            [10] 6624 	ret
   23DA                    6625 ___str_143:
   23DA 44 41 43 20 74 65  6626 	.ascii "DAC test"
        73 74
   23E2 00                 6627 	.db 0x00
                           6628 ;src/menu.c:2: void menu_disp()
                           6629 ;	---------------------------------
                           6630 ; Function menu_disp
                           6631 ; ---------------------------------
   23E3                    6632 _menu_disp::
                           6633 ;src/menu.c:4: switch (menu)
   23E3 3E 15         [ 7] 6634 	ld	a, #0x15
   23E5 FD 21r04r00   [14] 6635 	ld	iy, #_menu
   23E9 FD 96 00      [19] 6636 	sub	a, 0 (iy)
   23EC D8            [11] 6637 	ret	C
   23ED FD 4E 00      [19] 6638 	ld	c, 0 (iy)
   23F0 06 00         [ 7] 6639 	ld	b, #0x00
   23F2 21rF9r23      [10] 6640 	ld	hl, #00131$
   23F5 09            [11] 6641 	add	hl, bc
   23F6 09            [11] 6642 	add	hl, bc
   23F7 09            [11] 6643 	add	hl, bc
   23F8 E9            [ 4] 6644 	jp	(hl)
   23F9                    6645 00131$:
   23F9 C3r72r10      [10] 6646 	jp	_msg_main
   23FC C3r7Ar18      [10] 6647 	jp	_msg_info
   23FF C3r2Dr1B      [10] 6648 	jp	_msg_set
   2402 C3rA2r21      [10] 6649 	jp	_msg_set_b
   2405 C3rD5r21      [10] 6650 	jp	_msg_set_c
   2408 C3r30r1D      [10] 6651 	jp	_msg_mix
   240B C3rF0r21      [10] 6652 	jp	_msg_mix_1
   240E C3rF8r21      [10] 6653 	jp	_msg_mix_2
   2411 C3r01r22      [10] 6654 	jp	_msg_mix_3
   2414 C3r25r1F      [10] 6655 	jp	_msg_amp
   2417 C3r0Ar22      [10] 6656 	jp	_msg_amp_1
   241A C3r57r22      [10] 6657 	jp	_msg_amp_2
   241D C3rA6r22      [10] 6658 	jp	_msg_amp_3
   2420 C3rF5r22      [10] 6659 	jp	_msg_amp_4
   2423 C3rB5r20      [10] 6660 	jp	_msg_cust_amp
   2426 C3rB3r23      [10] 6661 	jp	_msg_dac
   2429 C3r07r12      [10] 6662 	jp	_msg_res
   242C C3r57r12      [10] 6663 	jp	_msg_boot
   242F C3rE8r12      [10] 6664 	jp	_msg_save
   2432 C3r75r13      [10] 6665 	jp	_msg_save1
   2435 C3r09r14      [10] 6666 	jp	_msg_fupd
   2438 C3rACr14      [10] 6667 	jp	_msg_fupd1
                           6668 ;src/menu.c:6: case M_MAIN: msg_main(); break;
   243B C3r72r10      [10] 6669 	jp  _msg_main
                           6670 ;src/menu.c:7: case M_INFO: msg_info(); break;
   243E C3r7Ar18      [10] 6671 	jp  _msg_info
                           6672 ;src/menu.c:8: case M_SET: msg_set(); break;
   2441 C3r2Dr1B      [10] 6673 	jp  _msg_set
                           6674 ;src/menu.c:9: case M_SET_B: msg_set_b(); break;
   2444 C3rA2r21      [10] 6675 	jp  _msg_set_b
                           6676 ;src/menu.c:10: case M_SET_C: msg_set_c(); break;
   2447 C3rD5r21      [10] 6677 	jp  _msg_set_c
                           6678 ;src/menu.c:11: case M_MIX: msg_mix(); break;
   244A C3r30r1D      [10] 6679 	jp  _msg_mix
                           6680 ;src/menu.c:12: case M_MIX_1: msg_mix_1(); break;
   244D C3rF0r21      [10] 6681 	jp  _msg_mix_1
                           6682 ;src/menu.c:13: case M_MIX_2: msg_mix_2(); break;
   2450 C3rF8r21      [10] 6683 	jp  _msg_mix_2
                           6684 ;src/menu.c:14: case M_MIX_3: msg_mix_3(); break;
   2453 C3r01r22      [10] 6685 	jp  _msg_mix_3
                           6686 ;src/menu.c:15: case M_AMP: msg_amp(); break;
   2456 C3r25r1F      [10] 6687 	jp  _msg_amp
                           6688 ;src/menu.c:16: case M_AMP_1: msg_amp_1(); break;
   2459 C3r0Ar22      [10] 6689 	jp  _msg_amp_1
                           6690 ;src/menu.c:17: case M_AMP_2: msg_amp_2(); break;
   245C C3r57r22      [10] 6691 	jp  _msg_amp_2
                           6692 ;src/menu.c:18: case M_AMP_3: msg_amp_3(); break;
   245F C3rA6r22      [10] 6693 	jp  _msg_amp_3
                           6694 ;src/menu.c:19: case M_AMP_4: msg_amp_4(); break;
   2462 C3rF5r22      [10] 6695 	jp  _msg_amp_4
                           6696 ;src/menu.c:20: case M_CUST_AMP: msg_cust_amp(); break;
   2465 C3rB5r20      [10] 6697 	jp  _msg_cust_amp
                           6698 ;src/menu.c:21: case M_DAC: msg_dac(); break;
   2468 C3rB3r23      [10] 6699 	jp  _msg_dac
                           6700 ;src/menu.c:22: case M_RES: msg_res(); break;
   246B C3r07r12      [10] 6701 	jp  _msg_res
                           6702 ;src/menu.c:23: case M_BOOT: msg_boot(); break;
   246E C3r57r12      [10] 6703 	jp  _msg_boot
                           6704 ;src/menu.c:24: case M_SAVE: msg_save(); break;
   2471 C3rE8r12      [10] 6705 	jp  _msg_save
                           6706 ;src/menu.c:25: case M_SAVE1: msg_save1(); break;
   2474 C3r75r13      [10] 6707 	jp  _msg_save1
                           6708 ;src/menu.c:26: case M_FUPD: msg_fupd(); break;
   2477 C3r09r14      [10] 6709 	jp  _msg_fupd
                           6710 ;src/menu.c:27: case M_FUPD1: msg_fupd1(); break;
                           6711 ;src/menu.c:28: }
                           6712 ;src/menu.c:29: }
   247A C3rACr14      [10] 6713 	jp  _msg_fupd1
                           6714 ;src/menu.c:31: bool key_disp()
                           6715 ;	---------------------------------
                           6716 ; Function key_disp
                           6717 ; ---------------------------------
   247D                    6718 _key_disp::
                           6719 ;src/menu.c:33: bool rc = false;
   247D 0E 00         [ 7] 6720 	ld	c, #0x00
                           6721 ;src/menu.c:34: u8 key = getkey();
   247F C5            [11] 6722 	push	bc
   2480 CDr03r0F      [17] 6723 	call	_getkey
   2483 C1            [10] 6724 	pop	bc
   2484 45            [ 4] 6725 	ld	b, l
                           6726 ;src/menu.c:36: if (req_unpress)
   2485 FD 21r05r00   [14] 6727 	ld	iy, #_req_unpress
   2489 FD 7E 00      [19] 6728 	ld	a, 0 (iy)
   248C B7            [ 4] 6729 	or	a, a
   248D 28 0D         [12] 6730 	jr	Z,00158$
                           6731 ;src/menu.c:38: if (key == K_NONE)
   248F 78            [ 4] 6732 	ld	a, b
   2490 D6 28         [ 7] 6733 	sub	a, #0x28
   2492 C2rA7r26      [10] 6734 	jp	NZ,00159$
                           6735 ;src/menu.c:39: req_unpress = false;
   2495 FD 36 00 00   [19] 6736 	ld	0 (iy), #0x00
   2499 C3rA7r26      [10] 6737 	jp	00159$
   249C                    6738 00158$:
                           6739 ;src/menu.c:41: else switch (menu)
   249C 3E 14         [ 7] 6740 	ld	a, #0x14
   249E FD 21r04r00   [14] 6741 	ld	iy, #_menu
   24A2 FD 96 00      [19] 6742 	sub	a, 0 (iy)
   24A5 DAr9Br26      [10] 6743 	jp	C, 00153$
   24A8 FD 5E 00      [19] 6744 	ld	e, 0 (iy)
   24AB 16 00         [ 7] 6745 	ld	d, #0x00
   24AD 21rB4r24      [10] 6746 	ld	hl, #00319$
   24B0 19            [11] 6747 	add	hl, de
   24B1 19            [11] 6748 	add	hl, de
   24B2 19            [11] 6749 	add	hl, de
   24B3 E9            [ 4] 6750 	jp	(hl)
   24B4                    6751 00319$:
   24B4 C3rF3r24      [10] 6752 	jp	00103$
   24B7 C3r9Br26      [10] 6753 	jp	00153$
   24BA C3r4Br25      [10] 6754 	jp	00111$
   24BD C3rB1r25      [10] 6755 	jp	00121$
   24C0 C3rB1r25      [10] 6756 	jp	00121$
   24C3 C3rBBr25      [10] 6757 	jp	00122$
   24C6 C3r41r26      [10] 6758 	jp	00137$
   24C9 C3r41r26      [10] 6759 	jp	00137$
   24CC C3r41r26      [10] 6760 	jp	00137$
   24CF C3rF7r25      [10] 6761 	jp	00128$
   24D2 C3r4Ar26      [10] 6762 	jp	00141$
   24D5 C3r4Ar26      [10] 6763 	jp	00141$
   24D8 C3r4Ar26      [10] 6764 	jp	00141$
   24DB C3r4Ar26      [10] 6765 	jp	00141$
   24DE C3r53r26      [10] 6766 	jp	00142$
   24E1 C3r9Br26      [10] 6767 	jp	00153$
   24E4 C3r9Br26      [10] 6768 	jp	00153$
   24E7 C3r9Br26      [10] 6769 	jp	00153$
   24EA C3r61r26      [10] 6770 	jp	00145$
   24ED C3r9Br26      [10] 6771 	jp	00153$
   24F0 C3r7Er26      [10] 6772 	jp	00149$
                           6773 ;src/menu.c:43: case M_MAIN:
   24F3                    6774 00103$:
                           6775 ;src/menu.c:44: switch(key)
   24F3 78            [ 4] 6776 	ld	a,b
   24F4 FE 0D         [ 7] 6777 	cp	a,#0x0d
   24F6 28 3F         [12] 6778 	jr	Z,00108$
   24F8 FE 0F         [ 7] 6779 	cp	a,#0x0f
   24FA 28 13         [12] 6780 	jr	Z,00104$
   24FC FE 10         [ 7] 6781 	cp	a,#0x10
   24FE 28 19         [12] 6782 	jr	Z,00105$
   2500 FE 11         [ 7] 6783 	cp	a,#0x11
   2502 28 1F         [12] 6784 	jr	Z,00106$
   2504 FE 1C         [ 7] 6785 	cp	a,#0x1c
   2506 28 25         [12] 6786 	jr	Z,00107$
   2508 D6 27         [ 7] 6787 	sub	a, #0x27
   250A 28 35         [12] 6788 	jr	Z,00109$
   250C C3rA7r26      [10] 6789 	jp	00159$
                           6790 ;src/menu.c:46: case K_1: menu = M_INFO; rc = true; break;
   250F                    6791 00104$:
   250F 21r04r00      [10] 6792 	ld	hl,#_menu + 0
   2512 36 01         [10] 6793 	ld	(hl), #0x01
   2514 0E 01         [ 7] 6794 	ld	c, #0x01
   2516 C3rA7r26      [10] 6795 	jp	00159$
                           6796 ;src/menu.c:47: case K_2: menu = M_SET; rc = true; break;
   2519                    6797 00105$:
   2519 21r04r00      [10] 6798 	ld	hl,#_menu + 0
   251C 36 02         [10] 6799 	ld	(hl), #0x02
   251E 0E 01         [ 7] 6800 	ld	c, #0x01
   2520 C3rA7r26      [10] 6801 	jp	00159$
                           6802 ;src/menu.c:48: case K_3: menu = M_DAC; rc = true; break;
   2523                    6803 00106$:
   2523 21r04r00      [10] 6804 	ld	hl,#_menu + 0
   2526 36 0F         [10] 6805 	ld	(hl), #0x0f
   2528 0E 01         [ 7] 6806 	ld	c, #0x01
   252A C3rA7r26      [10] 6807 	jp	00159$
                           6808 ;src/menu.c:49: case K_U: menu = M_FUPD; rc = true; break;
   252D                    6809 00107$:
   252D 21r04r00      [10] 6810 	ld	hl,#_menu + 0
   2530 36 14         [10] 6811 	ld	(hl), #0x14
   2532 0E 01         [ 7] 6812 	ld	c, #0x01
   2534 C3rA7r26      [10] 6813 	jp	00159$
                           6814 ;src/menu.c:50: case K_R: menu = M_RES; rc = true; break;
   2537                    6815 00108$:
   2537 21r04r00      [10] 6816 	ld	hl,#_menu + 0
   253A 36 10         [10] 6817 	ld	(hl), #0x10
   253C 0E 01         [ 7] 6818 	ld	c, #0x01
   253E C3rA7r26      [10] 6819 	jp	00159$
                           6820 ;src/menu.c:51: case K_B: menu = M_BOOT; rc = true; break;
   2541                    6821 00109$:
   2541 21r04r00      [10] 6822 	ld	hl,#_menu + 0
   2544 36 11         [10] 6823 	ld	(hl), #0x11
   2546 0E 01         [ 7] 6824 	ld	c, #0x01
                           6825 ;src/menu.c:53: break;
   2548 C3rA7r26      [10] 6826 	jp	00159$
                           6827 ;src/menu.c:55: case M_SET:
   254B                    6828 00111$:
                           6829 ;src/menu.c:56: switch(key)
   254B 78            [ 4] 6830 	ld	a,b
   254C FE 06         [ 7] 6831 	cp	a,#0x06
   254E 28 57         [12] 6832 	jr	Z,00118$
   2550 FE 0F         [ 7] 6833 	cp	a,#0x0f
   2552 28 17         [12] 6834 	jr	Z,00112$
   2554 FE 10         [ 7] 6835 	cp	a,#0x10
   2556 28 1D         [12] 6836 	jr	Z,00113$
   2558 FE 11         [ 7] 6837 	cp	a,#0x11
   255A 28 23         [12] 6838 	jr	Z,00114$
   255C FE 12         [ 7] 6839 	cp	a,#0x12
   255E 28 29         [12] 6840 	jr	Z,00115$
   2560 FE 13         [ 7] 6841 	cp	a,#0x13
   2562 28 2F         [12] 6842 	jr	Z,00116$
   2564 D6 1E         [ 7] 6843 	sub	a, #0x1e
   2566 28 35         [12] 6844 	jr	Z,00117$
   2568 C3rA7r26      [10] 6845 	jp	00159$
                           6846 ;src/menu.c:58: case K_1: menu = M_SET_C; rc = true; break;
   256B                    6847 00112$:
   256B 21r04r00      [10] 6848 	ld	hl,#_menu + 0
   256E 36 04         [10] 6849 	ld	(hl), #0x04
   2570 0E 01         [ 7] 6850 	ld	c, #0x01
   2572 C3rA7r26      [10] 6851 	jp	00159$
                           6852 ;src/menu.c:59: case K_2: menu = M_SET_B; rc = true; break;
   2575                    6853 00113$:
   2575 21r04r00      [10] 6854 	ld	hl,#_menu + 0
   2578 36 03         [10] 6855 	ld	(hl), #0x03
   257A 0E 01         [ 7] 6856 	ld	c, #0x01
   257C C3rA7r26      [10] 6857 	jp	00159$
                           6858 ;src/menu.c:60: case K_3: menu = M_MIX; rc = true; break;
   257F                    6859 00114$:
   257F 21r04r00      [10] 6860 	ld	hl,#_menu + 0
   2582 36 05         [10] 6861 	ld	(hl), #0x05
   2584 0E 01         [ 7] 6862 	ld	c, #0x01
   2586 C3rA7r26      [10] 6863 	jp	00159$
                           6864 ;src/menu.c:61: case K_4: menu = M_AMP; rc = true; break;
   2589                    6865 00115$:
   2589 21r04r00      [10] 6866 	ld	hl,#_menu + 0
   258C 36 09         [10] 6867 	ld	(hl), #0x09
   258E 0E 01         [ 7] 6868 	ld	c, #0x01
   2590 C3rA7r26      [10] 6869 	jp	00159$
                           6870 ;src/menu.c:62: case K_5: menu = M_CUST_AMP; rc = true; break;
   2593                    6871 00116$:
   2593 21r04r00      [10] 6872 	ld	hl,#_menu + 0
   2596 36 0E         [10] 6873 	ld	(hl), #0x0e
   2598 0E 01         [ 7] 6874 	ld	c, #0x01
   259A C3rA7r26      [10] 6875 	jp	00159$
                           6876 ;src/menu.c:63: case K_EN: menu = M_MAIN; rc = true; break;
   259D                    6877 00117$:
   259D 21r04r00      [10] 6878 	ld	hl,#_menu + 0
   25A0 36 00         [10] 6879 	ld	(hl), #0x00
   25A2 0E 01         [ 7] 6880 	ld	c, #0x01
   25A4 C3rA7r26      [10] 6881 	jp	00159$
                           6882 ;src/menu.c:64: case K_S: menu = M_SAVE; rc = true; break;
   25A7                    6883 00118$:
   25A7 21r04r00      [10] 6884 	ld	hl,#_menu + 0
   25AA 36 12         [10] 6885 	ld	(hl), #0x12
   25AC 0E 01         [ 7] 6886 	ld	c, #0x01
                           6887 ;src/menu.c:66: break;
   25AE C3rA7r26      [10] 6888 	jp	00159$
                           6889 ;src/menu.c:69: case M_SET_B:
   25B1                    6890 00121$:
                           6891 ;src/menu.c:70: menu = M_SET; rc = true; break;
   25B1 21r04r00      [10] 6892 	ld	hl,#_menu + 0
   25B4 36 02         [10] 6893 	ld	(hl), #0x02
   25B6 0E 01         [ 7] 6894 	ld	c, #0x01
   25B8 C3rA7r26      [10] 6895 	jp	00159$
                           6896 ;src/menu.c:73: case M_MIX:
   25BB                    6897 00122$:
                           6898 ;src/menu.c:74: switch(key)
   25BB 78            [ 4] 6899 	ld	a,b
   25BC FE 0F         [ 7] 6900 	cp	a,#0x0f
   25BE 28 0F         [12] 6901 	jr	Z,00123$
   25C0 FE 10         [ 7] 6902 	cp	a,#0x10
   25C2 28 15         [12] 6903 	jr	Z,00124$
   25C4 FE 11         [ 7] 6904 	cp	a,#0x11
   25C6 28 1B         [12] 6905 	jr	Z,00125$
   25C8 D6 1E         [ 7] 6906 	sub	a, #0x1e
   25CA 28 21         [12] 6907 	jr	Z,00126$
   25CC C3rA7r26      [10] 6908 	jp	00159$
                           6909 ;src/menu.c:76: case K_1: menu = M_MIX_1; rc = true; break;
   25CF                    6910 00123$:
   25CF 21r04r00      [10] 6911 	ld	hl,#_menu + 0
   25D2 36 06         [10] 6912 	ld	(hl), #0x06
   25D4 0E 01         [ 7] 6913 	ld	c, #0x01
   25D6 C3rA7r26      [10] 6914 	jp	00159$
                           6915 ;src/menu.c:77: case K_2: menu = M_MIX_2; rc = true; break;
   25D9                    6916 00124$:
   25D9 21r04r00      [10] 6917 	ld	hl,#_menu + 0
   25DC 36 07         [10] 6918 	ld	(hl), #0x07
   25DE 0E 01         [ 7] 6919 	ld	c, #0x01
   25E0 C3rA7r26      [10] 6920 	jp	00159$
                           6921 ;src/menu.c:78: case K_3: menu = M_MIX_3; rc = true; break;
   25E3                    6922 00125$:
   25E3 21r04r00      [10] 6923 	ld	hl,#_menu + 0
   25E6 36 08         [10] 6924 	ld	(hl), #0x08
   25E8 0E 01         [ 7] 6925 	ld	c, #0x01
   25EA C3rA7r26      [10] 6926 	jp	00159$
                           6927 ;src/menu.c:79: case K_EN: menu = M_SET; rc = true; break;
   25ED                    6928 00126$:
   25ED 21r04r00      [10] 6929 	ld	hl,#_menu + 0
   25F0 36 02         [10] 6930 	ld	(hl), #0x02
   25F2 0E 01         [ 7] 6931 	ld	c, #0x01
                           6932 ;src/menu.c:81: break;
   25F4 C3rA7r26      [10] 6933 	jp	00159$
                           6934 ;src/menu.c:83: case M_AMP:
   25F7                    6935 00128$:
                           6936 ;src/menu.c:84: switch(key)
   25F7 78            [ 4] 6937 	ld	a, b
   25F8 D6 0F         [ 7] 6938 	sub	a, #0x0f
   25FA 28 14         [12] 6939 	jr	Z,00129$
   25FC 78            [ 4] 6940 	ld	a,b
   25FD FE 10         [ 7] 6941 	cp	a,#0x10
   25FF 28 19         [12] 6942 	jr	Z,00130$
   2601 FE 11         [ 7] 6943 	cp	a,#0x11
   2603 28 1F         [12] 6944 	jr	Z,00131$
   2605 FE 12         [ 7] 6945 	cp	a,#0x12
   2607 28 25         [12] 6946 	jr	Z,00132$
   2609 D6 1E         [ 7] 6947 	sub	a, #0x1e
   260B 28 2B         [12] 6948 	jr	Z,00133$
   260D C3rA7r26      [10] 6949 	jp	00159$
                           6950 ;src/menu.c:86: case K_1: menu = M_AMP_1; rc = true; break;
   2610                    6951 00129$:
   2610 21r04r00      [10] 6952 	ld	hl,#_menu + 0
   2613 36 0A         [10] 6953 	ld	(hl), #0x0a
   2615 0E 01         [ 7] 6954 	ld	c, #0x01
   2617 C3rA7r26      [10] 6955 	jp	00159$
                           6956 ;src/menu.c:87: case K_2: menu = M_AMP_2; rc = true; break;
   261A                    6957 00130$:
   261A 21r04r00      [10] 6958 	ld	hl,#_menu + 0
   261D 36 0B         [10] 6959 	ld	(hl), #0x0b
   261F 0E 01         [ 7] 6960 	ld	c, #0x01
   2621 C3rA7r26      [10] 6961 	jp	00159$
                           6962 ;src/menu.c:88: case K_3: menu = M_AMP_3; rc = true; break;
   2624                    6963 00131$:
   2624 21r04r00      [10] 6964 	ld	hl,#_menu + 0
   2627 36 0C         [10] 6965 	ld	(hl), #0x0c
   2629 0E 01         [ 7] 6966 	ld	c, #0x01
   262B C3rA7r26      [10] 6967 	jp	00159$
                           6968 ;src/menu.c:89: case K_4: menu = M_AMP_4; rc = true; break;
   262E                    6969 00132$:
   262E 21r04r00      [10] 6970 	ld	hl,#_menu + 0
   2631 36 0D         [10] 6971 	ld	(hl), #0x0d
   2633 0E 01         [ 7] 6972 	ld	c, #0x01
   2635 C3rA7r26      [10] 6973 	jp	00159$
                           6974 ;src/menu.c:90: case K_EN: menu = M_SET; rc = true; break;
   2638                    6975 00133$:
   2638 21r04r00      [10] 6976 	ld	hl,#_menu + 0
   263B 36 02         [10] 6977 	ld	(hl), #0x02
   263D 0E 01         [ 7] 6978 	ld	c, #0x01
                           6979 ;src/menu.c:92: break;
   263F 18 66         [12] 6980 	jr	00159$
                           6981 ;src/menu.c:96: case M_MIX_3:
   2641                    6982 00137$:
                           6983 ;src/menu.c:97: menu = M_MIX; rc = true;
   2641 21r04r00      [10] 6984 	ld	hl,#_menu + 0
   2644 36 05         [10] 6985 	ld	(hl), #0x05
   2646 0E 01         [ 7] 6986 	ld	c, #0x01
                           6987 ;src/menu.c:98: break;
   2648 18 5D         [12] 6988 	jr	00159$
                           6989 ;src/menu.c:103: case M_AMP_4:
   264A                    6990 00141$:
                           6991 ;src/menu.c:104: menu = M_AMP; rc = true;
   264A 21r04r00      [10] 6992 	ld	hl,#_menu + 0
   264D 36 09         [10] 6993 	ld	(hl), #0x09
   264F 0E 01         [ 7] 6994 	ld	c, #0x01
                           6995 ;src/menu.c:105: break;
   2651 18 54         [12] 6996 	jr	00159$
                           6997 ;src/menu.c:107: case M_CUST_AMP:
   2653                    6998 00142$:
                           6999 ;src/menu.c:108: switch(key)
   2653 78            [ 4] 7000 	ld	a, b
   2654 D6 1E         [ 7] 7001 	sub	a, #0x1e
   2656 20 4F         [12] 7002 	jr	NZ,00159$
                           7003 ;src/menu.c:110: case K_EN: menu = M_SET; rc = true; break;
   2658 21r04r00      [10] 7004 	ld	hl,#_menu + 0
   265B 36 02         [10] 7005 	ld	(hl), #0x02
   265D 0E 01         [ 7] 7006 	ld	c, #0x01
                           7007 ;src/menu.c:112: break;
   265F 18 46         [12] 7008 	jr	00159$
                           7009 ;src/menu.c:114: case M_SAVE:
   2661                    7010 00145$:
                           7011 ;src/menu.c:115: switch (key)
   2661 78            [ 4] 7012 	ld	a,b
   2662 FE 1D         [ 7] 7013 	cp	a,#0x1d
   2664 28 06         [12] 7014 	jr	Z,00146$
   2666 D6 26         [ 7] 7015 	sub	a, #0x26
   2668 28 0B         [12] 7016 	jr	Z,00147$
   266A 18 3B         [12] 7017 	jr	00159$
                           7018 ;src/menu.c:117: case K_Y: menu = M_SAVE1; rc = true; break;
   266C                    7019 00146$:
   266C 21r04r00      [10] 7020 	ld	hl,#_menu + 0
   266F 36 13         [10] 7021 	ld	(hl), #0x13
   2671 0E 01         [ 7] 7022 	ld	c, #0x01
   2673 18 32         [12] 7023 	jr	00159$
                           7024 ;src/menu.c:118: case K_N: menu = M_SET; rc = true; break;
   2675                    7025 00147$:
   2675 21r04r00      [10] 7026 	ld	hl,#_menu + 0
   2678 36 02         [10] 7027 	ld	(hl), #0x02
   267A 0E 01         [ 7] 7028 	ld	c, #0x01
                           7029 ;src/menu.c:120: break;
   267C 18 29         [12] 7030 	jr	00159$
                           7031 ;src/menu.c:122: case M_FUPD:
   267E                    7032 00149$:
                           7033 ;src/menu.c:123: switch (key)
   267E 78            [ 4] 7034 	ld	a,b
   267F FE 1D         [ 7] 7035 	cp	a,#0x1d
   2681 28 06         [12] 7036 	jr	Z,00150$
   2683 D6 26         [ 7] 7037 	sub	a, #0x26
   2685 28 0B         [12] 7038 	jr	Z,00151$
   2687 18 1E         [12] 7039 	jr	00159$
                           7040 ;src/menu.c:125: case K_Y: menu = M_FUPD1; rc = true; break;
   2689                    7041 00150$:
   2689 21r04r00      [10] 7042 	ld	hl,#_menu + 0
   268C 36 15         [10] 7043 	ld	(hl), #0x15
   268E 0E 01         [ 7] 7044 	ld	c, #0x01
   2690 18 15         [12] 7045 	jr	00159$
                           7046 ;src/menu.c:126: case K_N: menu = M_MAIN; rc = true; break;
   2692                    7047 00151$:
   2692 21r04r00      [10] 7048 	ld	hl,#_menu + 0
   2695 36 00         [10] 7049 	ld	(hl), #0x00
   2697 0E 01         [ 7] 7050 	ld	c, #0x01
                           7051 ;src/menu.c:128: break;
   2699 18 0C         [12] 7052 	jr	00159$
                           7053 ;src/menu.c:130: default:
   269B                    7054 00153$:
                           7055 ;src/menu.c:131: if (key != K_NONE)
   269B 78            [ 4] 7056 	ld	a, b
   269C D6 28         [ 7] 7057 	sub	a, #0x28
   269E 28 07         [12] 7058 	jr	Z,00159$
                           7059 ;src/menu.c:132: { menu = M_MAIN; rc = true; break; }
   26A0 21r04r00      [10] 7060 	ld	hl,#_menu + 0
   26A3 36 00         [10] 7061 	ld	(hl), #0x00
   26A5 0E 01         [ 7] 7062 	ld	c, #0x01
                           7063 ;src/menu.c:133: }
   26A7                    7064 00159$:
                           7065 ;src/menu.c:135: return rc;
   26A7 69            [ 4] 7066 	ld	l, c
                           7067 ;src/menu.c:136: }
   26A8 C9            [10] 7068 	ret
                           7069 ;src/main.c:18: void t_none() {}
                           7070 ;	---------------------------------
                           7071 ; Function t_none
                           7072 ; ---------------------------------
   26A9                    7073 _t_none::
   26A9 C9            [10] 7074 	ret
                           7075 ;src/main.c:20: void crt_init()
                           7076 ;	---------------------------------
                           7077 ; Function crt_init
                           7078 ; ---------------------------------
   26AA                    7079 _crt_init::
                           7080 ;src/main.c:22: menu = M_MAIN;
   26AA 21r04r00      [10] 7081 	ld	hl,#_menu + 0
   26AD 36 00         [10] 7082 	ld	(hl), #0x00
                           7083 ;src/main.c:23: }
   26AF C9            [10] 7084 	ret
                           7085 ;src/main.c:25: void main()
                           7086 ;	---------------------------------
                           7087 ; Function main
                           7088 ; ---------------------------------
   26B0                    7089 _main::
                           7090 ;src/main.c:27: crt_init();
   26B0 CDrAAr26      [17] 7091 	call	_crt_init
                           7092 ;src/main.c:29: border(1);
   26B3 3E 01         [ 7] 7093 	ld	a, #0x01
   26B5 F5            [11] 7094 	push	af
   26B6 33            [ 6] 7095 	inc	sp
   26B7 CDr00r00      [17] 7096 	call	_border
   26BA 33            [ 6] 7097 	inc	sp
                           7098 ;src/main.c:31: while (1)
   26BB                    7099 00107$:
                           7100 ;src/main.c:33: req_unpress = true;
   26BB 21r05r00      [10] 7101 	ld	hl,#_req_unpress + 0
   26BE 36 01         [10] 7102 	ld	(hl), #0x01
                           7103 ;src/main.c:34: task = t_none;
   26C0 FD 21r06r00   [14] 7104 	ld	iy, #_task
   26C4 FD 36 00rA9   [19] 7105 	ld	0 (iy), #<(_t_none)
   26C8 FD 36 01s26   [19] 7106 	ld	1 (iy), #>(_t_none)
                           7107 ;src/main.c:35: menu_disp();
   26CC CDrE3r23      [17] 7108 	call	_menu_disp
                           7109 ;src/main.c:37: while (1)
   26CF                    7110 00104$:
                           7111 ;src/main.c:39: task();
   26CF 2Ar06r00      [16] 7112 	ld	hl, (_task)
   26D2 CDr00r00      [17] 7113 	call	___sdcc_call_hl
                           7114 ;src/main.c:40: if (key_disp())
   26D5 CDr7Dr24      [17] 7115 	call	_key_disp
   26D8 7D            [ 4] 7116 	ld	a, l
   26D9 B7            [ 4] 7117 	or	a, a
   26DA 28 F3         [12] 7118 	jr	Z,00104$
                           7119 ;src/main.c:41: break;
                           7120 ;src/main.c:44: }
   26DC 18 DD         [12] 7121 	jr	00107$
                           7122 	.area _CODE
                           7123 	.area _INITIALIZER
   0000                    7124 __xinit__fw_bin_len:
   0000 0C C7              7125 	.dw #0xc70c
                           7126 	.area _CABS (ABS)
