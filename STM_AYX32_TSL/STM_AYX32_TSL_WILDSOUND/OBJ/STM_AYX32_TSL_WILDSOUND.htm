<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OBJ\STM_AYX32_TSL_WILDSOUND.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OBJ\STM_AYX32_TSL_WILDSOUND.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Fri Apr 23 16:59:43 2021
<BR><P>
<H3>Maximum Stack Usage =        840 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; chMain &rArr; DoProc &rArr; wsPoolStreamMode &rArr; cayStrmPool &rArr; cayDigPlayerPool &rArr; cayDigPlayerSTEP &rArr; XM_Player_STEP &rArr; PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NMI_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemManage_Handler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">DebugMon_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[1e]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC_IRQHandler</a><BR>
 <LI><a href="#[e2]">rb_fifo_wr</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e2]">rb_fifo_wr</a><BR>
 <LI><a href="#[e6]">Send_RS_Hold</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e4]">Send_RS_Buf</a><BR>
 <LI><a href="#[8f]">chipAY_IO_HardPoolIntCFG</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8f]">chipAY_IO_HardPoolIntCFG</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[20]">CAN1_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[21]">CAN1_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[22]">CAN1_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1f]">CAN1_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4c]">CAN2_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4d]">CAN2_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4e]">CAN2_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4b]">CAN2_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5b]">CRYP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5a]">DCMI_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1d]">DMA1_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3b]">DMA1_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[48]">DMA2_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[51]">DMA2_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[52]">DMA2_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[49]">ETH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4a]">ETH_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[86]">EXTI01_extProcRobusCFG</a> from chipay_interrupt.o(ROMCODE) referenced from chipay_interrupt.o(ROMCODE)
 <LI><a href="#[12]">EXTI0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[34]">EXTI15_10_IRQHandler</a> from chipay_interrupt.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[13]">EXTI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[14]">EXTI2_IRQHandler</a> from chipay_interrupt.o(i.EXTI2_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[15]">EXTI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[16]">EXTI4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[23]">EXTI9_5_IRQHandler</a> from chipay_interrupt.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[10]">FLASH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5d]">FPU_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3c]">FSMC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5c]">HASH_RNG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2e]">I2C2_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2d]">I2C2_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[55]">I2C3_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[54]">I2C3_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4f]">OTG_FS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[36]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[57]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[56]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[59]">OTG_HS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[58]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[d]">PVD_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[11]">RCC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[35]">RTC_Alarm_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[f]">RTC_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3d]">SDIO_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2f]">SPI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[30]">SPI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3f]">SPI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[61]">Send_RS_Byte</a> from interface.o(i.Send_RS_Byte) referenced from interface.o(i.Send_RS_DEC)
 <LI><a href="#[61]">Send_RS_Byte</a> from interface.o(i.Send_RS_Byte) referenced from interface.o(i.Send_RS_HEX)
 <LI><a href="#[b]">SysTick_Handler</a> from chipay_interrupt.o(ROMCODE) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5f]">SystemInit</a> from hardware.o(i.SystemInit) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[e]">TAMP_STAMP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[24]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[27]">TIM1_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[26]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[25]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[28]">TIM2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[29]">TIM3_IRQHandler</a> from chipay_interrupt.o(ccmram) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2a]">TIM4_IRQHandler</a> from chipay_hardware.o(RAMCODE) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3e]">TIM5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[42]">TIM6_DAC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[43]">TIM7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[37]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3a]">TIM8_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[39]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[38]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[40]">UART4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[41]">UART5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[31]">USART1_IRQHandler</a> from interface.o(i.USART1_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[32]">USART2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[33]">USART3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[53]">USART6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[c]">WWDG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[60]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[63]">cayStrmCacheDescMemParsingINSH</a> from chipay_streamdata.o(i.cayStrmCacheDescMemParsingINSH) referenced from chipay_streamdata.o(i.cayStrmPool)
 <LI><a href="#[1]">cayStrmCacheDescMemParsingNOP</a> from chipay_streamdata.o(i.cayStrmCacheDescMemParsingNOP) referenced 2 times from chipay_streamdata.o(.data)
 <LI><a href="#[62]">cayStrmCacheDescMemParsingTRACK</a> from chipay_streamdata.o(i.cayStrmCacheDescMemParsingTRACK) referenced from chipay_streamdata.o(i.cayStrmPool)
 <LI><a href="#[5e]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[64]">prcAY0prcR00</a> from chipay_interrupt.o(ccmram) referenced 2 times from chipay_interrupt.o(ccmram)
 <LI><a href="#[65]">prcAY0prcR02</a> from chipay_interrupt.o(ccmram) referenced 2 times from chipay_interrupt.o(ccmram)
 <LI><a href="#[66]">prcAY0prcR04</a> from chipay_interrupt.o(ccmram) referenced 2 times from chipay_interrupt.o(ccmram)
 <LI><a href="#[67]">prcAY0prcR06</a> from chipay_interrupt.o(ccmram) referenced from chipay_interrupt.o(ccmram)
 <LI><a href="#[69]">prcAY0prcR0B</a> from chipay_interrupt.o(ccmram) referenced 2 times from chipay_interrupt.o(ccmram)
 <LI><a href="#[6a]">prcAY0prcR0D</a> from chipay_interrupt.o(ccmram) referenced from chipay_interrupt.o(ccmram)
 <LI><a href="#[6c]">prcAY0prcR18</a> from chipay_interrupt.o(ccmram) referenced from chipay_interrupt.o(ccmram)
 <LI><a href="#[6d]">prcAY0prcR19</a> from chipay_interrupt.o(ccmram) referenced from chipay_interrupt.o(ccmram)
 <LI><a href="#[6e]">prcAY0prcR1A</a> from chipay_interrupt.o(ccmram) referenced from chipay_interrupt.o(ccmram)
 <LI><a href="#[6f]">prcAY1prcR00</a> from chipay_interrupt.o(ccmram) referenced 2 times from chipay_interrupt.o(ccmram)
 <LI><a href="#[70]">prcAY1prcR02</a> from chipay_interrupt.o(ccmram) referenced 2 times from chipay_interrupt.o(ccmram)
 <LI><a href="#[71]">prcAY1prcR04</a> from chipay_interrupt.o(ccmram) referenced 2 times from chipay_interrupt.o(ccmram)
 <LI><a href="#[72]">prcAY1prcR06</a> from chipay_interrupt.o(ccmram) referenced from chipay_interrupt.o(ccmram)
 <LI><a href="#[73]">prcAY1prcR0B</a> from chipay_interrupt.o(ccmram) referenced 2 times from chipay_interrupt.o(ccmram)
 <LI><a href="#[74]">prcAY1prcR0D</a> from chipay_interrupt.o(ccmram) referenced from chipay_interrupt.o(ccmram)
 <LI><a href="#[75]">prcAY1prcR18</a> from chipay_interrupt.o(ccmram) referenced from chipay_interrupt.o(ccmram)
 <LI><a href="#[76]">prcAY1prcR19</a> from chipay_interrupt.o(ccmram) referenced from chipay_interrupt.o(ccmram)
 <LI><a href="#[77]">prcAY1prcR1A</a> from chipay_interrupt.o(ccmram) referenced from chipay_interrupt.o(ccmram)
 <LI><a href="#[6b]">prcAYWprcR0E</a> from chipay_interrupt.o(ccmram) referenced 2 times from chipay_interrupt.o(ccmram)
 <LI><a href="#[68]">prcAYprcNULL</a> from chipay_interrupt.o(ccmram) referenced 36 times from chipay_interrupt.o(ccmram)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[60]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[18f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[83]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[85]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[190]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[191]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[192]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[193]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[194]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[195]"></a>bflBootExtremalExec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bootflasherf4.o(.emb_text), UNUSED)

<P><STRONG><a name="[118]"></a>bflBootExtremalCopyExec</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bootflasherf4.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlock
</UL>

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[196]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>EXT_DoPortDelay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, chipay_interrupt.o(ROMCODE), UNUSED)

<P><STRONG><a name="[198]"></a>EXT_DoPortSendSPIx</STRONG> (Thumb, 162 bytes, Stack size 4 bytes, chipay_interrupt.o(ROMCODE), UNUSED)

<P><STRONG><a name="[199]"></a>EXT_DoAyxCmd</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, chipay_interrupt.o(ROMCODE), UNUSED)

<P><STRONG><a name="[86]"></a>EXTI01_extProcRobusCFG</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, chipay_interrupt.o(ROMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EXTI01_extProcRobusCFG &rArr; EXT_DoAyBusReg &rArr; EXT_DoWsBusWriteData &rArr; Send_RS_B &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoAyBusReg (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ROMCODE)
</UL>
<P><STRONG><a name="[87]"></a>getNextVar</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, chipay_interrupt.o(ROMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = getNextVar &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toupper (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WildDateVerToFirmVerConverter
</UL>

<P><STRONG><a name="[8a]"></a>WildDateVerToFirmVerConverter</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, chipay_interrupt.o(ROMCODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextVar
</UL>

<P><STRONG><a name="[8b]"></a>WildConvertDateToString</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, chipay_interrupt.o(ROMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WildConvertDateToString &rArr; rb_IntToStr &rArr; rb_IntToProc
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_IntToStr
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
</UL>

<P><STRONG><a name="[8f]"></a>chipAY_IO_HardPoolIntCFG</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, chipay_interrupt.o(ROMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = chipAY_IO_HardPoolIntCFG &rArr;  chipAY_IO_HardPoolIntCFG (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_IO_HardPoolIntCFG
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_IOConfig
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_IO_HardPoolIntCFG
</UL>

<P><STRONG><a name="[94]"></a>chipAY_IOConfig</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, chipay_interrupt.o(ROMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = chipAY_IOConfig &rArr; chipAY_IO_HardPoolIntCFG &rArr;  chipAY_IO_HardPoolIntCFG (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_IO_HardPoolIntCFG
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolTransMode
</UL>

<P><STRONG><a name="[95]"></a>chipAY_InterruptConfig</STRONG> (Thumb, 570 bytes, Stack size 80 bytes, chipay_interrupt.o(ROMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = chipAY_InterruptConfig &rArr; WildConvertDateToString &rArr; rb_IntToStr &rArr; rb_IntToProc
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdIntSetVector
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerFreq
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMACmd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WildConvertDateToString
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextVar
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, chipay_interrupt.o(ROMCODE))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>CallProc</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, process.o(i.CallProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CallProc
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoProc
</UL>

<P><STRONG><a name="[14e]"></a>DAC_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dac.o(i.DAC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
</UL>

<P><STRONG><a name="[14d]"></a>DAC_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dac.o(i.DAC_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
</UL>

<P><STRONG><a name="[14c]"></a>DAC_Init</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, stm32f4xx_dac.o(i.DAC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DAC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
</UL>

<P><STRONG><a name="[f0]"></a>DMA_ClearFlag</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[ee]"></a>DMA_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[f6]"></a>DMA_ITConfig</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_dma.o(i.DMA_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[ef]"></a>DMA_Init</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[a2]"></a>DelayMCS</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, hdtimers.o(i.DelayMCS))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DelayMCS &rArr; TimerCounterUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isTimerCompareOverflowX
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerCounterUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Hold
</UL>

<P><STRONG><a name="[a5]"></a>DelayMS</STRONG> (Thumb, 136 bytes, Stack size 44 bytes, hdtimers.o(i.DelayMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DelayMS &rArr; TimerCounterUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isTimerCompareOverflowX
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerCounterUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chayBootFlashDo
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectInitGPIO
</UL>

<P><STRONG><a name="[a6]"></a>DoProc</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, process.o(i.DoProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = DoProc &rArr; wsPoolStreamMode &rArr; cayStrmPool &rArr; cayDigPlayerPool &rArr; cayDigPlayerSTEP &rArr; XM_Player_STEP &rArr; PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolTransMode
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolStreamMode
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolFlasherMode
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolDigitalPlayer
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnProc
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListProcRoll
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallProc
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chMain (via Veneer)
</UL>

<P><STRONG><a name="[34]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, chipay_interrupt.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI15_10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoAyBusUpdate (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, chipay_interrupt.o(i.EXTI2_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, chipay_interrupt.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoAyBusUpdate (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[ae]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>EXTI_Init</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, stm32f4xx_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_IO_HardPoolIntCFG
</UL>

<P><STRONG><a name="[11f]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[d0]"></a>FLASH_DataCacheCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_DataCacheCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[122]"></a>FLASH_DataCacheReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_DataCacheReset))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[af]"></a>FLASH_ErasePage</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, bootflasherf4.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashSectorCfg
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[b1]"></a>FLASH_EraseSector</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, stm32f4xx_flash.o(i.FLASH_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[b4]"></a>FLASH_GetStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[cf]"></a>FLASH_InstructionCacheCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_InstructionCacheCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[121]"></a>FLASH_InstructionCacheReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_InstructionCacheReset))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[120]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[164]"></a>FLASH_OB_Unlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_OB_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_PrefetchBufferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[b3]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
</UL>

<P><STRONG><a name="[cd]"></a>FLASH_SetLatency</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[11e]"></a>FLASH_Unlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>

<P><STRONG><a name="[b2]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>

<P><STRONG><a name="[97]"></a>GPIO_Init</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
</UL>

<P><STRONG><a name="[98]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_GPIO
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[b5]"></a>Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hardware.o(i.Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Init &rArr; SelectInitGPIO &rArr; SetupSPI &rArr; hdGPIO_Setup
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectInitGPIO
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b9]"></a>ListProcADD</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, process.o(i.ListProcADD))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ListProcADD &rArr; rb_fifo_wr_D &rArr; rb_fifo_wr_blk
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_wr_D
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_free
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chMain (via Veneer)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListProcRoll
</UL>

<P><STRONG><a name="[a9]"></a>ListProcRoll</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, process.o(i.ListProcRoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ListProcRoll &rArr; ListProcADD &rArr; rb_fifo_wr_D &rArr; rb_fifo_wr_blk
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_rd_D
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListProcADD
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoProc
</UL>

<P><STRONG><a name="[93]"></a>NVIC_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_RS_Init
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_IO_HardPoolIntCFG
</UL>

<P><STRONG><a name="[bd]"></a>PerFrCalc</STRONG> (Thumb, 734 bytes, Stack size 344 bytes, chipay_digitalplayer.o(i.PerFrCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub (via Veneer)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP
</UL>

<P><STRONG><a name="[96]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdGPIO_Setup
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[d6]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_Config
</UL>

<P><STRONG><a name="[99]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerRCC
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[de]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[90]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerRCC
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_IO_HardPoolIntCFG
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_GPIO
</UL>

<P><STRONG><a name="[dd]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[b6]"></a>RCC_Configuration</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, hardware.o(i.RCC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_Configuration &rArr; RCC_WaitForHSEStartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_InstructionCacheCmd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DataCacheCmd
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[c7]"></a>RCC_DeInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToBootloader (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[b7]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 118 bytes, Stack size 12 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerFreq
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[cc]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[d1]"></a>RCC_HCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[c8]"></a>RCC_HSEConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[d2]"></a>RCC_PCLK1Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_PCLK1Config))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[d3]"></a>RCC_PCLK2Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_PCLK2Config))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[cb]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[ca]"></a>RCC_PLLConfig</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_PLLConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[d4]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[c9]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32f4xx_rcc.o(i.RCC_WaitForHSEStartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_WaitForHSEStartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[d7]"></a>RNG_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rng.o(i.RNG_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_Config
</UL>

<P><STRONG><a name="[d5]"></a>RNG_Config</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.RNG_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RNG_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_Cmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d8]"></a>Read_RS_Byte</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, interface.o(i.Read_RS_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Read_RS_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_size
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_rd
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusReadData (via Veneer)
</UL>

<P><STRONG><a name="[db]"></a>Read_RS_Size</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, interface.o(i.Read_RS_Size))
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_size
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteAddr (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusReadData (via Veneer)
</UL>

<P><STRONG><a name="[a8]"></a>ReturnProc</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, process.o(i.ReturnProc))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoProc
</UL>

<P><STRONG><a name="[f4]"></a>SPI_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[f5]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[dc]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f4xx_spi.o(i.SPI_I2S_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[f1]"></a>SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[f3]"></a>SPI_NSSInternalSoftwareConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_NSSInternalSoftwareConfig))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[f2]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_SSOutputCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>

<P><STRONG><a name="[91]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_syscfg.o(i.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_IO_HardPoolIntCFG
</UL>

<P><STRONG><a name="[b8]"></a>SelectInitGPIO</STRONG> (Thumb, 366 bytes, Stack size 8 bytes, hardware.o(i.SelectInitGPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SelectInitGPIO &rArr; SetupSPI &rArr; hdGPIO_Setup
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdGPIO_Setup
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[e1]"></a>Send_RS_B</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, interface.o(i.Send_RS_B))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Send_RS_B &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_wr
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteData (via Veneer)
</UL>

<P><STRONG><a name="[e4]"></a>Send_RS_Buf</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, interface.o(i.Send_RS_Buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Send_RS_Buf &rArr; Send_RS_Hold &rArr;  Send_RS_Buf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_free
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_size
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_wr_blk
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_GPIO
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Hold
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Byte
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_String
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Hold
</UL>

<P><STRONG><a name="[61]"></a>Send_RS_Byte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interface.o(i.Send_RS_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Send_RS_Byte &rArr; Send_RS_Buf &rArr; Send_RS_Hold &rArr;  Send_RS_Buf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Buf
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStartInfo
</UL>
<BR>[Address Reference Count : 2]<UL><LI> interface.o(i.Send_RS_DEC)
<LI> interface.o(i.Send_RS_HEX)
</UL>
<P><STRONG><a name="[e9]"></a>Send_RS_DEC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, interface.o(i.Send_RS_DEC))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Send_RS_DEC &rArr; rb_IntToProc
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_IntToProc
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chayBootFlashDo
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStartInfo
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmCacheDescMemParsingINSH
</UL>

<P><STRONG><a name="[eb]"></a>Send_RS_FREEBusy</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, interface.o(i.Send_RS_FREEBusy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Send_RS_FREEBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_free
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_size
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteData (via Veneer)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteAddr (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusReadData (via Veneer)
</UL>

<P><STRONG><a name="[ec]"></a>Send_RS_HEX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, interface.o(i.Send_RS_HEX))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Send_RS_HEX &rArr; rb_IntToProc
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_IntToProc
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStartInfo
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerExtractLineShow
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMalBaseRec
</UL>

<P><STRONG><a name="[e6]"></a>Send_RS_Hold</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, interface.o(i.Send_RS_Hold))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + In Cycle
<LI>Call Chain = Send_RS_Hold &rArr;  Send_RS_Buf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_size
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMCS
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_GPIO
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Buf
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Buf
</UL>

<P><STRONG><a name="[ed]"></a>Send_RS_String</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, interface.o(i.Send_RS_String))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Send_RS_String &rArr; Send_RS_Buf &rArr; Send_RS_Hold &rArr;  Send_RS_Buf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Buf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chayBootFlashDo
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStartInfo
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerExtractLineShow
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmCacheDescMemParsingINSH
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMalBaseRec
</UL>

<P><STRONG><a name="[e0]"></a>SetupSPI</STRONG> (Thumb, 476 bytes, Stack size 88 bytes, hardware.o(i.SetupSPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SetupSPI &rArr; hdGPIO_Setup
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdGPIO_Setup
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SSOutputCmd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_NSSInternalSoftwareConfig
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectInitGPIO
</UL>

<P><STRONG><a name="[f7]"></a>ShowMalBaseRec</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, memoryallocator.o(i.ShowMalBaseRec))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ShowMalBaseRec &rArr; Send_RS_String &rArr; Send_RS_Buf &rArr; Send_RS_Hold &rArr;  Send_RS_Buf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_String
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_HEX
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalInit
</UL>

<P><STRONG><a name="[f9]"></a>ShowStartInfo</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, main.o(i.ShowStartInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ShowStartInfo &rArr; Send_RS_Byte &rArr; Send_RS_Buf &rArr; Send_RS_Hold &rArr;  Send_RS_Buf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_DEC
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Byte
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_String
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_HEX
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>SystemInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hardware.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SystemInit &rArr; RCC_Configuration &rArr; RCC_WaitForHSEStartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[161]"></a>TIM_BDTRConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_tim.o(i.TIM_BDTRConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_BDTRConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[160]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_BDTRStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[181]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[154]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetup
</UL>

<P><STRONG><a name="[9e]"></a>TIM_DMACmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
</UL>

<P><STRONG><a name="[9d]"></a>TIM_ICInit</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, stm32f4xx_tim.o(i.TIM_ICInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TIM_ICInit &rArr; TI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
</UL>

<P><STRONG><a name="[9f]"></a>TIM_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
</UL>

<P><STRONG><a name="[15e]"></a>TIM_OC1Init</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[15f]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[15c]"></a>TIM_OC2Init</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[15d]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[15a]"></a>TIM_OC3Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[15b]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[158]"></a>TIM_OC4Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[159]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC4PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[156]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SelectInputTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetup
</UL>

<P><STRONG><a name="[155]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SelectMasterSlaveMode))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetup
</UL>

<P><STRONG><a name="[150]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SelectOutputTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetup
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
</UL>

<P><STRONG><a name="[157]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SelectSlaveMode))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetup
</UL>

<P><STRONG><a name="[fc]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetIC1Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[fe]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetIC2Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[ff]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetIC3Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[fa]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetIC4Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[9c]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[9a]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>

<P><STRONG><a name="[a3]"></a>TimerCounterUpdate</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, hdtimers.o(i.TimerCounterUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TimerCounterUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMCS
</UL>

<P><STRONG><a name="[108]"></a>Timer_1ms_CounterUpdate</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, hdtimers.o(i.Timer_1ms_CounterUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Timer_1ms_CounterUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMS_CheckContinue
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteAddr (via Veneer)
</UL>

<P><STRONG><a name="[e7]"></a>USART1_GPIO</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, interface.o(i.USART1_GPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART1_GPIO &rArr; hdGPIO_Setup
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdGPIO_Setup
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_RS_Init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Hold
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Buf
</UL>

<P><STRONG><a name="[31]"></a>USART1_IRQHandler</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, interface.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART1_IRQHandler &rArr; rb_fifo_wr_blk
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_free
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_size
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_rd
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_wr_blk
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[105]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_RS_Init
</UL>

<P><STRONG><a name="[e8]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_FREEBusy
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Hold
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Buf
</UL>

<P><STRONG><a name="[100]"></a>USART_GetITStatus</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[e3]"></a>USART_ITConfig</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_RS_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_B
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Buf
</UL>

<P><STRONG><a name="[103]"></a>USART_Init</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_RS_Init
</UL>

<P><STRONG><a name="[101]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[102]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[104]"></a>Uart_RS_Init</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, interface.o(i.Uart_RS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Uart_RS_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_size
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_flush
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_GPIO
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolTransMode
</UL>

<P><STRONG><a name="[107]"></a>WaitMS_CheckContinue</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, hdtimers.o(i.WaitMS_CheckContinue))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WaitMS_CheckContinue &rArr; Timer_1ms_CounterUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1ms_CounterUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chMain (via Veneer)
</UL>

<P><STRONG><a name="[10a]"></a>XM_ChekSongEND</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, chipay_digitalplayer.o(i.XM_ChekSongEND))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP
</UL>

<P><STRONG><a name="[109]"></a>XM_Player_STEP</STRONG> (Thumb, 3748 bytes, Stack size 64 bytes, chipay_digitalplayer.o(i.XM_Player_STEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = XM_Player_STEP &rArr; PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple (via Veneer)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple (via Veneer)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerGoToPatLine
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerExtractLineShow
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_ChekSongEND
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerFrCalc
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerSTEP
</UL>

<P><STRONG><a name="[19a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[19b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[19c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[110]"></a>bflBootBlockAddr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, bootflasherf4.o(i.bflBootBlockAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bflBootBlockAddr &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockPTR
</UL>

<P><STRONG><a name="[112]"></a>bflBootBlockPTR</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootBlockPTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bflBootBlockPTR &rArr; bflBootBlockAddr &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFindByType
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlock
</UL>

<P><STRONG><a name="[113]"></a>bflBootBlocks</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflBootBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFindByType
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocksGetCRC
</UL>

<P><STRONG><a name="[114]"></a>bflBootBlocksGetCRC</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bootflasherf4.o(i.bflBootBlocksGetCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bflBootBlocksGetCRC &rArr; bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk_CCITT
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
</UL>

<P><STRONG><a name="[116]"></a>bflBootCheckNeedFlashing</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bootflasherf4.o(i.bflBootCheckNeedFlashing))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bflBootCheckNeedFlashing &rArr; bflBootBlocksGetCRC &rArr; bflBootBlocks &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocksGetCRC
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chayBootFlashDo
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[117]"></a>bflBootExtremalExecuteBlock</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, bootflasherf4.o(i.bflBootExtremalExecuteBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bflBootExtremalExecuteBlock &rArr; bflBootBlockPTR &rArr; bflBootBlockAddr &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockPTR
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalCopyExec
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlockType
</UL>

<P><STRONG><a name="[119]"></a>bflBootExtremalExecuteBlockType</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, bootflasherf4.o(i.bflBootExtremalExecuteBlockType))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = bflBootExtremalExecuteBlockType &rArr; bflBootFindByType &rArr; bflBootBlockPTR &rArr; bflBootBlockAddr &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFindByType
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11a]"></a>bflBootFindByType</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, bootflasherf4.o(i.bflBootFindByType))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bflBootFindByType &rArr; bflBootBlockPTR &rArr; bflBootBlockAddr &rArr; flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockPTR
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlockType
</UL>

<P><STRONG><a name="[11b]"></a>bflBootFlashDisable</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bootflasherf4.o(i.bflBootFlashDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = bflBootFlashDisable &rArr; bflFlashEraseAlignBLK &rArr; bflFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashEraseAlignBLK
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageStart
</UL>

<P><STRONG><a name="[11d]"></a>bflFlashErase</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflFlashErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bflFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_InstructionCacheReset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DataCacheReset
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashEraseAlignBLK
</UL>

<P><STRONG><a name="[11c]"></a>bflFlashEraseAlignBLK</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, bootflasherf4.o(i.bflFlashEraseAlignBLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bflFlashEraseAlignBLK &rArr; bflFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashErase
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalEraseAllData
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFlashDisable
</UL>

<P><STRONG><a name="[b0]"></a>bflFlashSectorCfg</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, bootflasherf4.o(i.bflFlashSectorCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bflFlashSectorCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[124]"></a>bflFlashWriteBlock</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, bootflasherf4.o(i.bflFlashWriteBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_InstructionCacheReset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DataCacheReset
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlockA
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalWriteBLK
</UL>

<P><STRONG><a name="[125]"></a>bflImageAddBlock</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, bootflasherf4.o(i.bflImageAddBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bflImageAddBlock &rArr; bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlockA
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chayBootFlashDo
</UL>

<P><STRONG><a name="[126]"></a>bflImageAddBlockA</STRONG> (Thumb, 176 bytes, Stack size 80 bytes, bootflasherf4.o(i.bflImageAddBlockA))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlock
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chayBootFlashDo
</UL>

<P><STRONG><a name="[127]"></a>bflImageFinish</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bootflasherf4.o(i.bflImageFinish))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = bflImageFinish &rArr; bflImageAddBlock &rArr; bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlock
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk_CCITT
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_blk
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chayBootFlashDo
</UL>

<P><STRONG><a name="[129]"></a>bflImageStart</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bootflasherf4.o(i.bflImageStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = bflImageStart &rArr; bflBootFlashDisable &rArr; bflFlashEraseAlignBLK &rArr; bflFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFlashDisable
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chayBootFlashDo
</UL>

<P><STRONG><a name="[12b]"></a>cayDigPlayerExtractLine</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, chipay_digitalplayer.o(i.cayDigPlayerExtractLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cayDigPlayerExtractLine
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerGoToPatLine
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerExtractLineShow
</UL>

<P><STRONG><a name="[10c]"></a>cayDigPlayerExtractLineShow</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, chipay_digitalplayer.o(i.cayDigPlayerExtractLineShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = cayDigPlayerExtractLineShow &rArr; Send_RS_String &rArr; Send_RS_Buf &rArr; Send_RS_Hold &rArr;  Send_RS_Buf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_String
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_HEX
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerGetPatDataSTR
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerExtractLine
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP
</UL>

<P><STRONG><a name="[12d]"></a>cayDigPlayerGetPatDataSTR</STRONG> (Thumb, 210 bytes, Stack size 88 bytes, chipay_digitalplayer.o(i.cayDigPlayerGetPatDataSTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = cayDigPlayerGetPatDataSTR
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_IntToHEX
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerExtractLineShow
</UL>

<P><STRONG><a name="[10b]"></a>cayDigPlayerGoToPatLine</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, chipay_digitalplayer.o(i.cayDigPlayerGoToPatLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = cayDigPlayerGoToPatLine &rArr; cayDigPlayerExtractLine
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerExtractLine
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerGoToPosLine
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP
</UL>

<P><STRONG><a name="[12f]"></a>cayDigPlayerGoToPosLine</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, chipay_digitalplayer.o(i.cayDigPlayerGoToPosLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = cayDigPlayerGoToPosLine &rArr; cayDigPlayerGoToPatLine &rArr; cayDigPlayerExtractLine
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerGoToPatLine
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerInit
</UL>

<P><STRONG><a name="[130]"></a>cayDigPlayerInit</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, chipay_digitalplayer.o(i.cayDigPlayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = cayDigPlayerInit &rArr; cayDigPlayerGoToPosLine &rArr; cayDigPlayerGoToPatLine &rArr; cayDigPlayerExtractLine
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerGoToPosLine
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpSetPos
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
</UL>

<P><STRONG><a name="[132]"></a>cayDigPlayerPool</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, chipay_digitalplayer.o(i.cayDigPlayerPool))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = cayDigPlayerPool &rArr; cayDigPlayerSTEP &rArr; XM_Player_STEP &rArr; PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerStreamWRStep
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerStreamFree
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerSTEP
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpGenerateBUF
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolDigitalPlayer
</UL>

<P><STRONG><a name="[134]"></a>cayDigPlayerSTEP</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, chipay_digitalplayer.o(i.cayDigPlayerSTEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = cayDigPlayerSTEP &rArr; XM_Player_STEP &rArr; PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerSetSamplePos
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpCalcFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerPool
</UL>

<P><STRONG><a name="[137]"></a>cayDigPlayerSetSamplePos</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, chipay_digitalplayer.o(i.cayDigPlayerSetSamplePos))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cayDigPlayerSetSamplePos
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpSetPos
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerSTEP
</UL>

<P><STRONG><a name="[133]"></a>cayDigPlayerStreamFree</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, chipay_digitalplayer.o(i.cayDigPlayerStreamFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cayDigPlayerStreamFree
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerStreamSize
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerPool
</UL>

<P><STRONG><a name="[180]"></a>cayDigPlayerStreamGet</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, chipay_digitalplayer.o(i.cayDigPlayerStreamGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cayDigPlayerStreamGet
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipAY_DacStep (via Veneer)
</UL>

<P><STRONG><a name="[139]"></a>cayDigPlayerStreamSize</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, chipay_digitalplayer.o(i.cayDigPlayerStreamSize))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerStreamFree
</UL>

<P><STRONG><a name="[136]"></a>cayDigPlayerStreamWRStep</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, chipay_digitalplayer.o(i.cayDigPlayerStreamWRStep))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerPool
</UL>

<P><STRONG><a name="[13a]"></a>cayDigSmpAllocateInstrument</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, chipay_digitalsample.o(i.cayDigSmpAllocateInstrument))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = cayDigSmpAllocateInstrument &rArr; memalFillBLK &rArr; memalWriteBLK &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalWriteBLK
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalMemDescAllocate
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalFillBLK
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescGetAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpAllocateInstrumentCreatBlank
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmCacheDescMemParsingINSH
</UL>

<P><STRONG><a name="[13f]"></a>cayDigSmpAllocateInstrumentCreatBlank</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, chipay_digitalsample.o(i.cayDigSmpAllocateInstrumentCreatBlank))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = cayDigSmpAllocateInstrumentCreatBlank &rArr; cayDigSmpAllocateInstrument &rArr; memalFillBLK &rArr; memalWriteBLK &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpInstrumentAddByte
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpAllocateInstrument
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmCacheDescMemParsingINSH
</UL>

<P><STRONG><a name="[138]"></a>cayDigSmpCalcFreq</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, chipay_digitalsample.o(i.cayDigSmpCalcFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = cayDigSmpCalcFreq &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz (via Veneer)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerSTEP
</UL>

<P><STRONG><a name="[135]"></a>cayDigSmpGenerateBUF</STRONG> (Thumb, 366 bytes, Stack size 68 bytes, chipay_digitalsample.o(i.cayDigSmpGenerateBUF))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = cayDigSmpGenerateBUF
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerPool
</UL>

<P><STRONG><a name="[141]"></a>cayDigSmpInstrumentAddByte</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, chipay_digitalsample.o(i.cayDigSmpInstrumentAddByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = cayDigSmpInstrumentAddByte &rArr; memalWriteBLK &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalWriteBLK
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpAllocateInstrumentCreatBlank
</UL>

<P><STRONG><a name="[131]"></a>cayDigSmpSetPos</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, chipay_digitalsample.o(i.cayDigSmpSetPos))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerSetSamplePos
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerInit
</UL>

<P><STRONG><a name="[63]"></a>cayStrmCacheDescMemParsingINSH</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, chipay_streamdata.o(i.cayStrmCacheDescMemParsingINSH))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cayStrmCacheDescMemParsingINSH &rArr; cayDigSmpAllocateInstrumentCreatBlank &rArr; cayDigSmpAllocateInstrument &rArr; memalFillBLK &rArr; memalWriteBLK &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_DEC
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_String
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpAllocateInstrumentCreatBlank
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpAllocateInstrument
</UL>
<BR>[Address Reference Count : 1]<UL><LI> chipay_streamdata.o(i.cayStrmPool)
</UL>
<P><STRONG><a name="[1]"></a>cayStrmCacheDescMemParsingNOP</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, chipay_streamdata.o(i.cayStrmCacheDescMemParsingNOP))
<BR>[Address Reference Count : 1]<UL><LI> chipay_streamdata.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>cayStrmCacheDescMemParsingTRACK</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, chipay_streamdata.o(i.cayStrmCacheDescMemParsingTRACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = cayStrmCacheDescMemParsingTRACK
</UL>
<BR>[Address Reference Count : 1]<UL><LI> chipay_streamdata.o(i.cayStrmPool)
</UL>
<P><STRONG><a name="[143]"></a>cayStrmClear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, chipay_streamdata.o(i.cayStrmClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cayStrmClear
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteData (via Veneer)
</UL>

<P><STRONG><a name="[18d]"></a>cayStrmCmdSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, chipay_streamdata.o(i.cayStrmCmdSet))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteData (via Veneer)
</UL>

<P><STRONG><a name="[145]"></a>cayStrmFifoINwrSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, chipay_streamdata.o(i.cayStrmFifoINwrSize))
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_size
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsStreamStatus (via Veneer)
</UL>

<P><STRONG><a name="[146]"></a>cayStrmFifoOUwrB</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, chipay_streamdata.o(i.cayStrmFifoOUwrB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cayStrmFifoOUwrB
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_free
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_wr
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteData (via Veneer)
</UL>

<P><STRONG><a name="[147]"></a>cayStrmFifoOUwrFree</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, chipay_streamdata.o(i.cayStrmFifoOUwrFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cayStrmFifoOUwrFree
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_free
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteData (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsStreamStatus (via Veneer)
</UL>

<P><STRONG><a name="[18c]"></a>cayStrmFlagGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, chipay_streamdata.o(i.cayStrmFlagGet))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteData (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsStreamStatus (via Veneer)
</UL>

<P><STRONG><a name="[18e]"></a>cayStrmFlagSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, chipay_streamdata.o(i.cayStrmFlagSet))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteData (via Veneer)
</UL>

<P><STRONG><a name="[148]"></a>cayStrmPool</STRONG> (Thumb, 1570 bytes, Stack size 32 bytes, chipay_streamdata.o(i.cayStrmPool))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = cayStrmPool &rArr; cayDigPlayerPool &rArr; cayDigPlayerSTEP &rArr; XM_Player_STEP &rArr; PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_DEC
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_String
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_HEX
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerPool
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerInit
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalWriteBLK
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalMemDescAllocate
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpInstrumentAddByte
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_size
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_rd
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_clear
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalEraseAllData
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolStreamMode
</UL>

<P><STRONG><a name="[14a]"></a>chayBootFlashDo</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, chipay_bootflasher.o(i.chayBootFlashDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = chayBootFlashDo &rArr; bflImageFinish &rArr; bflImageAddBlock &rArr; bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageStart
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlockA
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlock
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_DEC
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_String
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolFlasherMode
</UL>

<P><STRONG><a name="[14b]"></a>chipAY_DacSetup</STRONG> (Thumb, 270 bytes, Stack size 96 bytes, chipay_hardware.o(i.chipAY_DacSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = chipAY_DacSetup &rArr; chipAY_TimerSetupX &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectOutputTrigger
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_DMACmd
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Cmd
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_HardwareInit
</UL>

<P><STRONG><a name="[151]"></a>chipAY_HardwareInit</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, chipay_hardware.o(i.chipAY_HardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = chipAY_HardwareInit &rArr; chipAY_DacSetup &rArr; chipAY_TimerSetupX &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetup
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9b]"></a>chipAY_TimerFreq</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, chipay_hardware.o(i.chipAY_TimerFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = chipAY_TimerFreq &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerRCC
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
</UL>

<P><STRONG><a name="[153]"></a>chipAY_TimerRCC</STRONG> (Thumb, 308 bytes, Stack size 8 bytes, chipay_hardware.o(i.chipAY_TimerRCC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = chipAY_TimerRCC
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerFreq
</UL>

<P><STRONG><a name="[152]"></a>chipAY_TimerSetup</STRONG> (Thumb, 232 bytes, Stack size 64 bytes, chipay_hardware.o(i.chipAY_TimerSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = chipAY_TimerSetup &rArr; chipAY_TimerSetupX &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectSlaveMode
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectOutputTrigger
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectMasterSlaveMode
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetupX
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_HardwareInit
</UL>

<P><STRONG><a name="[14f]"></a>chipAY_TimerSetupX</STRONG> (Thumb, 306 bytes, Stack size 96 bytes, chipay_hardware.o(i.chipAY_TimerSetupX))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = chipAY_TimerSetupX &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectMasterSlaveMode
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BDTRStructInit
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BDTRConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerRCC
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_TimerSetup
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_DacSetup
</UL>

<P><STRONG><a name="[128]"></a>crc16_blk</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rb_crc16.o(i.crc16_blk))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
</UL>

<P><STRONG><a name="[115]"></a>crc16_blk_CCITT</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rb_crc16.o(i.crc16_blk_CCITT))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocksGetCRC
</UL>

<P><STRONG><a name="[123]"></a>flashaddr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bootflasherf4.o(i.flashaddr))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashSectorCfg
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>

<P><STRONG><a name="[162]"></a>flashsize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bootflasherf4.o(i.flashsize))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashtop
</UL>

<P><STRONG><a name="[111]"></a>flashtop</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, bootflasherf4.o(i.flashtop))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flashtop
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashsize
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageStart
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageFinish
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlockA
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlocks
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootBlockAddr
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootFlashDisable
</UL>

<P><STRONG><a name="[df]"></a>hdGPIO_Setup</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, hdports.o(i.hdGPIO_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hdGPIO_Setup
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolTransMode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_GPIO
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSPI
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectInitGPIO
</UL>

<P><STRONG><a name="[a0]"></a>hdIntSetVector</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hdinterrupt.o(i.hdIntSetVector))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
</UL>

<P><STRONG><a name="[163]"></a>hdIntSwitchInterruptToRAM</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, hdinterrupt.o(i.hdIntSwitchInterruptToRAM))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>isTimerCompareOverflowX</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hdtimers.o(i.isTimerCompareOverflowX))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMCS
</UL>

<P><STRONG><a name="[5e]"></a>main</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = main &rArr; chMain &rArr; DoProc &rArr; wsPoolStreamMode &rArr; cayStrmPool &rArr; cayDigPlayerPool &rArr; cayDigPlayerSTEP &rArr; XM_Player_STEP &rArr; PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalInit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdIntSwitchInterruptToRAM
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_HardwareInit
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chMain (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootExtremalExecuteBlockType
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflBootCheckNeedFlashing
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_RS_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_Unlock
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipAY_Init (via Veneer)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipAY_ArmInit (via Veneer)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStartInfo
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[171]"></a>memalAllocateBaseListSize</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memoryallocator.o(i.memalAllocateBaseListSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memalAllocateBaseListSize
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalMemDescAllocate
</UL>

<P><STRONG><a name="[172]"></a>memalBaseListByAddr</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, memoryallocator.o(i.memalBaseListByAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memalBaseListByAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalMemPackCut
</UL>

<P><STRONG><a name="[169]"></a>memalDescAllocate</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, memoryallocator.o(i.memalDescAllocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = memalDescAllocate &rArr; memalDescSetFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescSetFlag
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescFreeSize
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalMemDescAllocate
</UL>

<P><STRONG><a name="[16d]"></a>memalDescFree</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, memoryallocator.o(i.memalDescFree))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalMemDescAllocate
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalEraseAllData
</UL>

<P><STRONG><a name="[16a]"></a>memalDescFreeSize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, memoryallocator.o(i.memalDescFreeSize))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescAllocate
</UL>

<P><STRONG><a name="[13c]"></a>memalDescGetAddr</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, memoryallocator.o(i.memalDescGetAddr))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpAllocateInstrument
</UL>

<P><STRONG><a name="[16c]"></a>memalDescInit</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, memoryallocator.o(i.memalDescInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = memalDescInit
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalInit
</UL>

<P><STRONG><a name="[16b]"></a>memalDescSetFlag</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, memoryallocator.o(i.memalDescSetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memalDescSetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalMemDescAllocate
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescAllocate
</UL>

<P><STRONG><a name="[149]"></a>memalEraseAllData</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, memoryallocator.o(i.memalEraseAllData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = memalEraseAllData &rArr; bflFlashEraseAlignBLK &rArr; bflFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_EraseSector &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashEraseAlignBLK
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalMemPackCut
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescFree
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
</UL>

<P><STRONG><a name="[13e]"></a>memalFillBLK</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, memoryallocator.o(i.memalFillBLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = memalFillBLK &rArr; memalWriteBLK &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalWriteBLK
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpAllocateInstrument
</UL>

<P><STRONG><a name="[170]"></a>memalFindBaseListSize</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, memoryallocator.o(i.memalFindBaseListSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = memalFindBaseListSize
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalMemDescAllocate
</UL>

<P><STRONG><a name="[165]"></a>memalInit</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, memoryallocator.o(i.memalInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = memalInit &rArr; ShowMalBaseRec &rArr; Send_RS_String &rArr; Send_RS_Buf &rArr; Send_RS_Hold &rArr;  Send_RS_Buf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashSectorCfg
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescInit
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMalBaseRec
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via Veneer)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13b]"></a>memalMemDescAllocate</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, memoryallocator.o(i.memalMemDescAllocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = memalMemDescAllocate &rArr; memalDescAllocate &rArr; memalDescSetFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalFindBaseListSize
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescSetFlag
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescFree
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescAllocate
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalAllocateBaseListSize
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpAllocateInstrument
</UL>

<P><STRONG><a name="[16e]"></a>memalMemPackCut</STRONG> (Thumb, 230 bytes, Stack size 28 bytes, memoryallocator.o(i.memalMemPackCut))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = memalMemPackCut &rArr; memalBaseListByAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalBaseListByAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalEraseAllData
</UL>

<P><STRONG><a name="[13d]"></a>memalWriteBLK</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, memoryallocator.o(i.memalWriteBLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = memalWriteBLK &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflFlashWriteBlock
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalFillBLK
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpInstrumentAddByte
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpAllocateInstrument
</UL>

<P><STRONG><a name="[12e]"></a>rb_IntToHEX</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rb_util.o(i.rb_IntToHEX))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerGetPatDataSTR
</UL>

<P><STRONG><a name="[ea]"></a>rb_IntToProc</STRONG> (Thumb, 410 bytes, Stack size 56 bytes, rb_util.o(i.rb_IntToProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rb_IntToProc
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_DEC
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_HEX
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_IntToStr
</UL>

<P><STRONG><a name="[8d]"></a>rb_IntToStr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rb_util.o(i.rb_IntToStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rb_IntToStr &rArr; rb_IntToProc
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_IntToProc
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WildConvertDateToString
</UL>

<P><STRONG><a name="[144]"></a>rb_fifo_clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rb_fifo.o(i.rb_fifo_clear))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmClear
</UL>

<P><STRONG><a name="[106]"></a>rb_fifo_flush</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rb_fifo.o(i.rb_fifo_flush))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_RS_Init
</UL>

<P><STRONG><a name="[ba]"></a>rb_fifo_free</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rb_fifo.o(i.rb_fifo_free))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListProcADD
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_FREEBusy
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFifoOUwrFree
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFifoOUwrB
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Buf
</UL>

<P><STRONG><a name="[da]"></a>rb_fifo_rd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rb_fifo.o(i.rb_fifo_rd))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RS_Byte
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[bc]"></a>rb_fifo_rd_D</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, rb_fifo.o(i.rb_fifo_rd_D))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rb_fifo_rd_D
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListProcRoll
</UL>

<P><STRONG><a name="[d9]"></a>rb_fifo_size</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rb_fifo.o(i.rb_fifo_size))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_RS_Init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_FREEBusy
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RS_Size
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RS_Byte
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFifoINwrSize
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Hold
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Buf
</UL>

<P><STRONG><a name="[e2]"></a>rb_fifo_wr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rb_fifo.o(i.rb_fifo_wr))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_wr
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_B
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_wr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFifoOUwrB
</UL>

<P><STRONG><a name="[bb]"></a>rb_fifo_wr_D</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, rb_fifo.o(i.rb_fifo_wr_D))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rb_fifo_wr_D &rArr; rb_fifo_wr_blk
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_wr_blk
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListProcADD
</UL>

<P><STRONG><a name="[e5]"></a>rb_fifo_wr_blk</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, rb_fifo.o(i.rb_fifo_wr_blk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rb_fifo_wr_blk
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_wr_D
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_Buf
</UL>

<P><STRONG><a name="[ad]"></a>wsPoolDigitalPlayer</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, chipay_ws_process.o(i.wsPoolDigitalPlayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = wsPoolDigitalPlayer &rArr; cayDigPlayerPool &rArr; cayDigPlayerSTEP &rArr; XM_Player_STEP &rArr; PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerPool
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoProc
</UL>

<P><STRONG><a name="[aa]"></a>wsPoolFlasherMode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, chipay_ws_process.o(i.wsPoolFlasherMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = wsPoolFlasherMode &rArr; chayBootFlashDo &rArr; bflImageFinish &rArr; bflImageAddBlock &rArr; bflImageAddBlockA &rArr; bflFlashWriteBlock &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chayBootFlashDo
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoProc
</UL>

<P><STRONG><a name="[ac]"></a>wsPoolStreamMode</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, chipay_ws_process.o(i.wsPoolStreamMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = wsPoolStreamMode &rArr; cayStrmPool &rArr; cayDigPlayerPool &rArr; cayDigPlayerSTEP &rArr; XM_Player_STEP &rArr; PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmPool
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoProc
</UL>

<P><STRONG><a name="[ab]"></a>wsPoolTransMode</STRONG> (Thumb, 484 bytes, Stack size 8 bytes, chipay_ws_process.o(i.wsPoolTransMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = wsPoolTransMode &rArr; Uart_RS_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prcAYRprcR0E (via Veneer)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hdGPIO_Setup
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_IOConfig
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoAyBusUpdate (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_RS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoProc
</UL>

<P><STRONG><a name="[a1]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chipAY_InterruptConfig (via Veneer)
</UL>

<P><STRONG><a name="[88]"></a>toupper</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, toupper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextVar (via Veneer)
</UL>

<P><STRONG><a name="[f8]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_rd_D (via Veneer)
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalWriteBLK (via Veneer)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMalBaseRec (via Veneer)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rb_fifo_wr_blk (via Veneer)
</UL>

<P><STRONG><a name="[be]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageAddBlockA (via Veneer)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerGetPatDataSTR (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerFrCalc (via Veneer)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMalBaseRec (via Veneer)
</UL>

<P><STRONG><a name="[19d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalFillBLK (via Veneer)
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpAllocateInstrumentCreatBlank (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[19e]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[19f]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bflImageStart (via Veneer)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalMemDescAllocate (via Veneer)
</UL>

<P><STRONG><a name="[12c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalInit (via Veneer)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerPool (via Veneer)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerInit (via Veneer)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerExtractLine (via Veneer)
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalDescInit (via Veneer)
</UL>

<P><STRONG><a name="[1a0]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[8e]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WildConvertDateToString (via Veneer)
</UL>

<P><STRONG><a name="[8c]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_String (via Veneer)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WildConvertDateToString (via Veneer)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMalBaseRec (via Veneer)
</UL>

<P><STRONG><a name="[89]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextVar (via Veneer)
</UL>

<P><STRONG><a name="[c5]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerFrCalc (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>

<P><STRONG><a name="[c4]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerFrCalc (via Veneer)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[179]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerFrCalc (via Veneer)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpCalcFreq (via Veneer)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerFrCalc (via Veneer)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpCalcFreq (via Veneer)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[c3]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerFrCalc (via Veneer)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpCalcFreq (via Veneer)
</UL>

<P><STRONG><a name="[10f]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP (via Veneer)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpCalcFreq (via Veneer)
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigSmpCalcFreq (via Veneer)
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerFrCalc (via Veneer)
</UL>

<P><STRONG><a name="[1a1]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP (via Veneer)
</UL>

<P><STRONG><a name="[10e]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XM_Player_STEP (via Veneer)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerFrCalc (via Veneer)
</UL>

<P><STRONG><a name="[174]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[1a2]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[173]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[1a3]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[176]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1a4]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[1a5]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[17a]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[1a6]"></a>_float_epilogue</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[178]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[177]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[189]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[1a7]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[17c]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[1a8]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1a9]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>ChipAY_ArmInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, chipay.o(RAMCODE))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[17f]"></a>ChipAY_TiksARM</STRONG> (Thumb, 430 bytes, Stack size 20 bytes, chipay.o(RAMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ChipAY_TiksARM
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipAY_DacStep
</UL>

<P><STRONG><a name="[17d]"></a>ChipAY_DacStep</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, chipay_hardware.o(RAMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ChipAY_DacStep &rArr; ChipAY_Mixer
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayDigPlayerStreamGet (via Veneer)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipAY_Mixer
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipAY_TiksARM
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1aa]"></a>SchekBootMode</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, chipay_hardware.o(RAMCODE), UNUSED)

<P><STRONG><a name="[2a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, chipay_hardware.o(RAMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TIM4_IRQHandler &rArr; ChipAY_DacStep &rArr; ChipAY_Mixer
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit (via Veneer)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipAY_DacStep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[182]"></a>ChipAY_WriteReg</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, chipay_wildsound.o(RAMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChipAY_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipAY_Init
</UL>

<P><STRONG><a name="[167]"></a>ChipAY_Init</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, chipay_wildsound.o(RAMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ChipAY_Init &rArr; ChipAY_WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipAY_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[17e]"></a>ChipAY_Mixer</STRONG> (Thumb, 644 bytes, Stack size 36 bytes, chipay_wildsound.o(RAMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ChipAY_Mixer
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipAY_DacStep
</UL>

<P><STRONG><a name="[183]"></a>JumpToBootloader</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, chipay_main.o(RAMCODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit (via Veneer)
</UL>

<P><STRONG><a name="[168]"></a>chMain</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, chipay_main.o(RAMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = chMain &rArr; DoProc &rArr; wsPoolStreamMode &rArr; cayStrmPool &rArr; cayDigPlayerPool &rArr; cayDigPlayerSTEP &rArr; XM_Player_STEP &rArr; PerFrCalc &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListProcADD (via Veneer)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoProc (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMS_CheckContinue (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[18a]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[c0]"></a>__hardfp_pow</STRONG> (Thumb, 3132 bytes, Stack size 184 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerFrCalc (via Veneer)
</UL>

<P><STRONG><a name="[188]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[187]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[184]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[186]"></a>fabs</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[16f]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memalInit (via Veneer)
</UL>

<P><STRONG><a name="[185]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[18b]"></a>EXTI01_extProc</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoAyBusReg
</UL>

<P><STRONG><a name="[29]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>prcAY0prcR00</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[65]"></a>prcAY0prcR02</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[66]"></a>prcAY0prcR04</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[67]"></a>prcAY0prcR06</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[69]"></a>prcAY0prcR0B</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[6a]"></a>prcAY0prcR0D</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[6c]"></a>prcAY0prcR18</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[6d]"></a>prcAY0prcR19</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[6e]"></a>prcAY0prcR1A</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[6f]"></a>prcAY1prcR00</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[70]"></a>prcAY1prcR02</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[71]"></a>prcAY1prcR04</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[72]"></a>prcAY1prcR06</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[73]"></a>prcAY1prcR0B</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[74]"></a>prcAY1prcR0D</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[75]"></a>prcAY1prcR18</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[76]"></a>prcAY1prcR19</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[77]"></a>prcAY1prcR1A</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[79]"></a>prcAYRprcR0E</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolTransMode (via Veneer)
</UL>

<P><STRONG><a name="[6b]"></a>prcAYWprcR0E</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[68]"></a>prcAYprcNULL</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR>[Address Reference Count : 1]<UL><LI> chipay_interrupt.o(ccmram)
</UL>
<P><STRONG><a name="[7a]"></a>EXT_DoAyBusUpdate</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wsPoolTransMode (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler (via Veneer)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[7b]"></a>EXT_DoWsReadStopString</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram), UNUSED, KEPT)

<P><STRONG><a name="[7c]"></a>EXT_DoWsStreamCalcCRCstp</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, chipay_interrupt.o(ccmram), UNUSED, KEPT)

<P><STRONG><a name="[7d]"></a>EXT_DoWsStreamCalcCRC</STRONG> (Thumb, 86 bytes, Stack size 4 bytes, chipay_interrupt.o(ccmram), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EXT_DoWsStreamCalcCRC
</UL>

<P><STRONG><a name="[7e]"></a>EXT_DoWsStreamStatus</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, chipay_interrupt.o(ccmram))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXT_DoWsStreamStatus &rArr; cayStrmFifoOUwrFree
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFlagGet (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFifoOUwrFree (via Veneer)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFifoINwrSize (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteAddr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsStreamGetStatusByte
</UL>

<P><STRONG><a name="[7f]"></a>EXT_DoWsStreamGetStatusByte</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, chipay_interrupt.o(ccmram))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXT_DoWsStreamGetStatusByte &rArr; EXT_DoWsStreamStatus &rArr; cayStrmFifoOUwrFree
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsStreamStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteAddr
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusReadData
</UL>

<P><STRONG><a name="[80]"></a>EXT_DoWsBusReadData</STRONG> (Thumb, 394 bytes, Stack size 8 bytes, chipay_interrupt.o(ccmram))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EXT_DoWsBusReadData &rArr; EXT_DoWsStreamGetStatusByte &rArr; EXT_DoWsStreamStatus &rArr; cayStrmFifoOUwrFree
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_FREEBusy (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RS_Size (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RS_Byte (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsStreamGetStatusByte
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoAyBusReg
</UL>

<P><STRONG><a name="[81]"></a>EXT_DoWsBusWriteAddr</STRONG> (Thumb, 514 bytes, Stack size 8 bytes, chipay_interrupt.o(ccmram))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EXT_DoWsBusWriteAddr &rArr; EXT_DoWsStreamGetStatusByte &rArr; EXT_DoWsStreamStatus &rArr; cayStrmFifoOUwrFree
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1ms_CounterUpdate (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_FREEBusy (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RS_Size (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsStreamGetStatusByte
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsStreamStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoAyBusReg
</UL>

<P><STRONG><a name="[82]"></a>EXT_DoWsBusWriteData</STRONG> (Thumb, 724 bytes, Stack size 32 bytes, chipay_interrupt.o(ccmram))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EXT_DoWsBusWriteData &rArr; Send_RS_B &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_FREEBusy (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_RS_B (via Veneer)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFlagSet (via Veneer)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFlagGet (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFifoOUwrFree (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmFifoOUwrB (via Veneer)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmCmdSet (via Veneer)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cayStrmClear (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoAyBusReg
</UL>

<P><STRONG><a name="[78]"></a>EXT_DoAyBusReg</STRONG> (Thumb, 340 bytes, Stack size 24 bytes, chipay_interrupt.o(ccmram))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EXT_DoAyBusReg &rArr; EXT_DoWsBusWriteData &rArr; Send_RS_B &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteData
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusWriteAddr
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_DoWsBusReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI01_extProcRobusCFG (via Veneer)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI01_extProc
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[fb]"></a>TI1_Config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[fd]"></a>TI2_Config</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, stm32f4xx_tim.o(i.TI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
